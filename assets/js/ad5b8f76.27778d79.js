"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[70076],{52501:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"plugins/story","title":"ElizaOS Story Protocol Plugin","description":"A plugin for ElizaOS that enables interaction with Story Protocol - a comprehensive IP management system on the blockchain that allows creators to register, license, and manage their intellectual property assets.","source":"@site/packages/plugins/story.md","sourceDirName":"plugins","slug":"/plugins/story","permalink":"/packages/plugins/story","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-starknet","permalink":"/packages/plugins/starknet"},"next":{"title":"@elizaos/plugin-sui","permalink":"/packages/plugins/sui"}}');var t=s(31085),l=s(71184);const r={},a="ElizaOS Story Protocol Plugin",o={},c=[{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Usage",id:"usage",level:2},{value:"Register IP Assets",id:"register-ip-assets",level:3},{value:"Attach License Terms",id:"attach-license-terms",level:3},{value:"View IP Details",id:"view-ip-details",level:3},{value:"View Available Licenses",id:"view-available-licenses",level:3},{value:"License IP Assets",id:"license-ip-assets",level:3},{value:"Supported Actions",id:"supported-actions",level:2},{value:"Story Protocol Integration",id:"story-protocol-integration",level:2},{value:"Technical Details",id:"technical-details",level:2},{value:"Wallet Integration",id:"wallet-integration",level:3},{value:"IPFS Storage",id:"ipfs-storage",level:3},{value:"License Terms",id:"license-terms",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Development",id:"development",level:2},{value:"Links and Resources",id:"links-and-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"elizaos-story-protocol-plugin",children:"ElizaOS Story Protocol Plugin"})}),"\n",(0,t.jsx)(n.p,{children:"A plugin for ElizaOS that enables interaction with Story Protocol - a comprehensive IP management system on the blockchain that allows creators to register, license, and manage their intellectual property assets."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IP Registration"}),": Register creative works as IP assets on Story Protocol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"License Management"}),": Attach license terms to IP assets with customizable commercial terms"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IP Licensing"}),": Mint license tokens for IP assets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Asset Information"}),": Fetch details about IP assets and available licenses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blockchain Integration"}),": Built-in wallet provider for Odyssey testnet"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before using this plugin, you'll need:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A Story Protocol private key (for Odyssey testnet)"}),"\n",(0,t.jsx)(n.li,{children:"A Pinata JWT token for IPFS storage"}),"\n",(0,t.jsx)(n.li,{children:"ElizaOS installed and configured"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"Install the plugin via npm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos-plugins/plugin-story\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or using bun:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bun add @elizaos-plugins/plugin-story\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Add the plugin to your ElizaOS agent configuration and provide the necessary credentials:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// agent.config.js\nexport default {\n  // Other ElizaOS configuration\n  plugins: ['story'],\n  settings: {\n    STORY_PRIVATE_KEY: '0x...', // Your Story Protocol private key\n    PINATA_JWT: '...', // Your Pinata JWT token\n  },\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"STORY_PRIVATE_KEY"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Private key for Story Protocol (Odyssey testnet)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PINATA_JWT"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"JWT token for Pinata IPFS storage"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Once configured, the plugin provides the following actions:"}),"\n",(0,t.jsx)(n.h3,{id:"register-ip-assets",children:"Register IP Assets"}),"\n",(0,t.jsx)(n.p,{children:"Register a creative work as an IP asset on Story Protocol:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"User: I'd like to register a short story I wrote called \"The Digital Forest\"\nAgent: Great! What's the description for your IP?\nUser: It's a sci-fi story about a forest that exists in cyberspace\nAgent: I'll register \"The Digital Forest\" as an IP asset on Story Protocol.\n*Agent registers IP and provides transaction details*\n"})}),"\n",(0,t.jsx)(n.h3,{id:"attach-license-terms",children:"Attach License Terms"}),"\n",(0,t.jsx)(n.p,{children:"Attach licensing terms to your IP assets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"User: I want to create a license for my IP asset at 0x1234...\nAgent: What kind of license would you like to attach?\nUser: I want commercial use allowed with 10% revenue share\nAgent: I'll attach those license terms to your IP asset.\n*Agent attaches license terms and provides transaction details*\n"})}),"\n",(0,t.jsx)(n.h3,{id:"view-ip-details",children:"View IP Details"}),"\n",(0,t.jsx)(n.p,{children:"Get detailed information about an IP asset:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"User: Can you tell me about IP asset 0x1234...\nAgent: Here are the details about that IP asset:\n*Agent displays IP asset details*\n"})}),"\n",(0,t.jsx)(n.h3,{id:"view-available-licenses",children:"View Available Licenses"}),"\n",(0,t.jsx)(n.p,{children:"See what licenses are available for an IP asset:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"User: What licenses are available for IP asset 0x1234...\nAgent: Here are the available licenses for this IP asset:\n*Agent displays available licenses*\n"})}),"\n",(0,t.jsx)(n.h3,{id:"license-ip-assets",children:"License IP Assets"}),"\n",(0,t.jsx)(n.p,{children:"Mint license tokens for IP assets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"User: I want to license the IP asset at 0x1234...\nAgent: Which license terms would you like to use?\nUser: License terms ID 5\nAgent: I'll mint that license for you.\n*Agent mints license token and provides transaction details*\n"})}),"\n",(0,t.jsx)(n.h2,{id:"supported-actions",children:"Supported Actions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Action"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"REGISTER_IP"})}),(0,t.jsx)(n.td,{children:"Register a new IP asset on Story Protocol"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ATTACH_TERMS"})}),(0,t.jsx)(n.td,{children:"Attach license terms to an existing IP asset"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LICENSE_IP"})}),(0,t.jsx)(n.td,{children:"Mint license tokens for an IP asset"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GET_IP_DETAILS"})}),(0,t.jsx)(n.td,{children:"Fetch details about an IP asset"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GET_AVAILABLE_LICENSES"})}),(0,t.jsx)(n.td,{children:"List available licenses for an IP asset"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"story-protocol-integration",children:"Story Protocol Integration"}),"\n",(0,t.jsx)(n.p,{children:"This plugin integrates with Story Protocol on the Odyssey testnet, which provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"On-chain IP registration"}),"\n",(0,t.jsx)(n.li,{children:"Programmable licensing with configurable commercial terms"}),"\n",(0,t.jsx)(n.li,{children:"Creator attribution and revenue sharing"}),"\n",(0,t.jsx)(n.li,{children:"IP relationship tracking"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"technical-details",children:"Technical Details"}),"\n",(0,t.jsx)(n.h3,{id:"wallet-integration",children:"Wallet Integration"}),"\n",(0,t.jsx)(n.p,{children:"The plugin includes a wallet provider that manages interactions with the Story Protocol blockchain. The wallet address is derived from the private key provided in the configuration."}),"\n",(0,t.jsx)(n.h3,{id:"ipfs-storage",children:"IPFS Storage"}),"\n",(0,t.jsx)(n.p,{children:"IP metadata is stored on IPFS using Pinata. The plugin automatically handles the upload and referencing of metadata when registering IP assets."}),"\n",(0,t.jsx)(n.h3,{id:"license-terms",children:"License Terms"}),"\n",(0,t.jsx)(n.p,{children:"When attaching license terms, you can configure:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Commercial use permissions"}),"\n",(0,t.jsx)(n.li,{children:"Revenue sharing percentages"}),"\n",(0,t.jsx)(n.li,{children:"Minting fees"}),"\n",(0,t.jsx)(n.li,{children:"Attribution requirements"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Transaction Errors"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure your private key has sufficient funds on the Odyssey testnet"}),"\n",(0,t.jsx)(n.li,{children:"Check for valid IP IDs and license term IDs"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IPFS Upload Failures"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Verify your Pinata JWT token is valid and has not expired"}),"\n",(0,t.jsx)(n.li,{children:"Ensure proper network connectivity"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"License Attachment Failures"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An IP asset must be registered before attaching license terms"}),"\n",(0,t.jsx)(n.li,{children:"Commercial revenue share must be between 0-100 percent"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.p,{children:"For developers wanting to extend the plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install dependencies\nbun install\n\n# Run tests\nbun test\n\n# Build the plugin\nbun build\n\n# Lint code\nbun lint\n\n# Format code\nbun format:fix\n"})}),"\n",(0,t.jsx)(n.h2,{id:"links-and-resources",children:"Links and Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.storyprotocol.xyz",children:"Story Protocol Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://odyssey.storyscan.xyz",children:"Odyssey Testnet Explorer"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.pinata.cloud/",children:"Pinata IPFS"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(14041);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);