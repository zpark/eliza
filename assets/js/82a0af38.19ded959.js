"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[25134],{67757:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"core/actions","title":"\u26a1 Actions","description":"Actions define how agents respond to and interact with messages. They enable agents to perform tasks beyond simple message responses by integrating with external systems and modifying behavior.","source":"@site/versioned_docs/version-0.25.9/core/actions.md","sourceDirName":"core","slug":"/core/actions","permalink":"/docs/0.25.9/core/actions","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/versioned_docs/version-0.25.9/core/actions.md","tags":[],"version":"0.25.9","lastUpdatedBy":"madjin","lastUpdatedAt":1742171474000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"RAG Knowledge","permalink":"/docs/0.25.9/core/knowledge"},"next":{"title":"Evaluators","permalink":"/docs/0.25.9/core/evaluators"}}');var t=i(31085),a=i(71184);const c={sidebar_position:6},r="\u26a1 Actions",o={},l=[{value:"Overview",id:"overview",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Basic Action Template",id:"basic-action-template",level:3},{value:"Character File Example",id:"character-file-example",level:4},{value:"Example Implementations",id:"example-implementations",level:2},{value:"Blockchain and Token Actions",id:"blockchain-and-token-actions",level:3},{value:"Cryptographic and Security Actions",id:"cryptographic-and-security-actions",level:3},{value:"Staking and Governance",id:"staking-and-governance",level:3},{value:"AI and Agent Management",id:"ai-and-agent-management",level:3},{value:"Media and Content Generation",id:"media-and-content-generation",level:3},{value:"Decentralized Infrastructure (DePIN)",id:"decentralized-infrastructure-depin",level:3},{value:"Search and Information Retrieval",id:"search-and-information-retrieval",level:3},{value:"Blockchain and Trading",id:"blockchain-and-trading",level:3},{value:"Social and Communication",id:"social-and-communication",level:3},{value:"Utility Actions",id:"utility-actions",level:3},{value:"Image Generation Action",id:"image-generation-action",level:3},{value:"Basic Conversation Actions",id:"basic-conversation-actions",level:3},{value:"CONTINUE",id:"continue",level:4},{value:"IGNORE",id:"ignore",level:4},{value:"FAQ",id:"faq",level:2},{value:"What are Actions in Eliza?",id:"what-are-actions-in-eliza",level:3},{value:"How do Actions work?",id:"how-do-actions-work",level:3},{value:"What can Actions do?",id:"what-can-actions-do",level:3},{value:"What are some example Actions?",id:"what-are-some-example-actions",level:3},{value:"How do I create a custom Action?",id:"how-do-i-create-a-custom-action",level:3},{value:"What makes a good Action?",id:"what-makes-a-good-action",level:3},{value:"Can Actions be chained together?",id:"can-actions-be-chained-together",level:3},{value:"How are Actions different from tools?",id:"how-are-actions-different-from-tools",level:3},{value:"Where are Actions defined?",id:"where-are-actions-defined",level:3},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-actions",children:"\u26a1 Actions"})}),"\n",(0,t.jsx)(n.p,{children:"Actions define how agents respond to and interact with messages. They enable agents to perform tasks beyond simple message responses by integrating with external systems and modifying behavior."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Structure:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"An Action consists of:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": Unique identifier"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"similes"}),": Alternative names/triggers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description"}),": Purpose and usage explanation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"validate"}),": Function to check if action is appropriate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"handler"}),": Core implementation logic"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"examples"}),": Sample usage patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"suppressInitialMessage"}),": Optional flag to suppress initial response"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Validation:"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Checks if the action can be executed"}),"\n",(0,t.jsx)(n.li,{children:"Consider conversation state"}),"\n",(0,t.jsx)(n.li,{children:"Validate required"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface Action {\n  name: string;\n  similes: string[];\n  description: string;\n  examples: ActionExample[][];\n  handler: Handler;\n  validate: Validator;\n  suppressInitialMessage?: boolean;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/elizaOS/eliza/blob/main/packages/core/src/types.ts",children:"https://github.com/elizaOS/eliza/blob/main/packages/core/src/types.ts"})]}),"\n",(0,t.jsx)(n.h3,{id:"basic-action-template",children:"Basic Action Template"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const customAction: Action = {\n  name: 'CUSTOM_ACTION',\n  similes: ['ALTERNATE_NAME', 'OTHER_TRIGGER'],\n  description: 'Detailed description of when and how to use this action',\n  validate: async (runtime: IAgentRuntime, message: Memory) => {\n    // Validation logic\n    return true;\n  },\n  handler: async (runtime: IAgentRuntime, message: Memory) => {\n    // Implementation logic\n    return true;\n  },\n  examples: [\n    [\n      {\n        user: '{{user1}}',\n        content: { text: 'Trigger message' },\n      },\n      {\n        user: '{{user2}}',\n        content: { text: 'Response', action: 'CUSTOM_ACTION' },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"character-file-example",children:"Character File Example"}),"\n",(0,t.jsxs)(n.p,{children:["Actions can be used in character files as well. Here's an example from: ",(0,t.jsx)(n.a,{href:"https://github.com/elizaOS/characters/blob/main/sbf.character.json",children:"https://github.com/elizaOS/characters/blob/main/sbf.character.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'    "messageExamples": [\n        [\n            {\n                "user": "{{user1}}",\n                "content": {\n                    "text": "Can you help transfer some SOL?"\n                }\n            },\n            {\n                "user": "SBF",\n                "content": {\n                    "text": "yeah yeah for sure, sending SOL is pretty straightforward. just need the recipient and amount. everything else is basically fine, trust me.",\n                    "action": "SEND_SOL"\n                }\n            }\n        ],\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example-implementations",children:"Example Implementations"}),"\n",(0,t.jsxs)(n.p,{children:["Actions can be found across various plugins in the Eliza ecosystem, with a comprehensive collection available at ",(0,t.jsx)(n.a,{href:"https://github.com/elizaos-plugins",children:"https://github.com/elizaos-plugins"}),". Here are some notable examples:"]}),"\n",(0,t.jsx)(n.h3,{id:"blockchain-and-token-actions",children:"Blockchain and Token Actions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Transfers: ",(0,t.jsx)(n.code,{children:"SEND_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"SEND_SOL"}),", ",(0,t.jsx)(n.code,{children:"SEND_NEAR"}),", ",(0,t.jsx)(n.code,{children:"SEND_AVAIL"}),", ",(0,t.jsx)(n.code,{children:"SEND_TON"}),", ",(0,t.jsx)(n.code,{children:"SEND_TOKENS"}),", ",(0,t.jsx)(n.code,{children:"COSMOS_TRANSFER"}),", ",(0,t.jsx)(n.code,{children:"CROSS_CHAIN_TRANSFER"})]}),"\n",(0,t.jsxs)(n.li,{children:["Token Management: ",(0,t.jsx)(n.code,{children:"CREATE_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"GET_TOKEN_INFO"}),", ",(0,t.jsx)(n.code,{children:"GET_BALANCE"}),", ",(0,t.jsx)(n.code,{children:"GET_TOKEN_PRICE"}),", ",(0,t.jsx)(n.code,{children:"TOKEN_SWAP"}),", ",(0,t.jsx)(n.code,{children:"SWAP_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"EXECUTE_SPOT_TRADE"})]}),"\n",(0,t.jsxs)(n.li,{children:["Blockchain Interactions: ",(0,t.jsx)(n.code,{children:"READ_CONTRACT"}),", ",(0,t.jsx)(n.code,{children:"WRITE_CONTRACT"}),", ",(0,t.jsx)(n.code,{children:"DEPLOY_CONTRACT"}),", ",(0,t.jsx)(n.code,{children:"DEPLOY_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"GET_TRANSACTION"}),", ",(0,t.jsx)(n.code,{children:"GET_CURRENT_NONCE"}),", ",(0,t.jsx)(n.code,{children:"GET_CONTRACT_SCHEMA"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cryptographic-and-security-actions",children:"Cryptographic and Security Actions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Signature and Authentication: ",(0,t.jsx)(n.code,{children:"ECDSA_SIGN"}),", ",(0,t.jsx)(n.code,{children:"LIT_ACTION"}),", ",(0,t.jsx)(n.code,{children:"REMOTE_ATTESTATION"}),", ",(0,t.jsx)(n.code,{children:"AUTHENTICATE"})]}),"\n",(0,t.jsxs)(n.li,{children:["Wallet and Key Management: ",(0,t.jsx)(n.code,{children:"ERC20_TRANSFER"}),", ",(0,t.jsx)(n.code,{children:"WALLET_TRANSFER"}),", ",(0,t.jsx)(n.code,{children:"BRIDGE_OPERATIONS"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"staking-and-governance",children:"Staking and Governance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Staking Actions: ",(0,t.jsx)(n.code,{children:"STAKE"}),", ",(0,t.jsx)(n.code,{children:"DELEGATE_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"UNDELEGATE_TOKEN"}),", ",(0,t.jsx)(n.code,{children:"GET_STAKE_BALANCE"}),", ",(0,t.jsx)(n.code,{children:"TOKENS_REDELEGATE"})]}),"\n",(0,t.jsxs)(n.li,{children:["Governance Actions: ",(0,t.jsx)(n.code,{children:"VOTE_ON_PROPOSAL"}),", ",(0,t.jsx)(n.code,{children:"PROPOSE"}),", ",(0,t.jsx)(n.code,{children:"EXECUTE_PROPOSAL"}),", ",(0,t.jsx)(n.code,{children:"QUEUE_PROPOSAL"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"ai-and-agent-management",children:"AI and Agent Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Agent Creation: ",(0,t.jsx)(n.code,{children:"LAUNCH_AGENT"}),", ",(0,t.jsx)(n.code,{children:"START_SESSION"}),", ",(0,t.jsx)(n.code,{children:"CREATE_AND_REGISTER_AGENT"})]}),"\n",(0,t.jsxs)(n.li,{children:["AI-Specific Actions: ",(0,t.jsx)(n.code,{children:"GENERATE_IMAGE"}),", ",(0,t.jsx)(n.code,{children:"DESCRIBE_IMAGE"}),", ",(0,t.jsx)(n.code,{children:"GENERATE_VIDEO"}),", ",(0,t.jsx)(n.code,{children:"GENERATE_MUSIC"}),", ",(0,t.jsx)(n.code,{children:"GET_INFERENCE"}),", ",(0,t.jsx)(n.code,{children:"GENERATE_MEME"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"media-and-content-generation",children:"Media and Content Generation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Image and Multimedia: ",(0,t.jsx)(n.code,{children:"SEND_GIF"}),", ",(0,t.jsx)(n.code,{children:"GENERATE_3D"}),", ",(0,t.jsx)(n.code,{children:"GENERATE_COLLECTION"}),", ",(0,t.jsx)(n.code,{children:"MINT_NFT"}),", ",(0,t.jsx)(n.code,{children:"LIST_NFT"}),", ",(0,t.jsx)(n.code,{children:"SWEEP_FLOOR_NFT"})]}),"\n",(0,t.jsxs)(n.li,{children:["Audio and Voice: ",(0,t.jsx)(n.code,{children:"EXTEND_AUDIO"}),", ",(0,t.jsx)(n.code,{children:"CREATE_TTS"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"decentralized-infrastructure-depin",children:"Decentralized Infrastructure (DePIN)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Project Interactions: ",(0,t.jsx)(n.code,{children:"DEPIN_TOKENS"}),", ",(0,t.jsx)(n.code,{children:"DEPIN_ON_CHAIN"}),", ",(0,t.jsx)(n.code,{children:"ANALYZE_DEPIN_PROJECTS"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"search-and-information-retrieval",children:"Search and Information Retrieval"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Data Search: ",(0,t.jsx)(n.code,{children:"WEB_SEARCH"}),", ",(0,t.jsx)(n.code,{children:"GET_TOKEN_PRICE_BY_ADDRESS"}),", ",(0,t.jsx)(n.code,{children:"GET_TRENDING_POOLS"}),", ",(0,t.jsx)(n.code,{children:"GET_NEW_COINS"}),", ",(0,t.jsx)(n.code,{children:"GET_MARKETS"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"blockchain-and-trading",children:"Blockchain and Trading"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Specialized Actions: ",(0,t.jsx)(n.code,{children:"GET_QUOTE_0X"}),", ",(0,t.jsx)(n.code,{children:"EXECUTE_SWAP_0X"}),", ",(0,t.jsx)(n.code,{children:"CANCEL_ORDERS"}),", ",(0,t.jsx)(n.code,{children:"GET_INDICATIVE_PRICE"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"social-and-communication",children:"Social and Communication"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Platform Interactions: ",(0,t.jsx)(n.code,{children:"TWEET"}),", ",(0,t.jsx)(n.code,{children:"POST_TWEET"}),", ",(0,t.jsx)(n.code,{children:"QUOTE"}),", ",(0,t.jsx)(n.code,{children:"JOIN_VOICE"}),", ",(0,t.jsx)(n.code,{children:"LEAVE_VOICE"}),", ",(0,t.jsx)(n.code,{children:"TRANSCRIBE_MEDIA"}),", ",(0,t.jsx)(n.code,{children:"SUMMARIZE_CONVERSATION"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"utility-actions",children:"Utility Actions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["General Utilities: ",(0,t.jsx)(n.code,{children:"FAUCET"}),", ",(0,t.jsx)(n.code,{children:"SUBMIT_DATA"}),", ",(0,t.jsx)(n.code,{children:"PRICE_CHECK"}),", ",(0,t.jsx)(n.code,{children:"WEATHER"}),", ",(0,t.jsx)(n.code,{children:"NEWS"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Check out the ",(0,t.jsx)(n.a,{href:"https://github.com/elizaos-plugins",children:"ElizaOS Plugins org"})," on GitHub if interested in studying or using any of these."]}),"\n",(0,t.jsx)(n.h3,{id:"image-generation-action",children:"Image Generation Action"}),"\n",(0,t.jsx)(n.p,{children:"Here's a comprehensive example of an image generation action:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Action, IAgentRuntime, Memory, State } from '@elizaos/core';\n\n// Example image generation action\nconst generateImageAction: Action = {\n  name: 'GENERATE_IMAGE',\n  similes: ['CREATE_IMAGE', 'MAKE_IMAGE', 'DRAW'],\n  description: \"Generates an image based on the user's description\",\n  suppressInitialMessage: true, // Suppress initial response since we'll generate our own\n\n  // Validate if this action should be used\n  validate: async (runtime: IAgentRuntime, message: Memory) => {\n    const text = message.content.text.toLowerCase();\n    // Check if message contains image generation triggers\n    return (\n      text.includes('generate') ||\n      text.includes('create') ||\n      text.includes('draw') ||\n      text.includes('make an image')\n    );\n  },\n\n  // Handle the action execution\n  handler: async (runtime: IAgentRuntime, message: Memory, state?: State) => {\n    try {\n      // Get image service\n      const imageService = runtime.getService(ServiceType.IMAGE_GENERATION);\n\n      // Generate image\n      const imageUrl = await imageService.generateImage(message.content.text);\n\n      // Create response with generated image\n      await runtime.messageManager.createMemory({\n        id: generateId(),\n        content: {\n          text: \"Here's the image I generated:\",\n          attachments: [\n            {\n              type: 'image',\n              url: imageUrl,\n            },\n          ],\n        },\n        userId: runtime.agentId,\n        roomId: message.roomId,\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Image generation failed:', error);\n      return false;\n    }\n  },\n\n  // Example usage patterns\n  examples: [\n    [\n      {\n        user: '{{user1}}',\n        content: {\n          text: 'Can you generate an image of a sunset?',\n        },\n      },\n      {\n        user: '{{user2}}',\n        content: {\n          text: \"I'll create that image for you\",\n          action: 'GENERATE_IMAGE',\n        },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"basic-conversation-actions",children:"Basic Conversation Actions"}),"\n",(0,t.jsxs)(n.p,{children:["You can find these samples in the plugin-bootstrap package: ",(0,t.jsx)(n.a,{href:"https://github.com/elizaOS/eliza/tree/main/packages/plugin-bootstrap/src/actions",children:"https://github.com/elizaOS/eliza/tree/main/packages/plugin-bootstrap/src/actions"})]}),"\n",(0,t.jsx)(n.h4,{id:"continue",children:"CONTINUE"}),"\n",(0,t.jsx)(n.p,{children:"For continuing conversations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const continueAction: Action = {\n  name: 'CONTINUE',\n  similes: ['ELABORATE', 'GO_ON'],\n  description: 'Continues the conversation when appropriate',\n\n  validate: async (runtime: IAgentRuntime, message: Memory) => {\n    // Check if message warrants continuation\n    const text = message.content.text.toLowerCase();\n    return (\n      text.includes('tell me more') ||\n      text.includes('what else') ||\n      text.includes('continue') ||\n      text.endsWith('?')\n    );\n  },\n\n  handler: async (runtime: IAgentRuntime, message: Memory, state?: State) => {\n    // Get recent conversation context\n    const recentMessages = await runtime.messageManager.getMemories({\n      roomId: message.roomId,\n      count: 5,\n    });\n\n    // Generate contextual response\n    const response = await runtime.generateResponse(message, recentMessages, state);\n\n    // Store response\n    await runtime.messageManager.createMemory({\n      id: generateId(),\n      content: response,\n      userId: runtime.agentId,\n      roomId: message.roomId,\n    });\n\n    return true;\n  },\n\n  examples: [\n    [\n      {\n        user: '{{user1}}',\n        content: { text: 'Tell me more about that' },\n      },\n      {\n        user: '{{user2}}',\n        content: {\n          text: \"I'll continue explaining...\",\n          action: 'CONTINUE',\n        },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"ignore",children:"IGNORE"}),"\n",(0,t.jsx)(n.p,{children:"For ending conversations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const ignoreAction: Action = {\n  name: 'IGNORE',\n  similes: ['STOP_TALKING', 'END_CONVERSATION'],\n  description: 'Stops responding when conversation is complete or irrelevant',\n\n  validate: async (runtime: IAgentRuntime, message: Memory) => {\n    const text = message.content.text.toLowerCase();\n    return (\n      text.includes('goodbye') || text.includes('bye') || text.includes('thanks') || text.length < 2\n    );\n  },\n\n  handler: async (runtime: IAgentRuntime, message: Memory) => {\n    // No response needed\n    return true;\n  },\n\n  examples: [\n    [\n      {\n        user: '{{user1}}',\n        content: { text: 'Thanks, goodbye!' },\n      },\n      {\n        user: '{{user2}}',\n        content: {\n          text: '',\n          action: 'IGNORE',\n        },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(n.h3,{id:"what-are-actions-in-eliza",children:"What are Actions in Eliza?"}),"\n",(0,t.jsx)(n.p,{children:"Actions are core building blocks that define how agents interact with messages and perform tasks beyond simple text responses."}),"\n",(0,t.jsx)(n.h3,{id:"how-do-actions-work",children:"How do Actions work?"}),"\n",(0,t.jsx)(n.p,{children:"Actions consist of a name, description, validation function, and handler function that determine when and how an agent can perform a specific task."}),"\n",(0,t.jsx)(n.h3,{id:"what-can-actions-do",children:"What can Actions do?"}),"\n",(0,t.jsx)(n.p,{children:"Actions enable agents to interact with external systems, modify behavior, process complex workflows, and extend capabilities beyond conversational responses."}),"\n",(0,t.jsx)(n.h3,{id:"what-are-some-example-actions",children:"What are some example Actions?"}),"\n",(0,t.jsx)(n.p,{children:"Common actions include CONTINUE (extend dialogue), IGNORE (end conversation), GENERATE_IMAGE (create images), TRANSFER (move tokens), and READ_CONTRACT (retrieve blockchain data)."}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-create-a-custom-action",children:"How do I create a custom Action?"}),"\n",(0,t.jsx)(n.p,{children:"Define an action with a unique name, validation function to check eligibility, handler function to implement the logic, and provide usage examples."}),"\n",(0,t.jsx)(n.h3,{id:"what-makes-a-good-action",children:"What makes a good Action?"}),"\n",(0,t.jsx)(n.p,{children:"A good action has a clear, single purpose, robust input validation, comprehensive error handling, and provides meaningful interactions."}),"\n",(0,t.jsx)(n.h3,{id:"can-actions-be-chained-together",children:"Can Actions be chained together?"}),"\n",(0,t.jsx)(n.p,{children:"Yes, actions can be composed and chained to create complex workflows and multi-step interactions."}),"\n",(0,t.jsx)(n.h3,{id:"how-are-actions-different-from-tools",children:"How are Actions different from tools?"}),"\n",(0,t.jsx)(n.p,{children:"Actions are more comprehensive, ensuring the entire process happens, while tools are typically more focused on specific, discrete operations."}),"\n",(0,t.jsx)(n.h3,{id:"where-are-actions-defined",children:"Where are Actions defined?"}),"\n",(0,t.jsx)(n.p,{children:"Actions can be defined in character files, plugins, or directly in agent configurations."}),"\n",(0,t.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/0.25.9/core/characterfile",children:"characterfile"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/0.25.9/core/providers",children:"providers"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(14041);const t={},a=s.createContext(t);function c(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);