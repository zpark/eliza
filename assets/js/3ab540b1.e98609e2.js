"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[72455],{5550:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tutorials/nader_tutorial_35min","title":"How to Build an API Plugin","description":"This guide walks you through creating a custom plugin for the Eliza AI framework that integrates with NASA\'s API to fetch space photos. You\'ll learn how to set up the project structure, implement the required components, and test your plugin across different interfaces.","source":"@site/versioned_docs/version-0.25.9/tutorials/nader_tutorial_35min.md","sourceDirName":"tutorials","slug":"/tutorials/nader_tutorial_35min","permalink":"/docs/0.25.9/tutorials/nader_tutorial_35min","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/versioned_docs/version-0.25.9/tutorials/nader_tutorial_35min.md","tags":[],"version":"0.25.9","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749617711000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Build Social Agents in 15min","permalink":"/docs/0.25.9/tutorials/nader_tutorial_15min"},"next":{"title":"Overview","permalink":"/docs/0.25.9/core/overview"}}');var r=i(31085),s=i(71184);const o={},a="How to Build an API Plugin",l={},c=[{value:"Video Tutorial",id:"video-tutorial",level:2},{value:"Why Build Plugins?",id:"why-build-plugins",level:2},{value:"Development Approaches",id:"development-approaches",level:2},{value:"Option 1: Using the Starter Template",id:"option-1-using-the-starter-template",level:3},{value:"Option 2: Building from Scratch",id:"option-2-building-from-scratch",level:3},{value:"Project Structure",id:"project-structure",level:3},{value:"Setup Steps",id:"setup-steps",level:2},{value:"Core Components",id:"core-components",level:2},{value:"Types",id:"types",level:3},{value:"Plugin Entry",id:"plugin-entry",level:3},{value:"Actions",id:"actions",level:3},{value:"Services",id:"services",level:3},{value:"Environment Configuration",id:"environment-configuration",level:3},{value:"Testing Your Plugin",id:"testing-your-plugin",level:2},{value:"Development Testing",id:"development-testing",level:3},{value:"Production Testing",id:"production-testing",level:3},{value:"FAQ",id:"faq",level:2},{value:"How should I handle errors in my plugin?",id:"how-should-i-handle-errors-in-my-plugin",level:3},{value:"What&#39;s the best way to ensure type safety?",id:"whats-the-best-way-to-ensure-type-safety",level:3},{value:"How should I organize my plugin code?",id:"how-should-i-organize-my-plugin-code",level:3},{value:"Why isn&#39;t my plugin loading?",id:"why-isnt-my-plugin-loading",level:3},{value:"Why isn&#39;t my action triggering?",id:"why-isnt-my-action-triggering",level:3},{value:"What should I do if I have API integration issues?",id:"what-should-i-do-if-i-have-api-integration-issues",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-build-an-api-plugin",children:"How to Build an API Plugin"})}),"\n",(0,r.jsx)(n.p,{children:"This guide walks you through creating a custom plugin for the Eliza AI framework that integrates with NASA's API to fetch space photos. You'll learn how to set up the project structure, implement the required components, and test your plugin across different interfaces."}),"\n",(0,r.jsx)(n.h2,{id:"video-tutorial",children:"Video Tutorial"}),"\n",(0,r.jsx)("div",{className:"responsive-iframe",children:(0,r.jsx)("iframe",{src:"https://www.youtube.com/embed/25FxjscBHuo",title:"YouTube video player",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})}),"\n",(0,r.jsxs)(n.p,{children:["Code: ",(0,r.jsx)(n.a,{href:"https://github.com/dabit3/eliza-nasa-plugin",children:"https://github.com/dabit3/eliza-nasa-plugin"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Timestamps"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"0:00"})," - Introduction to Eliza plugins and their importance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"3:36"})," - Overview of the NASA API plugin we'll be building"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"6:40"})," - Setting up the project structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"12:26"})," - Creating the basic plugin files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"18:64"})," - Understanding plugin components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"32:84"})," - Implementing the NASA API service"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"43:22"})," - Setting up environment variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"59:12"})," - Testing the plugin in web interface"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"1:15:00"})," - Testing the plugin with Twitter integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"why-build-plugins",children:"Why Build Plugins?"}),"\n",(0,r.jsx)(n.p,{children:"Plugins are powerful extensions to the Eliza framework that allow you to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Integrate custom functionality into agent workflows"}),"\n",(0,r.jsx)(n.li,{children:"Share reusable components with other developers"}),"\n",(0,r.jsx)(n.li,{children:"Expand the capabilities of your AI agents"}),"\n",(0,r.jsx)(n.li,{children:"Distribute your software products to developers"}),"\n",(0,r.jsx)(n.li,{children:"Take advantage of growing opportunities in the agent space"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-approaches",children:"Development Approaches"}),"\n",(0,r.jsx)(n.p,{children:"You have two options for developing an Eliza plugin:"}),"\n",(0,r.jsx)(n.h3,{id:"option-1-using-the-starter-template",children:"Option 1: Using the Starter Template"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Untested in over a month, this might not work!"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/elizaOS/eliza-plugin-starter.git\ncd eliza-plugin-starter\npnpm install\npnpm tsc\npnpm mock-eliza --characters=./characters/eternalai.character.json\n"})}),"\n",(0,r.jsx)(n.h3,{id:"option-2-building-from-scratch",children:"Option 2: Building from Scratch"}),"\n",(0,r.jsx)(n.p,{children:"If you prefer to understand every component by building from scratch (as shown in the video tutorial), follow the manual setup process below."}),"\n",(0,r.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.p,{children:"For building from scratch, your project structure will look like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"plugin-name/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tsconfig.json\n\u251c\u2500\u2500 tsup.config.ts\n\u2514\u2500\u2500 src/\n    \u251c\u2500\u2500 index.ts          # Main plugin entry\n    \u251c\u2500\u2500 types.ts          # Type definitions\n    \u251c\u2500\u2500 environment.ts    # Environment config\n    \u251c\u2500\u2500 services/         # API services\n    \u251c\u2500\u2500 actions/          # Plugin actions\n    \u2514\u2500\u2500 examples/         # Usage examples\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["When using the starter template, you'll find additional directories like ",(0,r.jsx)(n.code,{children:"common/"})," for shared utilities and mocked client capabilities for testing."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setup-steps",children:"Setup Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create and Initialize Project"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create project directory\nmkdir eliza-plugin-nasa\ncd eliza-plugin-nasa\n\n# Clone Eliza repository\ngit clone git@github.com:elizaOS/eliza.git\ncd eliza\ngit checkout $(git describe --tags --abbrev=0)\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create Project Directory"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd packages\nmkdir eliza-plugin-nasa\ncd eliza-plugin-nasa\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create Base Configuration Files"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "@elizaos/plugin-nasa",\n  "version": "1.0.0",\n  "main": "dist/index.js",\n  "types": "dist/index.d.ts",\n  "dependencies": {\n    "@elizaos/core": "latest"\n  },\n  "peerDependencies": {\n    "@elizaos/core": "^1.0.0"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"tsconfig.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "extends": "../../tsconfig.json",\n  "compilerOptions": {\n    "outDir": "./dist",\n    "rootDir": "./src"\n  },\n  "include": ["src"]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"tsup.config.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { defineConfig } from 'tsup';\n\nexport default defineConfig({\n  entry: ['src/index.ts'],\n  format: ['cjs', 'esm'],\n  dts: true,\n  splitting: false,\n  sourcemap: true,\n  clean: true,\n});\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create Project Structure"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create directories\nmkdir src\nmkdir src/actions\n\n# Create essential files\ntouch package.json tsconfig.json tsup.config.ts\ntouch src/index.ts src/types.ts src/examples.ts\ntouch src/services.ts src/environment.ts\ntouch src/actions/getMarsRoverPhoto.ts src/actions/getApod.ts\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Configure Character File"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"src/characters/natter.character.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ModelProviderName, Clients } from '@elizaos/core';\nimport { nasaPlugin } from '@elizaos/plugin-nasa';\n\nexport const mainCharacter = {\n  name: 'sound_craft_',\n  clients: [Clients.TWITTER],\n  modelProvider: ModelProviderName.HYPERBOLIC,\n  plugins: [nasaPlugin],\n  // ... rest of character configuration\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See example: ",(0,r.jsx)(n.a,{href:"https://github.com/dabit3/eliza-nasa-plugin/blob/main/agent/src/nader.character.ts",children:"https://github.com/dabit3/eliza-nasa-plugin/blob/main/agent/src/nader.character.ts"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,r.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.code,{children:"src/types.ts"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ApodResponse {\n  url: string;\n  title: string;\n  explanation: string;\n  date: string;\n}\n\ninterface MarsRoverResponse {\n  photos: Array<{\n    img_src: string;\n    earth_date: string;\n    camera: {\n      name: string;\n    };\n  }>;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"plugin-entry",children:"Plugin Entry"}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.code,{children:"src/index.ts"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import type { Plugin } from '@elizaos/core';\nimport { getMarsRoverPhoto } from './actions/getMarsRoverPhoto';\nimport { getApod } from './actions/getApod';\n\nexport const nasaPlugin: Plugin = {\n  name: 'nasa-plugin',\n  description: 'NASA API integration for space photos',\n  actions: [getMarsRoverPhoto, getApod],\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(n.p,{children:"Actions define how your plugin responds to messages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Action, IAgentRuntime } from '@elizaos/core';\n\nexport const getMarsRoverPhoto: Action = {\n  name: 'NASA_GET_MARS_PHOTO',\n  similes: ['SHOW_MARS_PICTURE'],\n  description: 'Fetches a photo from Mars rovers',\n\n  validate: async (runtime: IAgentRuntime) => {\n    return validateNasaConfig(runtime);\n  },\n\n  handler: async (runtime: IAgentRuntime, state: any, callback: any) => {\n    const data = await getNasaService(runtime).getMarsRoverPhoto();\n    await callback(`Here's a photo from Mars rover ${data.rover}...`);\n    return true;\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.code,{children:"src/actions/getMarsRoverPhoto.ts"})]}),"\n",(0,r.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,r.jsx)(n.p,{children:"Services handle API interactions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const nasaService = (config: NasaConfig) => ({\n  getMarsRoverPhoto: async () => {\n    const response = await fetch(\n      `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?api_key=${config.apiKey}`\n    );\n    return response.json();\n  },\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:".env"})," in the root directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"NASA_API_KEY=your_api_key_here\nTWITTER_API_KEY=your_api_key\nTWITTER_API_SECRET_KEY=your_api_secret_key\nTWITTER_ACCESS_TOKEN=your_access_token\nTWITTER_ACCESS_TOKEN_SECRET=your_access_token_secret\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const validateNasaConfig = (runtime: IAgentRuntime) => {\n  const config = {\n    apiKey: runtime.getSetting('NASA_API_KEY'),\n  };\n  if (!config.apiKey) {\n    throw new Error('NASA API key not configured');\n  }\n  return config;\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-your-plugin",children:"Testing Your Plugin"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"See 00:12:39 in the video"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-testing",children:"Development Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Using mock client\npnpm mock-eliza --characters=./characters/eternalai.character.json\n"})}),"\n",(0,r.jsx)(n.h3,{id:"production-testing",children:"Production Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Web interface\npnpm start client\n# Visit localhost:5173\n\n# Twitter integration\n# Ensure Twitter credentials are configured in .env\npnpm start\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,r.jsx)(n.h3,{id:"how-should-i-handle-errors-in-my-plugin",children:"How should I handle errors in my plugin?"}),"\n",(0,r.jsx)(n.p,{children:"Validate environment variables before making API calls and provide meaningful error messages. Implement retry logic for failed requests to improve reliability."}),"\n",(0,r.jsx)(n.h3,{id:"whats-the-best-way-to-ensure-type-safety",children:"What's the best way to ensure type safety?"}),"\n",(0,r.jsx)(n.p,{children:"Define interfaces for API responses and use TypeScript throughout your plugin to maintain type consistency and get better development experience."}),"\n",(0,r.jsx)(n.h3,{id:"how-should-i-organize-my-plugin-code",children:"How should I organize my plugin code?"}),"\n",(0,r.jsx)(n.p,{children:"Separate concerns into distinct files, follow consistent naming conventions, and thoroughly document your code for maintainability."}),"\n",(0,r.jsx)(n.h3,{id:"why-isnt-my-plugin-loading",children:"Why isn't my plugin loading?"}),"\n",(0,r.jsx)(n.p,{children:"Verify your package.json configuration, check that the plugin is properly registered in the character file, and ensure all dependencies are installed correctly."}),"\n",(0,r.jsx)(n.h3,{id:"why-isnt-my-action-triggering",children:"Why isn't my action triggering?"}),"\n",(0,r.jsx)(n.p,{children:"Review your action examples for accuracy, check the validate function logic, and verify that the action is properly registered in your plugin."}),"\n",(0,r.jsx)(n.h3,{id:"what-should-i-do-if-i-have-api-integration-issues",children:"What should I do if I have API integration issues?"}),"\n",(0,r.jsx)(n.p,{children:"Confirm your API key is properly configured, verify the API endpoint URLs are correct, and check that responses are being handled appropriately."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(14041);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);