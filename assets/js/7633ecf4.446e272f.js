"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[23540],{71184:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>c});var s=a(14041);const n={},r=s.createContext(n);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},96831:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"namespaces/v2/type-aliases/StateValue","title":"StateValue","description":"@elizaos/core v1.3.1 / v2 / StateValue","source":"@site/api/namespaces/v2/type-aliases/StateValue.md","sourceDirName":"namespaces/v2/type-aliases","slug":"/namespaces/v2/type-aliases/StateValue","permalink":"/api/namespaces/v2/type-aliases/StateValue","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"StateArray","permalink":"/api/namespaces/v2/type-aliases/StateArray"},"next":{"title":"TaskMetadata","permalink":"/api/namespaces/v2/type-aliases/TaskMetadata"}}');var n=a(31085),r=a(71184);const i={},c="Type Alias: StateValue",o={},l=[{value:"Defined in",id:"defined-in",level:2}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/api/",children:"@elizaos/core v1.3.1"})," / ",(0,n.jsx)(t.a,{href:"/api/namespaces/v2/",children:"v2"})," / StateValue"]}),"\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-statevalue",children:"Type Alias: StateValue"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"StateValue"}),": ",(0,n.jsx)(t.code,{children:"string"})," | ",(0,n.jsx)(t.code,{children:"number"})," | ",(0,n.jsx)(t.code,{children:"boolean"})," | ",(0,n.jsx)(t.code,{children:"null"})," | ",(0,n.jsx)(t.a,{href:"/api/namespaces/v2/interfaces/StateObject",children:(0,n.jsx)(t.code,{children:"StateObject"})})," | ",(0,n.jsx)(t.a,{href:"/api/namespaces/v2/type-aliases/StateArray",children:(0,n.jsx)(t.code,{children:"StateArray"})})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defines the possible primitive types or structured types for a value within the agent's state.\nThis type is used to provide more specific typing for properties within ",(0,n.jsx)(t.code,{children:"StateObject"})," and ",(0,n.jsx)(t.code,{children:"StateArray"}),",\nmoving away from a generic 'any' type for better type safety and clarity in state management."]}),"\n",(0,n.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/types.ts#L2267",children:"packages/core/src/specs/v2/types.ts:2267"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);