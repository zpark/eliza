"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[50862],{71184:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(14041);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},96633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"plugins/twitter","title":"@elizaos/plugin-twitter","description":"\u26a0\ufe0f MAINTANENCE NOTICE","source":"@site/packages/plugins/twitter.md","sourceDirName":"plugins","slug":"/plugins/twitter","permalink":"/packages/plugins/twitter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-twilio","permalink":"/packages/plugins/twilio"},"next":{"title":"udio","permalink":"/packages/plugins/udio"}}');var s=t(31085),r=t(71184);const l={},o="@elizaos/plugin-twitter",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Tweet Composition",id:"tweet-composition",level:3},{value:"Tweet Posting",id:"tweet-posting",level:3},{value:"Development",id:"development",level:2},{value:"Building",id:"building",level:3},{value:"Testing",id:"testing",level:3},{value:"Development Mode",id:"development-mode",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Core Interfaces",id:"core-interfaces",level:3},{value:"Plugin Methods",id:"plugin-methods",level:3},{value:"Common Issues/Troubleshooting",id:"common-issuestroubleshooting",level:2},{value:"Issue: Tweet Length Errors",id:"issue-tweet-length-errors",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Template System",id:"template-system",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Credits",id:"credits",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"elizaosplugin-twitter",children:"@elizaos/plugin-twitter"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u26a0\ufe0f MAINTANENCE NOTICE"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"This plugin is undergoing maintanence."})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A plugin for Twitter/X integration, providing automated tweet posting capabilities with character-aware content generation."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"This plugin provides functionality to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Compose context-aware tweets"}),"\n",(0,s.jsx)(n.li,{children:"Post tweets to Twitter/X platform"}),"\n",(0,s.jsx)(n.li,{children:"Manage tweet length restrictions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos/plugin-twitter\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Import and register the plugin in your Eliza configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { twitterPlugin } from '@elizaos/plugin-twitter';\n\nexport default {\n  plugins: [twitterPlugin],\n  // ... other configuration\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.h3,{id:"tweet-composition",children:"Tweet Composition"}),"\n",(0,s.jsx)(n.p,{children:"The plugin uses context-aware templates to generate appropriate tweets:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { postAction } from '@elizaos/plugin-twitter';\n\n// Tweet will be composed based on context and character limits\nconst result = await postAction.handler(runtime, message, state);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tweet-posting",children:"Tweet Posting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Post with automatic content generation\nawait postAction.handler(runtime, message, state);\n\n// Dry run mode (for testing)\nprocess.env.TWITTER_DRY_RUN = 'true';\nawait postAction.handler(runtime, message, state);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.h3,{id:"building",children:"Building"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,s.jsx)(n.h3,{id:"development-mode",children:"Development Mode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@elizaos/core"}),": Core Eliza functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tsup"}),": Build tool"]}),"\n",(0,s.jsx)(n.li,{children:"Other standard dependencies listed in package.json"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"core-interfaces",children:"Core Interfaces"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface TweetContent {\n  text: string;\n}\n\n// Tweet Schema\nconst TweetSchema = z.object({\n  text: z.string().describe('The text of the tweet'),\n});\n\n// Action Interface\ninterface Action {\n  name: 'POST_TWEET';\n  similes: string[];\n  description: string;\n  validate: (runtime: IAgentRuntime, message: Memory, state?: State) => Promise<boolean>;\n  handler: (runtime: IAgentRuntime, message: Memory, state?: State) => Promise<boolean>;\n  examples: Array<Array<any>>;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"plugin-methods",children:"Plugin Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"postAction.handler"}),": Main method for posting tweets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"postAction.validate"}),": Validates Twitter credentials"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"composeTweet"}),": Internal method for tweet generation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"postTweet"}),": Internal method for tweet posting"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-issuestroubleshooting",children:"Common Issues/Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"issue-tweet-length-errors",children:"Issue: Tweet Length Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cause"}),": Content exceeds Twitter's character limit"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Enable TWITTER_PREMIUM for extended tweets or ensure content is within limits"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use 2FA when possible"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper error handling"}),"\n",(0,s.jsx)(n.li,{children:"Keep dependencies updated"}),"\n",(0,s.jsx)(n.li,{children:"Use dry run mode for testing"}),"\n",(0,s.jsx)(n.li,{children:"Monitor Twitter API usage"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"template-system",children:"Template System"}),"\n",(0,s.jsx)(n.p,{children:"The plugin uses a sophisticated template system for tweet generation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const tweetTemplate = `\n# Context\n{{recentMessages}}\n\n# Topics\n{{topics}}\n\n# Post Directions\n{{postDirections}}\n\n# Recent interactions\n{{recentPostInteractions}}\n\n# Task\nGenerate a tweet that:\n1. Relates to the recent conversation\n2. Matches the character's style\n3. Is concise and engaging\n4. Must be UNDER 180 characters\n5. Speaks from the perspective of {{agentName}}\n`;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,s.jsx)(n.p,{children:"Contributions are welcome! Please see the CONTRIBUTING.md file for more information."}),"\n",(0,s.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,s.jsx)(n.p,{children:"This plugin integrates with and builds upon several key technologies:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.twitter.com/en/docs",children:"Twitter/X API"}),": Official Twitter platform API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/colinhacks/zod",children:"Zod"}),": TypeScript-first schema validation"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Special thanks to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The Twitter/X Developer Platform team"}),"\n",(0,s.jsx)(n.li,{children:"The Eliza community for their contributions and feedback"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For more information about Twitter/X integration capabilities:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.twitter.com/en/docs",children:"Twitter API Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.twitter.com/en/portal/dashboard",children:"Twitter Developer Portal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.twitter.com/en/docs/twitter-api/rate-limits",children:"Twitter API Best Practices"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);