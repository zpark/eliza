"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93247],{71184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(14041);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},81067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"interfaces/State","title":"State","description":"@elizaos/core v1.0.12 / State","source":"@site/api/interfaces/State.md","sourceDirName":"interfaces","slug":"/interfaces/State","permalink":"/api/interfaces/State","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ServiceTypeRegistry","permalink":"/api/interfaces/ServiceTypeRegistry"},"next":{"title":"StateObject","permalink":"/api/interfaces/StateObject"}}');var a=n(31085),s=n(71184);const i={},o="Interface: State",c={},l=[{value:"Indexable",id:"indexable",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/api/",children:"@elizaos/core v1.0.12"})," / State"]}),"\n",(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"interface-state",children:"Interface: State"})}),"\n",(0,a.jsx)(t.p,{children:"Represents the current state or context of a conversation or agent interaction.\nThis interface is a flexible container for various pieces of information that define the agent's\nunderstanding at a point in time. It includes:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"values"}),": A key-value store for general state variables, often populated by providers."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"data"}),": Another key-value store, potentially for more structured or internal data."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"text"}),": A string representation of the current context, often a summary or concatenated history.\nThe ",(0,a.jsx)(t.code,{children:"[key: string]: any;"})," allows for dynamic properties, though ",(0,a.jsx)(t.code,{children:"EnhancedState"})," offers better typing.\nThis state object is passed to handlers for actions, evaluators, and providers."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"indexable",children:"Indexable"}),"\n",(0,a.jsxs)(t.p,{children:["[",(0,a.jsx)(t.code,{children:"key"}),": ",(0,a.jsx)(t.code,{children:"string"}),"]: ",(0,a.jsx)(t.code,{children:"any"})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);