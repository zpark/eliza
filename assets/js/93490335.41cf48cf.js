"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93461],{65057:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cli/stop","title":"Stop Command","description":"Stop running ElizaOS agents and services","source":"@site/docs/cli/stop.md","sourceDirName":"cli","slug":"/cli/stop","permalink":"/docs/cli/stop","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/stop.md","tags":[],"version":"current","lastUpdatedBy":"SYMBaiEX","lastUpdatedAt":1751607435000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Stop Command","description":"Stop running ElizaOS agents and services","keywords":["stop","shutdown","terminate","agent management","process control"]}}');var t=s(31085),l=s(71184);const r={sidebar_position:4,title:"Stop Command",description:"Stop running ElizaOS agents and services",keywords:["stop","shutdown","terminate","agent management","process control"]},o="Stop Command",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Process Management",id:"process-management",level:3},{value:"Development Workflow",id:"development-workflow",level:3},{value:"Graceful Shutdown",id:"graceful-shutdown",level:2},{value:"Force Stop",id:"force-stop",level:2},{value:"Multiple Agents",id:"multiple-agents",level:2},{value:"Integration with System Services",id:"integration-with-system-services",level:2},{value:"Linux/macOS (systemd)",id:"linuxmacos-systemd",level:3},{value:"Process Managers",id:"process-managers",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Agent Won&#39;t Stop",id:"agent-wont-stop",level:3},{value:"Port Still in Use",id:"port-still-in-use",level:3},{value:"Cleanup After Force Stop",id:"cleanup-after-force-stop",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Exit Codes",id:"exit-codes",level:2},{value:"Related Commands",id:"related-commands",level:2},{value:"Notes",id:"notes",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"stop-command",children:"Stop Command"})}),"\n",(0,t.jsx)(n.p,{children:"Stop running ElizaOS agents and free up system resources."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"stop"})," command allows you to gracefully shutdown running ElizaOS agents and services. This is useful for:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Stopping agents during development"}),"\n",(0,t.jsx)(n.li,{children:"Freeing up system resources"}),"\n",(0,t.jsx)(n.li,{children:"Changing configurations"}),"\n",(0,t.jsx)(n.li,{children:"Restarting with different settings"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"elizaos stop [options]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"--all"})}),(0,t.jsx)(n.td,{children:"Stop all running ElizaOS processes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"--agent <name>"})}),(0,t.jsx)(n.td,{children:"Stop a specific agent by name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"--force"})}),(0,t.jsx)(n.td,{children:"Force stop without graceful shutdown"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"--quiet"})}),(0,t.jsx)(n.td,{children:"Suppress confirmation messages"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Stop all running agents\nelizaos stop\n\n# Stop with confirmation\nelizaos stop --all\n\n# Stop specific agent\nelizaos stop --agent my-agent\n\n# Force stop all agents\nelizaos stop --all --force\n"})}),"\n",(0,t.jsx)(n.h3,{id:"process-management",children:"Process Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check running agents before stopping\nps aux | grep elizaos\n\n# Stop and verify\nelizaos stop --all\nps aux | grep elizaos  # Should show no processes\n"})}),"\n",(0,t.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start agent\nelizaos start --character my-agent.json\n\n# Make changes to configuration\n# ...\n\n# Stop agent\nelizaos stop --agent my-agent\n\n# Restart with new configuration\nelizaos start --character my-agent.json\n"})}),"\n",(0,t.jsx)(n.h2,{id:"graceful-shutdown",children:"Graceful Shutdown"}),"\n",(0,t.jsx)(n.p,{children:"By default, the stop command performs a graceful shutdown:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Signal agents"}),": Sends shutdown signal to agents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Complete tasks"}),": Allows current operations to complete"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Save state"}),": Persists conversation history and state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Close connections"}),": Cleanly disconnects from services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Release resources"}),": Frees memory and file handles"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"force-stop",children:"Force Stop"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"--force"})," when graceful shutdown fails:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Force stop if agent is unresponsive\nelizaos stop --force\n\n# Force stop specific agent\nelizaos stop --agent stuck-agent --force\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Warning"}),": Force stop may result in:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Loss of unsaved conversation state"}),"\n",(0,t.jsx)(n.li,{children:"Incomplete operations"}),"\n",(0,t.jsx)(n.li,{children:"Connection cleanup issues"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"multiple-agents",children:"Multiple Agents"}),"\n",(0,t.jsx)(n.p,{children:"When running multiple agents:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List all running agents\nelizaos agent list\n\n# Stop specific agents\nelizaos stop --agent agent1\nelizaos stop --agent agent2\n\n# Stop all at once\nelizaos stop --all\n"})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-system-services",children:"Integration with System Services"}),"\n",(0,t.jsx)(n.h3,{id:"linuxmacos-systemd",children:"Linux/macOS (systemd)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create service file\nsudo nano /etc/systemd/system/elizaos.service\n\n# Stop via systemd\nsudo systemctl stop elizaos\n"})}),"\n",(0,t.jsx)(n.h3,{id:"process-managers",children:"Process Managers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# PM2\npm2 stop elizaos\n\n# Forever\nforever stop elizaos\n\n# Supervisor\nsupervisorctl stop elizaos\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"agent-wont-stop",children:"Agent Won't Stop"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Find process ID\nps aux | grep elizaos\n\n# Manual kill if needed\nkill -TERM <pid>\n\n# Force kill as last resort\nkill -9 <pid>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"port-still-in-use",children:"Port Still in Use"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Find process using port\nlsof -i :3000\n\n# Kill process holding port\nkill -9 $(lsof -ti:3000)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cleanup-after-force-stop",children:"Cleanup After Force Stop"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Remove lock files\nrm -f ~/.elizaos/*.lock\n\n# Clear temp files\nrm -rf ~/.elizaos/tmp/*\n\n# Reset state if needed\nelizaos env reset\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Always try graceful shutdown first"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Wait for confirmation before force stopping"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Check for running processes after stop"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Clean up resources if force stop was used"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Document any issues for debugging"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"exit-codes",children:"Exit Codes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Code"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"Successful shutdown"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"General error"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"No agents running"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"Partial shutdown (some agents failed)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"130"}),(0,t.jsx)(n.td,{children:"Interrupted by user (Ctrl+C)"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/cli/start",children:(0,t.jsx)(n.code,{children:"start"})}),": Start ElizaOS agents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/cli/agent",children:(0,t.jsx)(n.code,{children:"agent"})}),": Manage individual agents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/cli/dev",children:(0,t.jsx)(n.code,{children:"dev"})}),": Development mode with auto-restart"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/cli/env",children:(0,t.jsx)(n.code,{children:"env"})}),": Environment configuration"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The stop command saves conversation state by default"}),"\n",(0,t.jsx)(n.li,{children:"Agents can be restarted with the same state"}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"--force"})," only when necessary"]}),"\n",(0,t.jsx)(n.li,{children:"Check logs if shutdown fails"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(14041);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);