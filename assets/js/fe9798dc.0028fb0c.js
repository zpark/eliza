"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[8500],{71184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(14041);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},96711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"interfaces/EnhancedState","title":"EnhancedState","description":"@elizaos/core v1.3.1 / EnhancedState","source":"@site/api/interfaces/EnhancedState.md","sourceDirName":"interfaces","slug":"/interfaces/EnhancedState","permalink":"/api/interfaces/EnhancedState","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"EmbeddingSearchResult","permalink":"/api/interfaces/EmbeddingSearchResult"},"next":{"title":"Entity","permalink":"/api/interfaces/Entity"}}');var a=n(31085),r=n(71184);const i={},c="Interface: EnhancedState",d={},l=[{value:"Indexable",id:"indexable",level:2},{value:"Properties",id:"properties",level:2},{value:"values",id:"values",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"data",id:"data",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"text",id:"text",level:3},{value:"Defined in",id:"defined-in-2",level:4}];function o(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/api/",children:"@elizaos/core v1.3.1"})," / EnhancedState"]}),"\n",(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"interface-enhancedstate",children:"Interface: EnhancedState"})}),"\n",(0,a.jsxs)(t.p,{children:["Enhanced State interface with more specific types for its core properties.\nThis interface provides a more structured representation of an agent's conversational state,\nbuilding upon the base ",(0,a.jsx)(t.code,{children:"State"})," by typing ",(0,a.jsx)(t.code,{children:"values"})," and ",(0,a.jsx)(t.code,{children:"data"})," as ",(0,a.jsx)(t.code,{children:"StateObject"}),".\nThe ",(0,a.jsx)(t.code,{children:"text"})," property typically holds a textual summary or context derived from the state.\nAdditional dynamic properties are still allowed via the index signature ",(0,a.jsx)(t.code,{children:"[key: string]: StateValue;"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"indexable",children:"Indexable"}),"\n",(0,a.jsxs)(t.p,{children:["[",(0,a.jsx)(t.code,{children:"key"}),": ",(0,a.jsx)(t.code,{children:"string"}),"]: ",(0,a.jsx)(t.a,{href:"/api/type-aliases/StateValue",children:(0,a.jsx)(t.code,{children:"StateValue"})})]}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"values",children:"values"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"values"}),": ",(0,a.jsx)(t.a,{href:"/api/interfaces/StateObject",children:(0,a.jsx)(t.code,{children:"StateObject"})})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Holds directly accessible state values, often used for template rendering or quick lookups."}),"\n",(0,a.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/types/state.ts#L53",children:"packages/core/src/types/state.ts:53"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"data",children:"data"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"data"}),": ",(0,a.jsx)(t.a,{href:"/api/interfaces/StateObject",children:(0,a.jsx)(t.code,{children:"StateObject"})})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Stores more complex or structured data, potentially namespaced by providers or internal systems."}),"\n",(0,a.jsx)(t.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/types/state.ts#L55",children:"packages/core/src/types/state.ts:55"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"text",children:"text"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"text"}),": ",(0,a.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"A textual representation or summary of the current state, often used as context for models."}),"\n",(0,a.jsx)(t.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/types/state.ts#L57",children:"packages/core/src/types/state.ts:57"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);