"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[18084],{20508:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"adapters/sqlite","title":"SQLite Adapter","description":"A SQLite database adapter for ElizaOS that provides persistent storage capabilities with vector similarity search support. This adapter implements the IDatabaseAdapter interface and extends the DatabaseAdapter base class to provide a lightweight, file-based storage solution ideal for development and embedded environments.","source":"@site/packages/adapters/sqlite.md","sourceDirName":"adapters","slug":"/adapters/sqlite","permalink":"/packages/adapters/sqlite","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Qdrant Adapter for ElizaOS","permalink":"/packages/adapters/qdrant"},"next":{"title":"Unmaintained: this plugin used to live in @elizaos/core. It needs a maintainer.","permalink":"/packages/adapters/sqljs"}}');var n=t(31085),s=t(71184);const r={},d="SQLite Adapter",o={},l=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Default Database Location",id:"default-database-location",level:3},{value:"Database Schema",id:"database-schema",level:2},{value:"Vector Search",id:"vector-search",level:2},{value:"FAQ",id:"faq",level:2},{value:"How does vector similarity search work?",id:"how-does-vector-similarity-search-work",level:3},{value:"Can I use this adapter with other databases?",id:"can-i-use-this-adapter-with-other-databases",level:3},{value:"How are embeddings stored?",id:"how-are-embeddings-stored",level:3},{value:"Is there support for transactions?",id:"is-there-support-for-transactions",level:3},{value:"How does the caching system work?",id:"how-does-the-caching-system-work",level:3},{value:"Can I use this in production?",id:"can-i-use-this-in-production",level:3},{value:"How do I backup the database?",id:"how-do-i-backup-the-database",level:3},{value:"What embedding dimensions are supported?",id:"what-embedding-dimensions-are-supported",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"sqlite-adapter",children:"SQLite Adapter"})}),"\n",(0,n.jsxs)(i.p,{children:["A SQLite database adapter for ElizaOS that provides persistent storage capabilities with vector similarity search support. This adapter implements the ",(0,n.jsx)(i.code,{children:"IDatabaseAdapter"})," interface and extends the ",(0,n.jsx)(i.code,{children:"DatabaseAdapter"})," base class to provide a lightweight, file-based storage solution ideal for development and embedded environments."]}),"\n",(0,n.jsx)(i.h2,{id:"features",children:"Features"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Full SQLite database implementation of ElizaOS database interface"}),"\n",(0,n.jsx)(i.li,{children:"Vector similarity search via sqlite-vec extension"}),"\n",(0,n.jsx)(i.li,{children:"JSON validation and foreign key constraints"}),"\n",(0,n.jsx)(i.li,{children:"Built-in caching system"}),"\n",(0,n.jsx)(i.li,{children:"Comprehensive transaction support with circuit breaker pattern"}),"\n",(0,n.jsxs)(i.li,{children:["Support for storing and retrieving:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Memory entries with embeddings"}),"\n",(0,n.jsx)(i.li,{children:"User accounts and relationships"}),"\n",(0,n.jsx)(i.li,{children:"Goals and objectives"}),"\n",(0,n.jsx)(i.li,{children:"Room and participant management"}),"\n",(0,n.jsx)(i.li,{children:"Knowledge base with RAG support"}),"\n",(0,n.jsx)(i.li,{children:"System logs and cache"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"npm install @elizaos-plugins/adapter-sqlite\n"})}),"\n",(0,n.jsx)(i.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"better-sqlite3 (v11.8.1)"}),"\n",(0,n.jsx)(i.li,{children:"sqlite-vec (v0.1.6)"}),"\n",(0,n.jsx)(i.li,{children:"whatwg-url (v7.1.0)"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import sqlitePlugin from '@elizaos-plugins/adapter-sqlite';\nimport { IAgentRuntime } from '@elizaos/core';\n\n// Initialize with ElizaOS runtime\nfunction initializeAgent(runtime: IAgentRuntime) {\n  runtime.use(sqlitePlugin);\n}\n\n// Or initialize directly\nimport Database from 'better-sqlite3';\nimport { SqliteDatabaseAdapter } from '@elizaos-plugins/adapter-sqlite';\n\nconst db = new Database('path/to/database.db');\nconst adapter = new SqliteDatabaseAdapter(db);\nawait adapter.init();\n"})}),"\n",(0,n.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(i.p,{children:"The adapter looks for the following configuration in your ElizaOS runtime:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"SQLITE_FILE"}),": Path to the SQLite database file (default: ",(0,n.jsx)(i.code,{children:"./data/db.sqlite"}),")"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"default-database-location",children:"Default Database Location"}),"\n",(0,n.jsxs)(i.p,{children:["By default, the adapter creates a ",(0,n.jsx)(i.code,{children:"data"})," directory in your project root and stores the database file there. Customize this by setting the ",(0,n.jsx)(i.code,{children:"SQLITE_FILE"})," in your ElizaOS runtime configuration."]}),"\n",(0,n.jsx)(i.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,n.jsx)(i.p,{children:"The adapter creates and manages these tables with appropriate indexes and constraints:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"accounts"}),": User account information with JSON details"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"memories"}),": Memory entries with BLOB embeddings and JSON content"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"goals"}),": Task tracking with JSON objectives"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"logs"}),": System event logging"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"participants"}),": Room participation management"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"relationships"}),": User relationship tracking"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"rooms"}),": Conversation room management"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"cache"}),": Temporary data storage with JSON validation"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"knowledge"}),": RAG knowledge base with embedding support"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Each table includes appropriate indexes and foreign key constraints. The complete schema is available in ",(0,n.jsx)(i.code,{children:"sqliteTables.ts"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"vector-search",children:"Vector Search"}),"\n",(0,n.jsxs)(i.p,{children:["The adapter implements vector similarity search using ",(0,n.jsx)(i.code,{children:"sqlite-vec"})," for efficient embedding comparisons:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"const memories = await adapter.searchMemories({\n  tableName: 'memories',\n  roomId: 'room-id',\n  embedding: [\n    /* vector */\n  ],\n  match_threshold: 0.95,\n  match_count: 10,\n  unique: true,\n});\n"})}),"\n",(0,n.jsx)(i.h2,{id:"faq",children:"FAQ"}),"\n",(0,n.jsx)(i.h3,{id:"how-does-vector-similarity-search-work",children:"How does vector similarity search work?"}),"\n",(0,n.jsx)(i.p,{children:"The adapter uses sqlite-vec to calculate L2 distances between embeddings stored as BLOB data. This enables efficient vector similarity searches for memory and knowledge retrieval."}),"\n",(0,n.jsx)(i.h3,{id:"can-i-use-this-adapter-with-other-databases",children:"Can I use this adapter with other databases?"}),"\n",(0,n.jsx)(i.p,{children:"This adapter is specifically designed for SQLite and implements ElizaOS's IDatabaseAdapter interface. For other databases, use the appropriate adapter (MongoDB, PostgreSQL, etc.)."}),"\n",(0,n.jsx)(i.h3,{id:"how-are-embeddings-stored",children:"How are embeddings stored?"}),"\n",(0,n.jsx)(i.p,{children:"Embeddings are stored as BLOB data in SQLite using Float32Array, with automatic conversion between formats as needed."}),"\n",(0,n.jsx)(i.h3,{id:"is-there-support-for-transactions",children:"Is there support for transactions?"}),"\n",(0,n.jsx)(i.p,{children:"Yes, the adapter implements the framework's circuit breaker pattern and transaction support through better-sqlite3."}),"\n",(0,n.jsx)(i.h3,{id:"how-does-the-caching-system-work",children:"How does the caching system work?"}),"\n",(0,n.jsxs)(i.p,{children:["The adapter provides a built-in caching system through the ",(0,n.jsx)(i.code,{children:"cache"})," table with support for JSON validation and automatic timestamp management."]}),"\n",(0,n.jsx)(i.h3,{id:"can-i-use-this-in-production",children:"Can I use this in production?"}),"\n",(0,n.jsx)(i.p,{children:"While the adapter is built on production-ready better-sqlite3, it's primarily designed for development and embedded environments. For production deployments, consider PostgreSQL or MongoDB adapters."}),"\n",(0,n.jsx)(i.h3,{id:"how-do-i-backup-the-database",children:"How do I backup the database?"}),"\n",(0,n.jsx)(i.p,{children:"Use standard SQLite backup procedures - either file system backup of the .sqlite file when the database is not in use, or SQLite's online backup API."}),"\n",(0,n.jsx)(i.h3,{id:"what-embedding-dimensions-are-supported",children:"What embedding dimensions are supported?"}),"\n",(0,n.jsx)(i.p,{children:"The adapter supports any embedding dimension through BLOB storage, though the default configuration is optimized for 384-dimensional vectors commonly used by local models."})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},71184:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>d});var a=t(14041);const n={},s=a.createContext(n);function r(e){const i=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(s.Provider,{value:i},e.children)}}}]);