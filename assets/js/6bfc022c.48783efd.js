"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[47601],{21761:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"clients/alexa","title":"ElizaOS Alexa Client Plugin","description":"The Alexa Client Plugin enables ElizaOS agents to integrate with Amazon Alexa, allowing your ElizaOS character to interact with users through Alexa-enabled devices.","source":"@site/packages/clients/alexa.md","sourceDirName":"clients","slug":"/clients/alexa","permalink":"/packages/clients/alexa","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ElizaOS Supabase Adapter","permalink":"/packages/adapters/supabase"},"next":{"title":"auto","permalink":"/packages/clients/auto"}}');var l=i(31085),s=i(71184);const a={},r="ElizaOS Alexa Client Plugin",o={},c=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sending Proactive Events",id:"sending-proactive-events",level:3},{value:"Development",id:"development",level:2},{value:"Settings Reference",id:"settings-reference",level:2},{value:"Limitations",id:"limitations",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"elizaos-alexa-client-plugin",children:"ElizaOS Alexa Client Plugin"})}),"\n",(0,l.jsx)(n.p,{children:"The Alexa Client Plugin enables ElizaOS agents to integrate with Amazon Alexa, allowing your ElizaOS character to interact with users through Alexa-enabled devices."}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Send proactive notifications to Alexa devices"}),"\n",(0,l.jsx)(n.li,{children:"Connect ElizaOS agents to the Alexa Skills ecosystem"}),"\n",(0,l.jsx)(n.li,{children:"Enable voice-based interaction with your ElizaOS character"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos-plugins/client-alexa\n"})}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(n.p,{children:"Before using this plugin, you need to:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Create an Alexa Skill in the ",(0,l.jsx)(n.a,{href:"https://developer.amazon.com/alexa/console/ask",children:"Alexa Developer Console"})]}),"\n",(0,l.jsx)(n.li,{children:"Set up the necessary permissions for Proactive Events"}),"\n",(0,l.jsx)(n.li,{children:"Obtain your Skill ID, Client ID, and Client Secret from the Alexa Developer Console"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsx)(n.p,{children:"Add the following environment variables or settings to your ElizaOS configuration:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ALEXA_SKILL_ID=your-skill-id\nALEXA_CLIENT_ID=your-client-id\nALEXA_CLIENT_SECRET=your-client-secret\n"})}),"\n",(0,l.jsx)(n.h3,{id:"sending-proactive-events",children:"Sending Proactive Events"}),"\n",(0,l.jsx)(n.p,{children:"The plugin currently supports sending proactive message alerts to Alexa devices. This allows your ElizaOS character to initiate conversations with users."}),"\n",(0,l.jsx)(n.p,{children:"Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// The plugin automatically sends a test notification when started\n// Future versions will expose direct methods for sending custom notifications\n"})}),"\n",(0,l.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,l.jsx)(n.p,{children:"To build the plugin from source:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Install dependencies\nnpm install\n\n# Build the plugin\nnpm run build\n\n# Run tests\nnpm test\n\n# Lint and format code\nnpm run lint\nnpm run format\n"})}),"\n",(0,l.jsx)(n.h2,{id:"settings-reference",children:"Settings Reference"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Setting Name"}),(0,l.jsx)(n.th,{children:"Description"}),(0,l.jsx)(n.th,{children:"Required"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"ALEXA_SKILL_ID"}),(0,l.jsx)(n.td,{children:"The unique identifier for your Alexa skill"}),(0,l.jsx)(n.td,{children:"Yes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"ALEXA_CLIENT_ID"}),(0,l.jsx)(n.td,{children:"OAuth2 client ID for your Alexa skill"}),(0,l.jsx)(n.td,{children:"Yes"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"ALEXA_CLIENT_SECRET"}),(0,l.jsx)(n.td,{children:"OAuth2 client secret for your Alexa skill"}),(0,l.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Currently, only one-way communication (proactive alerts) is supported"}),"\n",(0,l.jsx)(n.li,{children:"Full conversational capabilities will be added in future releases"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(14041);const l={},s=t.createContext(l);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);