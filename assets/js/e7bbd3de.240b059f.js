"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[20657],{55322:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"plugins/suno","title":"suno","description":"@elizaos/plugin-suno","source":"@site/packages/plugins/suno.md","sourceDirName":"plugins","slug":"/plugins/suno","permalink":"/packages/plugins/suno","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-sui","permalink":"/packages/plugins/sui"},"next":{"title":"TEE Log Plugin for Eliza","permalink":"/packages/plugins/tee-log"}}');var s=i(31085),t=i(71184);const a={},o=void 0,l={},c=[];function u(e){const n={a:"a",code:"code",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"@elizaos/plugin-suno"}),"\n",(0,s.jsx)(n.p,{children:"A Suno AI music generation plugin for ElizaOS that enables AI-powered music creation and audio manipulation."}),"\n",(0,s.jsx)(n.p,{children:"OVERVIEW"}),"\n",(0,s.jsx)(n.p,{children:"The Suno plugin integrates Suno AI's powerful music generation capabilities into ElizaOS, providing a seamless way to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Generate music from text prompts with fine-tuned parameters"}),"\n",(0,s.jsx)(n.li,{children:"Create custom music with advanced control over style, tempo, and key"}),"\n",(0,s.jsx)(n.li,{children:"Extend existing audio tracks"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Original Plugin: ",(0,s.jsx)(n.a,{href:"https://github.com/gcui-art/suno-api?tab=readme-ov-file",children:"https://github.com/gcui-art/suno-api?tab=readme-ov-file"})]}),"\n",(0,s.jsx)(n.p,{children:"INSTALLATION"}),"\n",(0,s.jsx)(n.p,{children:"npm install @elizaos/plugin-suno"}),"\n",(0,s.jsx)(n.p,{children:"QUICK START"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Register the plugin with ElizaOS:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { sunoPlugin } from '@elizaos/plugin-suno';\nimport { Eliza } from '@elizaos/core';\n\nconst eliza = new Eliza();\neliza.registerPlugin(sunoPlugin);\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Configure the Suno provider with your API credentials:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { sunoProvider } from '@elizaos/plugin-suno';\n\nsunoProvider.configure({\n  apiKey: 'your-suno-api-key',\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"FEATURES"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Generate Music (suno.generate-music)\nGenerate music using a text prompt with basic control parameters. This is ideal for quick music generation when you need less fine-grained control:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simple text-to-music generation"}),"\n",(0,s.jsx)(n.li,{children:"Consistent output quality with default parameters"}),"\n",(0,s.jsx)(n.li,{children:"Suitable for most common use cases"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"await eliza.execute('suno.generate-music', {\n  prompt: 'An upbeat electronic dance track with energetic beats',\n  duration: 30,\n  temperature: 1.0,\n  topK: 250,\n  topP: 0.95,\n  classifier_free_guidance: 3.0,\n});\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Custom Music Generation (suno.custom-generate-music)\nCreate music with detailed control over generation parameters. Perfect for when you need precise control over the musical output:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fine-grained control over musical style and structure"}),"\n",(0,s.jsx)(n.li,{children:"Reference-based generation using existing audio"}),"\n",(0,s.jsxs)(n.li,{children:["Control over musical attributes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Style: Specify genres like "classical", "electronic", "rock"'}),"\n",(0,s.jsx)(n.li,{children:"Tempo: Set exact BPM (beats per minute)"}),"\n",(0,s.jsx)(n.li,{children:'Key and Mode: Define musical key (e.g., "C") and mode ("major"/"minor")'}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Advanced parameter tuning for generation quality"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"await eliza.execute('suno.custom-generate-music', {\n  prompt: 'A melodic piano piece with soft strings',\n  duration: 30,\n  temperature: 0.8,\n  topK: 250,\n  topP: 0.95,\n  classifier_free_guidance: 3.0,\n  reference_audio: 'path/to/reference.mp3',\n  style: 'classical',\n  bpm: 120,\n  key: 'C',\n  mode: 'major',\n});\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Extend Audio (suno.extend-audio)\nExtend existing audio tracks to create longer compositions. Useful for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lengthening existing music pieces"}),"\n",(0,s.jsx)(n.li,{children:"Creating seamless loops"}),"\n",(0,s.jsx)(n.li,{children:"Generating variations of existing tracks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"await eliza.execute('suno.extend-audio', {\n  audio_id: 'your-audio-id',\n  duration: 60,\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generation Parameters Explained:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"temperature: Controls randomness in generation (0.0-1.0+)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lower values (0.1-0.5): More conservative, consistent output"}),"\n",(0,s.jsx)(n.li,{children:"Higher values (1.0+): More creative, varied output"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"classifier_free_guidance: Controls how closely the output follows the prompt (1.0-20.0)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lower values: More creative interpretation"}),"\n",(0,s.jsx)(n.li,{children:"Higher values: Stricter adherence to prompt"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"topK/topP: Control the diversity of the generation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"topK: Limits the number of tokens considered"}),"\n",(0,s.jsx)(n.li,{children:"topP: Controls the cumulative probability threshold"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"API REFERENCE"}),"\n",(0,s.jsx)(n.p,{children:"SunoProvider Configuration\nThe Suno provider accepts the following configuration options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface SunoConfig {\n  apiKey: string;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Action Parameters:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generate Music (suno.generate-music)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface GenerateParams {\n  prompt: string;\n  duration?: number; // Duration in seconds\n  temperature?: number; // Controls randomness\n  topK?: number; // Top K sampling\n  topP?: number; // Top P sampling\n  classifier_free_guidance?: number; // Guidance scale\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Custom Generate Music (suno.custom-generate-music)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'interface CustomGenerateParams {\n  prompt: string;\n  duration?: number;\n  temperature?: number;\n  topK?: number;\n  topP?: number;\n  classifier_free_guidance?: number;\n  reference_audio?: string; // Path to reference audio file\n  style?: string; // Musical style\n  bpm?: number; // Beats per minute\n  key?: string; // Musical key\n  mode?: string; // Musical mode (e.g., "major", "minor")\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Extend Audio (suno.extend-audio)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ExtendParams {\n  audio_id: string; // ID of the audio to extend\n  duration: number; // Additional duration in seconds\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Response Type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface GenerationResponse {\n  id: string; // Generated audio ID\n  status: string; // Status of the generation\n  url?: string; // URL to download the generated audio\n  error?: string; // Error message if generation failed\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"ERROR HANDLING"}),"\n",(0,s.jsx)(n.p,{children:"The plugin includes built-in error handling for common scenarios:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"try {\n  await eliza.execute('suno.generate', params);\n} catch (error) {\n  if (error.code === 'SUNO_API_ERROR') {\n    // Handle API-specific errors\n  }\n  // Handle other errors\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"EXAMPLES"}),"\n",(0,s.jsx)(n.p,{children:"Creating a Pop Song:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute('suno.generate-music', {\n  prompt: 'Create a pop song with vocals, drums, and guitar',\n  duration: 180,\n  temperature: 1.0,\n  classifier_free_guidance: 3.5,\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Creating a Custom Classical Piece:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute('suno.custom-generate-music', {\n  prompt: 'A classical piano sonata in the style of Mozart',\n  duration: 120,\n  temperature: 0.8,\n  style: 'classical',\n  bpm: 120,\n  key: 'C',\n  mode: 'major',\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Extending an Existing Track:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const extended = await eliza.execute('suno.extend-audio', {\n  audio_id: 'existing-track-id',\n  duration: 60,\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"LICENSE"}),"\n",(0,s.jsx)(n.p,{children:"MIT"}),"\n",(0,s.jsx)(n.p,{children:"SUPPORT"}),"\n",(0,s.jsx)(n.p,{children:"For issues and feature requests, please open an issue on our GitHub repository."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Built with \u2764\ufe0f for ElizaOS"})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(14041);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);