"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[66872],{67658:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"0.25.9","label":"0.25.9","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-0.25.9","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"\ud83d\ude80 Introduction","href":"/docs/0.25.9/intro","docId":"intro","unlisted":false},{"type":"category","label":"\ud83c\udfc1 Getting Started","items":[{"type":"link","label":"\u2b50 Quick Start","href":"/docs/0.25.9/quickstart","docId":"quickstart","unlisted":false},{"type":"link","label":"\u2753 FAQ","href":"/docs/0.25.9/faq","docId":"faq","unlisted":false},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"AI Agent Dev School","collapsed":false,"items":[{"type":"link","label":"Part 1","href":"/docs/0.25.9/tutorials/devschool/part1","docId":"tutorials/devschool/part1","unlisted":false},{"type":"link","label":"Part 2","href":"/docs/0.25.9/tutorials/devschool/part2","docId":"tutorials/devschool/part2","unlisted":false},{"type":"link","label":"Part 3","href":"/docs/0.25.9/tutorials/devschool/part3","docId":"tutorials/devschool/part3","unlisted":false}],"collapsible":true,"href":"/docs/0.25.9/tutorials/devschool/"},{"type":"link","label":"Clone Yourself in 10min","href":"/docs/0.25.9/tutorials/nader_tutorial_10min","docId":"tutorials/nader_tutorial_10min","unlisted":false},{"type":"link","label":"Build Social Agents in 15min","href":"/docs/0.25.9/tutorials/nader_tutorial_15min","docId":"tutorials/nader_tutorial_15min","unlisted":false},{"type":"link","label":"Build a Plugin in 35min","href":"/docs/0.25.9/tutorials/nader_tutorial_35min","docId":"tutorials/nader_tutorial_35min","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":false,"collapsible":true},{"type":"category","label":"\ud83e\udde0 Core Concepts","collapsed":false,"items":[{"type":"link","label":"Overview","href":"/docs/0.25.9/core/overview","docId":"core/overview","unlisted":false},{"type":"link","label":"Character Files","href":"/docs/0.25.9/core/characterfile","docId":"core/characterfile","unlisted":false},{"type":"link","label":"Clients","href":"/docs/0.25.9/core/clients","docId":"core/clients","unlisted":false},{"type":"link","label":"Agent Runtime","href":"/docs/0.25.9/core/agents","docId":"core/agents","unlisted":false},{"type":"link","label":"Plugins","href":"/docs/0.25.9/core/plugins","docId":"core/plugins","unlisted":false},{"type":"link","label":"Providers","href":"/docs/0.25.9/core/providers","docId":"core/providers","unlisted":false},{"type":"link","label":"RAG Knowledge","href":"/docs/0.25.9/core/knowledge","docId":"core/knowledge","unlisted":false},{"type":"link","label":"Actions","href":"/docs/0.25.9/core/actions","docId":"core/actions","unlisted":false},{"type":"link","label":"Evaluators","href":"/docs/0.25.9/core/evaluators","docId":"core/evaluators","unlisted":false},{"type":"link","label":"Database Adapters","href":"/docs/0.25.9/core/database","docId":"core/database","unlisted":false}],"collapsible":true},{"type":"category","label":"\ud83d\udcd8 Guides","collapsed":false,"items":[{"type":"link","label":"Configuration","href":"/docs/0.25.9/guides/configuration","docId":"guides/configuration","unlisted":false},{"type":"link","label":"Deployment","href":"/docs/0.25.9/guides/remote-deployment","docId":"guides/remote-deployment","unlisted":false},{"type":"link","label":"Secrets Management","href":"/docs/0.25.9/guides/secrets-management","docId":"guides/secrets-management","unlisted":false},{"type":"link","label":"Memory Management","href":"/docs/0.25.9/guides/memory-management","docId":"guides/memory-management","unlisted":false},{"type":"link","label":"WSL Setup","href":"/docs/0.25.9/guides/wsl","docId":"guides/wsl","unlisted":false}],"collapsible":true},{"type":"category","label":"\ud83c\udf93 Advanced Topics","items":[{"type":"link","label":"Trust Engine","href":"/docs/0.25.9/advanced/trust-engine","docId":"advanced/trust-engine","unlisted":false},{"type":"link","label":"Autonomous Trading","href":"/docs/0.25.9/advanced/autonomous-trading","docId":"advanced/autonomous-trading","unlisted":false},{"type":"link","label":"Eliza in TEE","href":"/docs/0.25.9/advanced/eliza-in-tee","docId":"advanced/eliza-in-tee","unlisted":false},{"type":"link","label":"Verified Inference","href":"/docs/0.25.9/advanced/verified-inference","docId":"advanced/verified-inference","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"\ud83c\udf10 REST API","items":[{"type":"link","label":"Introduction","href":"/docs/0.25.9/rest/eliza-os-api","docId":"rest/eliza-os-api","unlisted":false},{"type":"link","label":"List all agents","href":"/docs/0.25.9/rest/list-agents","className":"api-method get","docId":"rest/list-agents","unlisted":false},{"type":"link","label":"Get agent details","href":"/docs/0.25.9/rest/get-agent","className":"api-method get","docId":"rest/get-agent","unlisted":false},{"type":"link","label":"Delete an agent","href":"/docs/0.25.9/rest/delete-agent","className":"api-method delete","docId":"rest/delete-agent","unlisted":false},{"type":"link","label":"Update or create an agent","href":"/docs/0.25.9/rest/set-agent","className":"api-method post","docId":"rest/set-agent","unlisted":false},{"type":"link","label":"Start a new agent","href":"/docs/0.25.9/rest/start-agent","className":"api-method post","docId":"rest/start-agent","unlisted":false},{"type":"link","label":"Stop an agent","href":"/docs/0.25.9/rest/stop-agent","className":"api-method post","docId":"rest/stop-agent","unlisted":false},{"type":"link","label":"Get agent memories for a room","href":"/docs/0.25.9/rest/get-memories","className":"api-method get","docId":"rest/get-memories","unlisted":false},{"type":"link","label":"API root","href":"/docs/0.25.9/rest/get-api-root","className":"api-method get","docId":"rest/get-api-root","unlisted":false},{"type":"link","label":"Hello world endpoint","href":"/docs/0.25.9/rest/get-hello","className":"api-method get","docId":"rest/get-hello","unlisted":false},{"type":"link","label":"List stored character files","href":"/docs/0.25.9/rest/list-stored-characters","className":"api-method get","docId":"rest/list-stored-characters","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Awesome elizaOS","href":"/docs/0.25.9/awesome-eliza","docId":"awesome-eliza","unlisted":false},{"type":"link","label":"CHANGELOG","href":"/docs/0.25.9/changelog","docId":"changelog","unlisted":false}]},"docs":{"advanced/autonomous-trading":{"id":"advanced/autonomous-trading","title":"\ud83d\udcc8 Autonomous Trading","description":"Overview","sidebar":"tutorialSidebar"},"advanced/eliza-in-tee":{"id":"advanced/eliza-in-tee","title":"\ud83e\uded6 Eliza in TEE","description":"Overview","sidebar":"tutorialSidebar"},"advanced/eliza-with-fhe":{"id":"advanced/eliza-with-fhe","title":"\ud83e\udde0 Eliza with FHE","description":"Overview"},"advanced/trust-engine":{"id":"advanced/trust-engine","title":"\ud83e\udd1d Trust Engine","description":"Overview","sidebar":"tutorialSidebar"},"advanced/verified-inference":{"id":"advanced/verified-inference","title":"\ud83e\udeaa Verified Inference","description":"Overview","sidebar":"tutorialSidebar"},"awesome-eliza":{"id":"awesome-eliza","title":"Awesome elizaOS","description":"A curated list of awesome things related to the eliza framework.","sidebar":"tutorialSidebar"},"changelog":{"id":"changelog","title":"Changelog","description":"v0.25.9 (March 02, 2025)","sidebar":"tutorialSidebar"},"contributing":{"id":"contributing","title":"Contributing to Eliza","description":"First off, thank you for considering contributing to elizaOS! We welcome improvements and contributions."},"core/actions":{"id":"core/actions","title":"\u26a1 Actions","description":"Actions define how agents respond to and interact with messages. They enable agents to perform tasks beyond simple message responses by integrating with external systems and modifying behavior.","sidebar":"tutorialSidebar"},"core/agents":{"id":"core/agents","title":"\ud83e\udd16 Agent Runtime","description":"The AgentRuntime is the core runtime environment for Eliza agents. It handles message processing, state management, plugin integration, and interaction with external services. You can think of it as the brains that provide the high-level orchestration layer for Eliza agents.","sidebar":"tutorialSidebar"},"core/characterfile":{"id":"core/characterfile","title":"\ud83d\udcdd Character Files","description":"Character files are JSON-formatted configurations that define AI agent personas, combining personality traits, knowledge bases, and interaction patterns to create consistent and effective AI agents. For a full list of capabilities check the character type API docs. You can also view and contribute to open sourced example characterfiles here//github.com/elizaos/characters.","sidebar":"tutorialSidebar"},"core/clients":{"id":"core/clients","title":"\ud83d\udd0c Clients","description":"Clients are core components in Eliza that enable AI agents to interact with external platforms and services. Each client provides a specialized interface for communication while maintaining consistent agent behavior across different platforms.","sidebar":"tutorialSidebar"},"core/database":{"id":"core/database","title":"\ud83d\udcbe Database Adapters","description":"Database adapters provide persistent storage capabilities for ElizaOS agents. They handle memory storage, relationship tracking, and knowledge management across different database backends.","sidebar":"tutorialSidebar"},"core/evaluators":{"id":"core/evaluators","title":"\ud83d\udcca Evaluators","description":"Evaluators are core components that assess and extract information from conversations. Agents use evaluators to automatically process conversations after they happen to help build up their knowledge and understanding over time.","sidebar":"tutorialSidebar"},"core/fact-evaluator":{"id":"core/fact-evaluator","title":"Fact Evaluator: Memory Formation System","description":"The Fact Evaluator serves as the agent\'s \\"episodic memory formation\\" system - similar to how humans process conversations and form memories. Just as you might reflect after a conversation \\"Oh, I learned something new about Sarah today\\", the Fact Evaluator systematically processes conversations to build up the agent\'s understanding of the world and the people in it."},"core/knowledge":{"id":"core/knowledge","title":"RAG Knowledge Documentation","description":"Overview","sidebar":"tutorialSidebar"},"core/overview":{"id":"core/overview","title":"Overview","description":"Eliza is a framework for creating AI agents that can interact across multiple platforms.","sidebar":"tutorialSidebar"},"core/plugins":{"id":"core/plugins","title":"Plugins","description":"Plugins (or packages) are modular extensions that enhance the capabilities of ElizaOS agents. They provide a flexible way to add new functionality, integrate external services, and customize agent behavior across different platforms.","sidebar":"tutorialSidebar"},"core/providers":{"id":"core/providers","title":"\ud83d\udd0c Providers","description":"Providers are the sources of information for the agent. They provide data or state while acting as the agent\'s \\"senses\\", injecting real-time information into the agent\'s context. They serve as the eyes, ears, and other sensory inputs that allow the agent to perceive and interact with its environment, like a bridge between the agent and various external systems such as market data, wallet information, sentiment analysis, and temporal context. Anything that the agent knows is either coming from like the built-in context or from a provider. For more info, see the providers API page.","sidebar":"tutorialSidebar"},"faq":{"id":"faq","title":"Frequently Asked Questions","description":"What is Eliza?","sidebar":"tutorialSidebar"},"guides/configuration":{"id":"guides/configuration","title":"\u2699\ufe0f Configuration Guide","description":"This guide covers how to configure Eliza for different use cases and environments. We\'ll walk through all available configuration options and best practices.","sidebar":"tutorialSidebar"},"guides/memory-management":{"id":"guides/memory-management","title":"Memory Management","description":"Overview","sidebar":"tutorialSidebar"},"guides/remote-deployment":{"id":"guides/remote-deployment","title":"Deploying ElizaOS to Production","description":"A guide to deploying and maintaining an ElizaOS agent in a production environment.","sidebar":"tutorialSidebar"},"guides/secrets-management":{"id":"guides/secrets-management","title":"\ud83d\udd10 Secrets Management","description":"A comprehensive guide for managing API keys, credentials, and other sensitive configuration in Eliza.","sidebar":"tutorialSidebar"},"guides/template-configuration":{"id":"guides/template-configuration","title":"\ud83d\udd27 Template and Client Configuration","description":"This guide covers how to configure custom templates and client behaviors for your AI agent. We\'ll walk through all available template options and configuration settings."},"guides/wsl":{"id":"guides/wsl","title":"WSL Setup Guide","description":"Guide for setting up Eliza on Windows using WSL (Windows Subsystem for Linux)","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction to Eliza","description":"As seen powering @DegenSpartanAI and @aixvcagent","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quickstart Guide","description":"Prerequisites","sidebar":"tutorialSidebar"},"rest/delete-agent":{"id":"rest/delete-agent","title":"Delete an agent","description":"Delete a running agent","sidebar":"tutorialSidebar"},"rest/eliza-os-api":{"id":"rest/eliza-os-api","title":"Eliza OS API","description":"API documentation for Eliza OS - A flexible and scalable AI agent framework.","sidebar":"tutorialSidebar"},"rest/get-agent":{"id":"rest/get-agent","title":"Get agent details","description":"Returns detailed information about a specific agent","sidebar":"tutorialSidebar"},"rest/get-api-root":{"id":"rest/get-api-root","title":"API root","description":"Welcome message for the API root","sidebar":"tutorialSidebar"},"rest/get-hello":{"id":"rest/get-hello","title":"Hello world endpoint","description":"Simple hello world test endpoint","sidebar":"tutorialSidebar"},"rest/get-memories":{"id":"rest/get-memories","title":"Get agent memories for a room","description":"Retrieves memories (message history) for a specific agent in a specific room","sidebar":"tutorialSidebar"},"rest/list-agents":{"id":"rest/list-agents","title":"List all agents","description":"Returns a list of all available agents running in the system","sidebar":"tutorialSidebar"},"rest/list-stored-characters":{"id":"rest/list-stored-characters","title":"List stored character files","description":"Lists all character files available in storage","sidebar":"tutorialSidebar"},"rest/set-agent":{"id":"rest/set-agent","title":"Update or create an agent","description":"Updates an existing agent or creates a new one with the specified configuration","sidebar":"tutorialSidebar"},"rest/start-agent":{"id":"rest/start-agent","title":"Start a new agent","description":"Starts a new agent using either a character path or JSON configuration","sidebar":"tutorialSidebar"},"rest/stop-agent":{"id":"rest/stop-agent","title":"Stop an agent","description":"Stops a running agent","sidebar":"tutorialSidebar"},"tutorials/devschool/index":{"id":"tutorials/devschool/index","title":"AI Agent Dev School","description":"Welcome to the AI Agent Dev School series, a comprehensive guide to building intelligent agents using the Eliza framework. Over the course of three in-depth sessions, we cover everything from the basics of TypeScript and plugins to advanced topics like providers, evaluators, and dynamic agent behaviors.","sidebar":"tutorialSidebar"},"tutorials/devschool/part1":{"id":"tutorials/devschool/part1","title":"Part 1: Introduction and Foundations","description":"Introduction and Foundations","sidebar":"tutorialSidebar"},"tutorials/devschool/part2":{"id":"tutorials/devschool/part2","title":"Part 2: Deep Dive into Actions, Providers, and Evaluators","description":"Deep Dive into Actions, Providers, and Evaluators","sidebar":"tutorialSidebar"},"tutorials/devschool/part3":{"id":"tutorials/devschool/part3","title":"Part 3: Building a User Data Extraction Agent","description":"Building a User Data Extraction Agent","sidebar":"tutorialSidebar"},"tutorials/nader_tutorial_10min":{"id":"tutorials/nader_tutorial_10min","title":"Creating an AI Agent with Your Own Personality","description":"In this tutorial, we\'ll explore how to create an AI agent that embodies your own personality using data from your Twitter archive, videos, markdown files, and PDFs. We\'ll leverage the Characterfile repo and Eliza framework to generate and integrate the character data.","sidebar":"tutorialSidebar"},"tutorials/nader_tutorial_15min":{"id":"tutorials/nader_tutorial_15min","title":"Building a Social AI Agent in 15 Minutes","description":"In this tutorial, you\'ll learn how to quickly build your own social media AI agent that can autonomously post tweets, respond to interactions, and maintain its own unique personality. We\'ll be using the Eliza framework by a16z and TypeScript.","sidebar":"tutorialSidebar"},"tutorials/nader_tutorial_35min":{"id":"tutorials/nader_tutorial_35min","title":"How to Build an API Plugin","description":"This guide walks you through creating a custom plugin for the Eliza AI framework that integrates with NASA\'s API to fetch space photos. You\'ll learn how to set up the project structure, implement the required components, and test your plugin across different interfaces.","sidebar":"tutorialSidebar"}}}}')}}]);