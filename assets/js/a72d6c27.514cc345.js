"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[24585],{9485:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"plugins/zksync-era","title":"@elizaos/plugin-zksync-era","description":"A plugin for integrating ZKSync Era blockchain operations with your application, providing token transfer capabilities and transaction management.","source":"@site/packages/plugins/zksync-era.md","sourceDirName":"plugins","slug":"/plugins/zksync-era","permalink":"/packages/plugins/zksync-era","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-zilliqa","permalink":"/packages/plugins/zilliqa"},"next":{"title":"Showcase","permalink":"/packages/"}}');var r=i(31085),l=i(71184);const a={},t="@elizaos/plugin-zksync-era",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Token Transfers",id:"token-transfers",level:3},{value:"Features",id:"features",level:2},{value:"Supported Tokens",id:"supported-tokens",level:3},{value:"Smart Account Integration",id:"smart-account-integration",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Core Interfaces",id:"core-interfaces",level:3},{value:"Plugin Methods",id:"plugin-methods",level:3},{value:"Development",id:"development",level:2},{value:"Building",id:"building",level:3},{value:"Testing",id:"testing",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Validation",id:"validation",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Credits",id:"credits",level:2},{value:"License",id:"license",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"elizaosplugin-zksync-era",children:"@elizaos/plugin-zksync-era"})}),"\n",(0,r.jsx)(n.p,{children:"A plugin for integrating ZKSync Era blockchain operations with your application, providing token transfer capabilities and transaction management."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This plugin provides functionality to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Execute token transfers on ZKSync Era"}),"\n",(0,r.jsx)(n.li,{children:"Handle smart account operations"}),"\n",(0,r.jsx)(n.li,{children:"Manage transaction signing and submission"}),"\n",(0,r.jsx)(n.li,{children:"Support multiple token standards"}),"\n",(0,r.jsx)(n.li,{children:"Process transaction receipts and confirmations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos/plugin-zksync-era\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The plugin requires the following environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-env",children:"ZKSYNC_ADDRESS=your_address           # Required: Your ZKSync wallet address\nZKSYNC_PRIVATE_KEY=your_private_key  # Required: Your wallet's private key\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { zksyncEraPlugin } from '@elizaos/plugin-zksync-era';\n\nconst plugin = zksyncEraPlugin;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"token-transfers",children:"Token Transfers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Transfer tokens\nawait transfer.handler(\n  runtime,\n  {\n    content: {\n      tokenAddress: '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4', // USDC\n      recipient: '0xCCa8009f5e09F8C5dB63cb0031052F9CB635Af62',\n      amount: '100',\n    },\n  },\n  state\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsx)(n.h3,{id:"supported-tokens",children:"Supported Tokens"}),"\n",(0,r.jsx)(n.p,{children:"The plugin includes pre-configured addresses for common tokens:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const TOKENS = {\n  ZK: '0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E',\n  ETH: '0x000000000000000000000000000000000000800A',\n  USDC: '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4',\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"smart-account-integration",children:"Smart Account Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const web3 = new Web3();\nweb3.registerPlugin(new ZKsyncPlugin(Web3ZKsyncL2.initWithDefaultProvider(types.Network.Mainnet)));\n\nconst smartAccount = new web3.ZKsync.SmartAccount({\n  address: PUBLIC_KEY,\n  secret: PRIVATE_KEY,\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"The plugin includes comprehensive error handling:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"try {\n  const transferTx = await smartAccount.transfer({\n    to: recipient,\n    token: tokenAddress,\n    amount: amount,\n  });\n  const receipt = await transferTx.wait();\n} catch (error) {\n  console.error('Transfer failed:', error.message);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Common error cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Invalid configuration"}),"\n",(0,r.jsx)(n.li,{children:"Insufficient balance"}),"\n",(0,r.jsx)(n.li,{children:"Network issues"}),"\n",(0,r.jsx)(n.li,{children:"Invalid addresses"}),"\n",(0,r.jsx)(n.li,{children:"Failed transactions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Always validate addresses before transactions"}),"\n",(0,r.jsx)(n.li,{children:"Keep private keys secure"}),"\n",(0,r.jsx)(n.li,{children:"Monitor transaction status"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error handling"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate gas settings"}),"\n",(0,r.jsx)(n.li,{children:"Keep track of transaction receipts"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(n.h3,{id:"core-interfaces",children:"Core Interfaces"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface TransferContent {\n  tokenAddress: string;\n  recipient: string;\n  amount: string | number;\n}\n\ninterface ZKsyncConfig {\n  ZKSYNC_ADDRESS: string;\n  ZKSYNC_PRIVATE_KEY: string;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"plugin-methods",children:"Plugin Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transfer"}),": Execute token transfers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"validateZKsyncConfig"}),": Validate configuration"]}),"\n",(0,r.jsx)(n.li,{children:"Transaction status monitoring"}),"\n",(0,r.jsx)(n.li,{children:"Receipt handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,r.jsx)(n.h3,{id:"building",children:"Building"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store private keys securely using environment variables"}),"\n",(0,r.jsx)(n.li,{children:"Validate all addresses before transactions"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error handling"}),"\n",(0,r.jsx)(n.li,{children:"Keep dependencies updated"}),"\n",(0,r.jsx)(n.li,{children:"Monitor transaction status"}),"\n",(0,r.jsx)(n.li,{children:"Use secure RPC endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper gas management"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Initialize plugin\nconst zksync = zksyncEraPlugin;\n\n// Execute transfer\ntry {\n  await transfer.handler(\n    runtime,\n    {\n      content: {\n        tokenAddress: TOKENS.USDC,\n        recipient: '0xCCa8009f5e09F8C5dB63cb0031052F9CB635Af62',\n        amount: '100',\n      },\n    },\n    state\n  );\n} catch (error) {\n  console.error('Transfer failed:', error.message);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,r.jsx)(n.p,{children:"The plugin includes validation for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wallet addresses"}),"\n",(0,r.jsx)(n.li,{children:"Token addresses"}),"\n",(0,r.jsx)(n.li,{children:"Transaction amounts"}),"\n",(0,r.jsx)(n.li,{children:"Configuration parameters"}),"\n",(0,r.jsx)(n.li,{children:"Network status"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@elizaos/core"}),": Core Eliza functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"web3"}),": Web3 library for blockchain interaction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"web3-plugin-zksync"}),": ZKSync Era integration"]}),"\n",(0,r.jsx)(n.li,{children:"Other standard dependencies listed in package.json"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,r.jsx)(n.p,{children:"Contributions are welcome! Please see the CONTRIBUTING.md file for more information."}),"\n",(0,r.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,r.jsx)(n.p,{children:"This plugin integrates with and builds upon several key technologies:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://zksync.io/",children:"ZKSync Era"}),": Layer 2 scaling solution for Ethereum"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://web3js.org/",children:"Web3.js"}),": Ethereum JavaScript API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/web3-plugin-zksync",children:"web3-plugin-zksync"}),": Official ZKSync plugin for Web3.js"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Special thanks to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The Eliza community for their contributions and feedback"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For more information about ZKSync Era and its capabilities, visit:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.zksync.io/",children:"ZKSync Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://blog.matter-labs.io/",children:"Matter Labs Blog"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/matter-labs/zksync-era",children:"ZKSync GitHub"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(n.p,{children:"This plugin is part of the Eliza project. See the main project repository for license information."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(14041);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);