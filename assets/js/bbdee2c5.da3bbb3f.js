"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[56287],{33757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"core/testing","title":"Testing Providers, Actions & Evaluators","description":"Learn how to write component and end-to-end tests for ElizaOS primitives","source":"@site/docs/core/testing.md","sourceDirName":"core","slug":"/core/testing","permalink":"/docs/core/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/core/testing.md","tags":[],"version":"current","lastUpdatedBy":"Shaw","lastUpdatedAt":1747986114000,"sidebarPosition":12,"frontMatter":{"sidebar_position":12,"title":"Testing Providers, Actions & Evaluators","description":"Learn how to write component and end-to-end tests for ElizaOS primitives","keywords":["testing","providers","actions","evaluators","vitest","e2e"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Worlds","permalink":"/docs/core/worlds"},"next":{"title":"Overview","permalink":"/docs/cli/overview"}}');var i=n(31085),o=n(71184);const r={sidebar_position:12,title:"Testing Providers, Actions & Evaluators",description:"Learn how to write component and end-to-end tests for ElizaOS primitives",keywords:["testing","providers","actions","evaluators","vitest","e2e"],image:"/img/cli.jpg"},a="\ud83e\uddea Testing Core Primitives",c={},d=[{value:"Component Tests",id:"component-tests",level:2},{value:"End-to-End Tests",id:"end-to-end-tests",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"-testing-core-primitives",children:"\ud83e\uddea Testing Core Primitives"})}),"\n",(0,i.jsxs)(t.p,{children:["ElizaOS encourages thorough testing of providers, actions and evaluators. Component tests use ",(0,i.jsx)(t.strong,{children:"Vitest"}),", while scenario tests run through the ElizaOS runtime."]}),"\n",(0,i.jsx)(t.h2,{id:"component-tests",children:"Component Tests"}),"\n",(0,i.jsx)(t.p,{children:"For unit style tests, import helpers from the bootstrap plugin test utilities\nand call the primitive directly."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import { describe, it, expect } from 'vitest';\nimport { timeProvider } from '@elizaos/plugin-bootstrap';\nimport {\n  createMockRuntime,\n  createMockMemory,\n} from '@elizaos/plugin-bootstrap/__tests__/test-utils';\n\ndescribe('time provider', () => {\n  it('returns a time string', async () => {\n    const runtime = createMockRuntime();\n    const msg = createMockMemory();\n    const result = await timeProvider.get(runtime as any, msg as any);\n    expect(result.values.time).toBeDefined();\n  });\n});\n"})}),"\n",(0,i.jsx)(t.h2,{id:"end-to-end-tests",children:"End-to-End Tests"}),"\n",(0,i.jsxs)(t.p,{children:["Scenario tests use a ",(0,i.jsx)(t.code,{children:"TestSuite"})," loaded by the CLI ",(0,i.jsx)(t.code,{children:"test"})," command. Each test\nreceives a running ",(0,i.jsx)(t.code,{children:"IAgentRuntime"})," instance."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import type { TestSuite } from '@elizaos/core';\nimport { bootstrapPlugin } from '@elizaos/plugin-bootstrap';\n\nexport class BootstrapSuite implements TestSuite {\n  name = 'bootstrap_example';\n  tests = [\n    {\n      name: 'reply action works',\n      fn: async (runtime) => {\n        const action = runtime.actions.find((a) => a.name === 'REPLY');\n        if (!action) throw new Error('action missing');\n        await action.handler(\n          runtime,\n          { content: { text: 'hi' } } as any,\n          { values: {} } as any,\n          {},\n          () => {}\n        );\n      },\n    },\n  ];\n}\nexport default new BootstrapSuite();\n"})}),"\n",(0,i.jsx)(t.p,{children:"Run all tests with:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"elizaos test\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Component and e2e tests can be filtered using ",(0,i.jsx)(t.code,{children:"--name"})," and built beforehand with\n",(0,i.jsx)(t.code,{children:"bun run build"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},71184:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(14041);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);