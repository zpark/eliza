"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[26821],{71184:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var r=t(14041);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},75531:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"clients/telegram","title":"Telegram Client Plugin for ElizaOS","description":"This plugin integrates a Telegram client with ElizaOS, allowing characters in ElizaOS to interact via Telegram. It provides an easy setup for starting the Telegram client using the provided bot token and includes basic lifecycle management.","source":"@site/packages/clients/telegram.md","sourceDirName":"clients","slug":"/clients/telegram","permalink":"/packages/clients/telegram","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Client Telegram Account","permalink":"/packages/clients/telegram-account"},"next":{"title":"Eliza Twitter/X Client","permalink":"/packages/clients/twitter"}}');var s=t(31085),i=t(71184);const l={},c="Telegram Client Plugin for ElizaOS",o={},a=[{value:"Features",id:"features",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Example <code>&lt;charactername&gt;.character.json</code>",id:"example-characternamecharacterjson",level:2},{value:"How to Modify Settings",id:"how-to-modify-settings",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Pre-Requisites",id:"pre-requisites",level:2},{value:"From the project root:",id:"from-the-project-root",level:2},{value:"Or using bun:",id:"or-using-bun",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"telegram-client-plugin-for-elizaos",children:"Telegram Client Plugin for ElizaOS"})}),"\n",(0,s.jsx)(n.p,{children:"This plugin integrates a Telegram client with ElizaOS, allowing characters in ElizaOS to interact via Telegram. It provides an easy setup for starting the Telegram client using the provided bot token and includes basic lifecycle management."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Seamless Telegram Integration"}),": Connects ElizaOS characters to Telegram through the bot API."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration Validation"}),": Ensures required settings are properly configured before starting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Startup Logging"}),": Logs successful initialization of the Telegram client for better debugging."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Future-proof Design"}),": Provides a basic structure for stopping the client (currently unsupported)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(n.p,{children:["Here are the available configuration options for the ",(0,s.jsx)(n.code,{children:"character.json"})," file:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Key"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"clients"})}),(0,s.jsx)(n.td,{children:"Array"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["Specifies the client type (e.g., ",(0,s.jsx)(n.code,{children:'["telegram"]'}),")."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allowDirectMessages"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Determines whether the bot should respond to direct messages (DMs)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"shouldOnlyJoinInAllowedGroups"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Ensures the bot only joins and responds in specified groups."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allowedGroupIds"})}),(0,s.jsx)(n.td,{children:"Array"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsxs)(n.td,{children:["Lists the group IDs the bot is allowed to interact with (requires ",(0,s.jsx)(n.code,{children:"shouldOnlyJoinInAllowedGroups"}),")."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"messageTrackingLimit"})}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"100"})}),(0,s.jsx)(n.td,{children:"Sets the maximum number of messages to track in memory for each chat."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"templates"})}),(0,s.jsx)(n.td,{children:"Object"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{}"})}),(0,s.jsx)(n.td,{children:"Allows customization of response templates for different message scenarios."})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"example-characternamecharacterjson",children:["Example ",(0,s.jsx)(n.code,{children:"<charactername>.character.json"})]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example configuration file with all options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "clients": ["telegram"],\n  "allowDirectMessages": true,\n  "shouldOnlyJoinInAllowedGroups": true,\n  "allowedGroupIds": ["-123456789", "-987654321"],\n  "messageTrackingLimit": 100,\n  "templates": {\n    "telegramMessageHandlerTemplate": "Your custom template here"\n  },\n  "secrets": {\n    "key": "<your-bot-token>"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-modify-settings",children:"How to Modify Settings"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Locate the ",(0,s.jsx)(n.code,{children:"character.json"})," file in your project directory."]}),"\n",(0,s.jsx)(n.li,{children:"Update the file with the desired configuration options as shown in the example above."}),"\n",(0,s.jsx)(n.li,{children:"Save the file and restart the bot for the changes to take effect."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Production"}),": Restrict bot access with ",(0,s.jsx)(n.code,{children:"shouldOnlyJoinInAllowedGroups: true"})," and specify ",(0,s.jsx)(n.code,{children:"allowedGroupIds"})," to ensure security."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token Management"}),": Always keep your bot token and backend tokens secure and never expose them in public repositories."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pre-requisites",children:"Pre-Requisites"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Add the bot token to the ",(0,s.jsx)(n.code,{children:".env"})," file in the project root:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"TELEGRAM_BOT_TOKEN=your-bot-token\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Add the same token to your character configuration file:"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Create or modify ",(0,s.jsx)(n.code,{children:"characters/your-character.json"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "clients": ["telegram"],\n  "secrets": {\n    "key": "<your-bot-token>"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"from-the-project-root",children:"From the project root:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,s.jsx)(n.h2,{id:"or-using-bun",children:"Or using bun:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'bun start --character="characters/your-character.json"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);