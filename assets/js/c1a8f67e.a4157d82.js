"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[91300],{8832:e=>{e.exports=JSON.parse('{"permalink":"/blog/plugin-ordering-guide","editUrl":"https://github.com/elizaos/eliza/tree/develop/docs/blog/plugin-ordering-guide.mdx","source":"@site/blog/plugin-ordering-guide.mdx","title":"Understanding Plugin Ordering in ElizaOS","description":"Deep dive into how ElizaOS orders plugins for optimal AI model provider precedence and embedding fallback behavior","date":"2025-01-15T00:00:00.000Z","tags":[{"inline":false,"label":"Plugins","permalink":"/blog/tags/plugins","description":"ElizaOS plugin system and architecture"},{"inline":false,"label":"Architecture","permalink":"/blog/tags/architecture","description":"System architecture and design"},{"inline":false,"label":"Models","permalink":"/blog/tags/models","description":"AI models and integrations"},{"inline":false,"label":"Providers","permalink":"/blog/tags/providers","description":"Service providers and integrations"},{"inline":false,"label":"Guide","permalink":"/blog/tags/guide","description":"How-to guides and tutorials"}],"readingTime":5.66,"hasTruncateMarker":true,"authors":[{"name":"ElizaOS Team","title":"Core Team","url":"https://github.com/elizaos","socials":{"twitter":"https://twitter.com/elizaOS","github":"https://github.com/elizaOS"},"imageURL":"https://github.com/elizaos.png","key":"team","page":null}],"frontMatter":{"title":"Understanding Plugin Ordering in ElizaOS","authors":"team","date":"2025-01-15T00:00:00.000Z","description":"Deep dive into how ElizaOS orders plugins for optimal AI model provider precedence and embedding fallback behavior","tags":["plugins","architecture","models","providers","guide"],"image":"/img/plugin-ordering.jpg"},"unlisted":false,"lastUpdatedBy":"Sayo","prevItem":{"title":"What Did You Get Done This Week? Recap","permalink":"/blog/wdygdtw-recap"}}')},9841:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});var n=t(8832),r=t(31085),a=t(71184);const o={title:"Understanding Plugin Ordering in ElizaOS",authors:"team",date:new Date("2025-01-15T00:00:00.000Z"),description:"Deep dive into how ElizaOS orders plugins for optimal AI model provider precedence and embedding fallback behavior",tags:["plugins","architecture","models","providers","guide"],image:"/img/plugin-ordering.jpg"},l="Understanding Plugin Ordering in ElizaOS",s={authorsImageUrls:[void 0]},d=[];function g(e){const i={p:"p",...(0,a.R)(),...e.components};return(0,r.jsx)(i.p,{children:"Plugin ordering in ElizaOS isn't just a technical detail\u2014it's a sophisticated system that ensures your AI agents work reliably with the right providers for different tasks. Whether you're using Anthropic for chat, OpenAI for embeddings, or running everything locally with Ollama, understanding how plugins are ordered can save you from headaches and help you build more robust agents."})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},71184:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>l});var n=t(14041);const r={},a=n.createContext(r);function o(e){const i=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);