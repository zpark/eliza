"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[5614],{71184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(14041);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}},77327:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"plugins/migration/claude-code/completion-requirements","title":"Final Setup Instructions Before Commit","description":"This document outlines the essential steps to complete before committing and publishing the plugin. Please follow each step carefully to ensure proper configuration.","source":"@site/docs/plugins/migration/claude-code/completion-requirements.md","sourceDirName":"plugins/migration/claude-code","slug":"/plugins/migration/claude-code/completion-requirements","permalink":"/docs/plugins/migration/claude-code/completion-requirements","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/plugins/migration/claude-code/completion-requirements.md","tags":[],"version":"current","lastUpdatedBy":"SYMBaiEX","lastUpdatedAt":1751742163000,"frontMatter":{}}');var t=i(31085),l=i(71184);const r={},a="Final Setup Instructions Before Commit",o={},c=[{value:"1. Configure .gitignore",id:"1-configure-gitignore",level:2},{value:"2. Configure .npmignore",id:"2-configure-npmignore",level:2},{value:"3. Add MIT License",id:"3-add-mit-license",level:2},{value:"4. Verify package.json",id:"4-verify-packagejson",level:2},{value:"Basic Fields",id:"basic-fields",level:3},{value:"Additional Important Fields",id:"additional-important-fields",level:3},{value:"Eliza Plugin Configuration (agentConfig)",id:"eliza-plugin-configuration-agentconfig",level:3},{value:"Parameter Properties:",id:"parameter-properties",level:4},{value:"Example for Avalanche Plugin:",id:"example-for-avalanche-plugin",level:4},{value:"5. Review README.md",id:"5-review-readmemd",level:2},{value:"Final Checklist",id:"final-checklist",level:2},{value:"Notes",id:"notes",level:2},{value:"6. GitHub Workflow for Automated NPM Release",id:"6-github-workflow-for-automated-npm-release",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Adding the Release Workflow",id:"adding-the-release-workflow",level:3},{value:"How This Workflow Works",id:"how-this-workflow-works",level:3},{value:"Setting Up NPM Token",id:"setting-up-npm-token",level:3},{value:"7. Code Formatting with Prettier",id:"7-code-formatting-with-prettier",level:2},{value:"Install Prettier (if not already installed)",id:"install-prettier-if-not-already-installed",level:3},{value:"Add Prettier Configuration",id:"add-prettier-configuration",level:3},{value:"Add Format Script to package.json",id:"add-format-script-to-packagejson",level:3},{value:"Run Prettier",id:"run-prettier",level:3},{value:"Final Steps Before Committing to 1.x Branch",id:"final-steps-before-committing-to-1x-branch",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"final-setup-instructions-before-commit",children:"Final Setup Instructions Before Commit"})}),"\n",(0,t.jsx)(n.p,{children:"This document outlines the essential steps to complete before committing and publishing the plugin. Please follow each step carefully to ensure proper configuration."}),"\n",(0,t.jsx)(n.h2,{id:"1-configure-gitignore",children:"1. Configure .gitignore"}),"\n",(0,t.jsxs)(n.p,{children:["Create or update the ",(0,t.jsx)(n.code,{children:".gitignore"})," file with the following minimum configuration:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dist\nnode_modules\n.env\n.elizadb\n.turbo\n"})}),"\n",(0,t.jsx)(n.h2,{id:"2-configure-npmignore",children:"2. Configure .npmignore"}),"\n",(0,t.jsxs)(n.p,{children:["Create or update the ",(0,t.jsx)(n.code,{children:".npmignore"})," file to ensure only necessary files are included in the npm package:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"*\n\n!dist/**\n!package.json\n!readme.md\n!tsup.config.ts\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-add-mit-license",children:"3. Add MIT License"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:"LICENSE"})," file in the root directory with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'MIT License\n\nCopyright (c) 2025 Shaw Walters and elizaOS Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-verify-packagejson",children:"4. Verify package.json"}),"\n",(0,t.jsxs)(n.p,{children:["Ensure the ",(0,t.jsx)(n.code,{children:"package.json"})," file contains all required fields:"]}),"\n",(0,t.jsx)(n.h3,{id:"basic-fields",children:"Basic Fields"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"name"}),": Package name (should match npm registry requirements)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"version"}),': Semantic version (e.g., "1.0.0")']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"description"}),": Clear description of the plugin"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"main"}),': Entry point (typically "dist/index.js")']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"types"}),': TypeScript definitions (typically "dist/index.d.ts")']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"author"}),": Author information"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"license"}),': "MIT"']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"repository"}),": Git repository information"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"keywords"}),": Relevant keywords for npm search"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"scripts"}),": Build, test, and other necessary scripts"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"dependencies"}),": All runtime dependencies"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"devDependencies"}),": All development dependencies"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"peerDependencies"}),': If applicable (e.g., "@elizaos/core")']}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"additional-important-fields",children:"Additional Important Fields"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"type"}),': Should be "module" for ESM modules']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"module"}),': Same as main for ESM (typically "dist/index.js")']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"exports"}),": Export configuration for modern bundlers"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"files"}),': Array of files/folders to include in npm package (typically ["dist"])']}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.code,{children:"publishConfig"}),": Publishing configuration (e.g., ",(0,t.jsx)(n.code,{children:'{"access": "public"}'}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example exports configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"exports": {\n    "./package.json": "./package.json",\n    ".": {\n        "import": {\n            "types": "./dist/index.d.ts",\n            "default": "./dist/index.js"\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"eliza-plugin-configuration-agentconfig",children:"Eliza Plugin Configuration (agentConfig)"}),"\n",(0,t.jsxs)(n.p,{children:["For Eliza plugins, you MUST include the ",(0,t.jsx)(n.code,{children:"agentConfig"})," section:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"agentConfig": {\n    "pluginType": "elizaos:plugin:1.0.0",\n    "pluginParameters": {\n        "YOUR_PARAMETER_NAME": {\n            "type": "string",\n            "description": "Clear description of what this parameter does",\n            "required": true|false,\n            "sensitive": true|false,\n            "default": "optional-default-value"\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"parameter-properties",children:"Parameter Properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type"}),': Data type ("string", "number", "boolean", etc.)']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description"}),": Clear explanation of the parameter's purpose"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"required"}),": Whether the parameter must be provided"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sensitive"}),": Whether the parameter contains sensitive data (e.g., API keys)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"default"}),": Optional default value if not required"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example-for-avalanche-plugin",children:"Example for Avalanche Plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"agentConfig": {\n    "pluginType": "elizaos:plugin:1.0.0",\n    "pluginParameters": {\n        "AVALANCHE_PRIVATE_KEY": {\n            "type": "string",\n            "description": "Private key for interacting with Avalanche blockchain",\n            "required": true,\n            "sensitive": true\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"5-review-readmemd",children:"5. Review README.md"}),"\n",(0,t.jsx)(n.p,{children:"Verify that the README.md file includes:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Clear project title and description"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Installation instructions"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Usage examples"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configuration requirements"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","API documentation (if applicable)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Contributing guidelines"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","License information"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Contact/support information"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"final-checklist",children:"Final Checklist"}),"\n",(0,t.jsx)(n.p,{children:"Before committing and publishing:"}),"\n",(0,t.jsxs)(n.ol,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run ",(0,t.jsx)(n.code,{children:"bun run build"})," to ensure the project builds successfully"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run tests to verify functionality"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Ensure all environment variables are documented"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove any sensitive information or API keys"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify all file paths and imports are correct"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check that the dist/ folder is properly generated"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Confirm version number is appropriate for the release"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:".gitignore"})," prevents unnecessary files from being committed to the repository"]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:".npmignore"})," ensures only essential files are published to npm"]}),"\n",(0,t.jsx)(n.li,{children:"The LICENSE file is required for open-source distribution"}),"\n",(0,t.jsx)(n.li,{children:"Proper package.json configuration is crucial for npm publishing and dependency management"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6-github-workflow-for-automated-npm-release",children:"6. GitHub Workflow for Automated NPM Release"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.h3,{id:"adding-the-release-workflow",children:"Adding the Release Workflow"}),"\n",(0,t.jsx)(n.p,{children:"Create the following file in your repository to enable automated npm publishing when the version changes:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"File Path:"})," ",(0,t.jsx)(n.code,{children:".github/workflows/npm-deploy.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'name: Publish Package\n\non:\n  push:\n    branches:\n      - 1.x\n  workflow_dispatch:\n\njobs:\n  verify_version:\n    runs-on: ubuntu-latest\n    outputs:\n      should_publish: ${{ steps.check.outputs.should_publish }}\n      version: ${{ steps.check.outputs.version }}\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Check if package.json version changed\n        id: check\n        run: |\n          echo "Current branch: ${{ github.ref }}"\n\n          # Get current version\n          CURRENT_VERSION=$(jq -r .version package.json)\n          echo "Current version: $CURRENT_VERSION"\n\n          # Get previous commit hash\n          git rev-parse HEAD~1 || git rev-parse HEAD\n          PREV_COMMIT=$(git rev-parse HEAD~1 2>/dev/null || git rev-parse HEAD)\n\n          # Check if package.json changed\n          if git diff --name-only HEAD~1 HEAD | grep "package.json"; then\n            echo "Package.json was changed in this commit"\n            \n            # Get previous version if possible\n            if git show "$PREV_COMMIT:package.json" 2>/dev/null; then\n              PREV_VERSION=$(git show "$PREV_COMMIT:package.json" | jq -r .version)\n              echo "Previous version: $PREV_VERSION"\n              \n              if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then\n                echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"\n                echo "should_publish=true" >> $GITHUB_OUTPUT\n              else\n                echo "Version unchanged"\n                echo "should_publish=false" >> $GITHUB_OUTPUT\n              fi\n            else\n              echo "First commit with package.json, will publish"\n              echo "should_publish=true" >> $GITHUB_OUTPUT\n            fi\n          else\n            echo "Package.json not changed in this commit"\n            echo "should_publish=false" >> $GITHUB_OUTPUT\n          fi\n\n          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT\n\n  publish:\n    needs: verify_version\n    if: needs.verify_version.outputs.should_publish == \'true\'\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Create Git tag\n        run: |\n          git config user.name "github-actions[bot]"\n          git config user.email "github-actions[bot]@users.noreply.github.com"\n          git tag -a "v${{ needs.verify_version.outputs.version }}" -m "Release v${{ needs.verify_version.outputs.version }}"\n          git push origin "v${{ needs.verify_version.outputs.version }}"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Setup Bun\n        uses: oven-sh/setup-bun@v2\n\n      - name: Install dependencies\n        run: bun install\n\n      - name: Build package\n        run: bun run build\n\n      - name: Publish to npm\n        run: bun publish\n        env:\n          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}\n\n  create_release:\n    needs: [verify_version, publish]\n    if: needs.verify_version.outputs.should_publish == \'true\'\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Create GitHub Release\n        uses: actions/create-release@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          tag_name: \'v${{ needs.verify_version.outputs.version }}\'\n          release_name: \'v${{ needs.verify_version.outputs.version }}\'\n          body: \'Release v${{ needs.verify_version.outputs.version }}\'\n          draft: false\n          prerelease: false\n'})}),"\n",(0,t.jsx)(n.h3,{id:"how-this-workflow-works",children:"How This Workflow Works"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Triggers on:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Push to the 1.x branch"}),"\n",(0,t.jsx)(n.li,{children:"Manual workflow dispatch"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version Check:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Compares the current package.json version with the previous commit"}),"\n",(0,t.jsx)(n.li,{children:"Only proceeds if the version has changed"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Publishing Steps:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creates a git tag with the version"}),"\n",(0,t.jsx)(n.li,{children:"Builds the package using Bun"}),"\n",(0,t.jsx)(n.li,{children:"Publishes to npm using the NPM_TOKEN secret"}),"\n",(0,t.jsx)(n.li,{children:"Creates a GitHub release"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-npm-token",children:"Setting Up NPM Token"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Go to your GitHub repository settings"}),"\n",(0,t.jsx)(n.li,{children:"Navigate to Settings \u2192 Secrets and variables \u2192 Actions"}),"\n",(0,t.jsxs)(n.li,{children:["Add a new repository secret named ",(0,t.jsx)(n.code,{children:"NPM_TOKEN"})]}),"\n",(0,t.jsx)(n.li,{children:"Use your npm access token as the value"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"7-code-formatting-with-prettier",children:"7. Code Formatting with Prettier"}),"\n",(0,t.jsx)(n.p,{children:"Before finalizing the plugin, ensure consistent code formatting:"}),"\n",(0,t.jsx)(n.h3,{id:"install-prettier-if-not-already-installed",children:"Install Prettier (if not already installed)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bun add -d prettier\n"})}),"\n",(0,t.jsx)(n.h3,{id:"add-prettier-configuration",children:"Add Prettier Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Required config don't hallucinate and add anything else!"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".prettierrc"})," file in the root directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "semi": true,\n  "trailingComma": "es5",\n  "singleQuote": false,\n  "printWidth": 80,\n  "tabWidth": 2,\n  "useTabs": false,\n  "arrowParens": "always",\n  "endOfLine": "lf"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"add-format-script-to-packagejson",children:"Add Format Script to package.json"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"scripts": {\n  "format": "prettier --write \\"src/**/*.{ts,tsx,js,jsx,json,md}\\"",\n  "format:check": "prettier --check \\"src/**/*.{ts,tsx,js,jsx,json,md}\\""\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"run-prettier",children:"Run Prettier"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bun run format\n"})}),"\n",(0,t.jsx)(n.h2,{id:"final-steps-before-committing-to-1x-branch",children:"Final Steps Before Committing to 1.x Branch"}),"\n",(0,t.jsxs)(n.ol,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Ensure all files listed in this document are created"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run the build to verify everything compiles"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run prettier to format all code consistently"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test the package locally if possible"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Commit all changes with a clear message"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Push to the 1.x branch"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify the GitHub Action runs successfully on first push"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This completes the plugin migration to the standardized structure for the 1.x branch."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);