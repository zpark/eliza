"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[37963],{69899:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"plugins/di","title":"Unmaintained: this plugin needs a maintainer.","description":"This plugin provides a dependency injection system for Eliza plugins.","source":"@site/packages/plugins/di.md","sourceDirName":"plugins","slug":"/plugins/di","permalink":"/packages/plugins/di","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-dexscreener","permalink":"/packages/plugins/dexscreener"},"next":{"title":"@elizaos/plugin-dkg","permalink":"/packages/plugins/dkg"}}');var s=i(31085),a=i(71184);const c={},r="Unmaintained: this plugin needs a maintainer.",o={},l=[{value:"What is Dependency Injection?",id:"what-is-dependency-injection",level:2},{value:"Examples of How to build a Plugin using Dependency Injection",id:"examples-of-how-to-build-a-plugin-using-dependency-injection",level:2},{value:"Where can I use Dependency Injection?",id:"where-can-i-use-dependency-injection",level:3},{value:"Decorators for Dependency Injection",id:"decorators-for-dependency-injection",level:2},{value:"From inversify",id:"from-inversify",level:3},{value:"<code>@injectable</code>",id:"injectable",level:4},{value:"<code>@inject</code>",id:"inject",level:4},{value:"From di plugin (used for BaseInjectableAction)",id:"from-di-plugin-used-for-baseinjectableaction",level:3},{value:"<code>@property</code>",id:"property",level:4},{value:"Abstract Classes provided by this plugin",id:"abstract-classes-provided-by-this-plugin",level:2},{value:"<code>BaseInjectableAction</code>",id:"baseinjectableaction",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"unmaintained-this-plugin-needs-a-maintainer",children:"Unmaintained: this plugin needs a maintainer."})}),"\n",(0,s.jsx)(n.h1,{id:"elizaosplugin-di---dependency-injection-plugin-for-eliza",children:"@elizaos/plugin-di - Dependency Injection Plugin for Eliza"}),"\n",(0,s.jsx)(n.p,{children:"This plugin provides a dependency injection system for Eliza plugins."}),"\n",(0,s.jsx)(n.h2,{id:"what-is-dependency-injection",children:"What is Dependency Injection?"}),"\n",(0,s.jsx)(n.p,{children:"Dependency Injection is a design pattern that allows you to inject dependencies into a class or function. This pattern is useful for decoupling components and making your code more modular and testable."}),"\n",(0,s.jsx)(n.h2,{id:"examples-of-how-to-build-a-plugin-using-dependency-injection",children:"Examples of How to build a Plugin using Dependency Injection"}),"\n",(0,s.jsxs)(n.p,{children:["Check the ",(0,s.jsx)(n.a,{href:"../_examples/plugin-with-di/",children:"example"})," folder for a simple example of how to create a plugin using Dependency Injection."]}),"\n",(0,s.jsx)(n.h3,{id:"where-can-i-use-dependency-injection",children:"Where can I use Dependency Injection?"}),"\n",(0,s.jsx)(n.p,{children:"You can use Dependency Injection in any part of your Eliza plugin, including actions, evaluators, providers, services, and clients."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Actions: Inject services or providers to interact with external APIs or services. ",(0,s.jsx)(n.a,{href:"../_examples/plugin-with-di/src/actions/sampleAction.ts",children:"Example"})]}),"\n",(0,s.jsxs)(n.li,{children:["Evaluators: Inject services or providers to evaluate conditions or perform calculations. ",(0,s.jsx)(n.a,{href:"../_examples/plugin-with-di/src/evaluators/sampleEvaluator.ts",children:"Example"})]}),"\n",(0,s.jsxs)(n.li,{children:["Providers: Inject services or providers to provide data or resources. ",(0,s.jsx)(n.a,{href:"../_examples/plugin-with-di/src/providers/sampleProvider.ts",children:"Example"})]}),"\n",(0,s.jsxs)(n.li,{children:["Services: Inject other services to perform business logic. ",(0,s.jsx)(n.a,{href:"../_examples/plugin-with-di/src/services/sampleService.ts",children:"Example"})]}),"\n",(0,s.jsx)(n.li,{children:"Clients: Inject services to interact with external APIs or services. Lack of examples, but you can refer to the services example."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"decorators-for-dependency-injection",children:"Decorators for Dependency Injection"}),"\n",(0,s.jsx)(n.p,{children:"This plugin provides a set of decorators that you can use to inject dependencies into your classes or functions."}),"\n",(0,s.jsx)(n.h3,{id:"from-inversify",children:"From inversify"}),"\n",(0,s.jsxs)(n.p,{children:["We use the ",(0,s.jsx)(n.a,{href:"https://inversify.io/",children:"inversify"})," library to provide the dependency injection system.\nThe following decorators are provided by the ",(0,s.jsx)(n.a,{href:"https://inversify.io/",children:"inversify"})," library."]}),"\n",(0,s.jsx)(n.h4,{id:"injectable",children:(0,s.jsx)(n.code,{children:"@injectable"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Category: Class Decorator"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This decorator marks a class as injectable. This means that you can inject this class into other classes using the ",(0,s.jsx)(n.code,{children:"@inject"})," decorator."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { injectable } from 'inversify';\n\n@injectable()\nclass SampleClass {}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Remember to register the class with the container before injecting it into other classes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { globalContainer } from '@elizaos/plugin-di';\n\n// Register the class with the container as a singleton, this means that the class will be instantiated only once.\nglobalContainer.bind(SingletonClass).toSelf().inSingletonScope();\n// Register the class with the container as a request context, this means that the class will be instantiated for each request(in this case means each Character).\nglobalContainer.bind(CharactorContextClass).toSelf().inRequestScope();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"inject",children:(0,s.jsx)(n.code,{children:"@inject"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Category: Parameter Decorator"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This decorator marks a parameter as an injection target. This means that the parameter will be injected with the appropriate dependency when the class is instantiated."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { injectable, inject } from 'inversify';\n\n@injectable()\nclass SampleClass {\n  constructor(\n    // Inject the SampleDependency as a public property of the class.\n    @inject('SampleDependency') public sampleDependency: SampleDependency\n  ) {}\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"from-di-plugin-used-for-baseinjectableaction",children:"From di plugin (used for BaseInjectableAction)"}),"\n",(0,s.jsx)(n.p,{children:"DI plugin provides abstract classes that you can extend to create Injectable actions.\nAnd that provides the following decorators to improve the readability of the code."}),"\n",(0,s.jsx)(n.h4,{id:"property",children:(0,s.jsx)(n.code,{children:"@property"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Category: Property Decorator"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This decorator is used to define a property in an action content class which will be used to generate the action content object Schema and content description template for LLM object generation."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { z } from 'zod';\nimport { property } from '@elizaos/plugin-di';\n\nclass SampleActionContent {\n  @property({\n    description: 'Sample property description',\n    schema: z.string(),\n  })\n  sampleProperty: string;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"abstract-classes-provided-by-this-plugin",children:"Abstract Classes provided by this plugin"}),"\n",(0,s.jsx)(n.p,{children:"This plugin provides the following abstract classes that you can extend to create Injectable classes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BaseInjectableAction"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BaseInjectableEvaluator"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Note: This is optional, you can create your own classes to create injectable actions."}),"\n",(0,s.jsx)(n.h3,{id:"baseinjectableaction",children:(0,s.jsx)(n.code,{children:"BaseInjectableAction"})}),"\n",(0,s.jsxs)(n.p,{children:["This abstract class simplify the creation of injectable actions.\nYou don't need to think about the template for content generation, it will be generated automatically based on the properties of the content Class.\nWhat you need to implement is the ",(0,s.jsx)(n.code,{children:"execute"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { injectable } from 'inversify';\nimport { BaseInjectableAction } from '@elizaos/plugin-di';\n\nclass SampleActionContent {\n  @property({\n    description: 'Sample property description',\n    schema: z.string(),\n  })\n  property1: string;\n}\n\n@injectable()\nclass SampleAction extends BaseInjectableAction<SampleActionContent> {\n  constructor() {\n    super({\n      /** general action constent options */\n      contentClass: SampleActionContent,\n    });\n  }\n\n  /**\n   * It will be called by `handler` function when the action is triggered.\n   */\n  async execute(\n    content: SampleActionContent | null,\n    runtime: IAgentRuntime,\n    message: Memory,\n    state: State,\n    callback?: HandlerCallback\n  ): Promise<void> {\n    // Your action logic here\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(14041);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);