"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[29816],{34797:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"adapters/pglite","title":"PGLite Adapter for ElizaOS","description":"A lightweight PostgreSQL-compatible database adapter for ElizaOS, providing vector search capabilities and efficient data persistence in a local environment.","source":"@site/packages/adapters/pglite.md","sourceDirName":"adapters","slug":"/adapters/pglite","permalink":"/packages/adapters/pglite","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"MongoDB Adapter for ElizaOS","permalink":"/packages/adapters/mongodb"},"next":{"title":"ElizaOS PostgreSQL Adapter","permalink":"/packages/adapters/postgres"}}');var a=n(31085),s=n(71184);const r={},l="PGLite Adapter for ElizaOS",o={},d=[{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Required Environment Variables",id:"required-environment-variables",level:3},{value:"Features in Detail",id:"features-in-detail",level:2},{value:"Vector Search",id:"vector-search",level:3},{value:"Schema Management",id:"schema-management",level:3},{value:"Caching System",id:"caching-system",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"FAQ",id:"faq",level:2},{value:"Can I use this adapter in production?",id:"can-i-use-this-adapter-in-production",level:3},{value:"How does the vector search compare to full PostgreSQL?",id:"how-does-the-vector-search-compare-to-full-postgresql",level:3},{value:"Can I migrate from PGLite to full PostgreSQL?",id:"can-i-migrate-from-pglite-to-full-postgresql",level:3},{value:"Does it support concurrent connections?",id:"does-it-support-concurrent-connections",level:3},{value:"How large can the database grow?",id:"how-large-can-the-database-grow",level:3},{value:"Can I use custom embedding dimensions?",id:"can-i-use-custom-embedding-dimensions",level:3},{value:"Is the data persistent?",id:"is-the-data-persistent",level:3},{value:"How do I backup the database?",id:"how-do-i-backup-the-database",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"pglite-adapter-for-elizaos",children:"PGLite Adapter for ElizaOS"})}),"\n",(0,a.jsx)(i.p,{children:"A lightweight PostgreSQL-compatible database adapter for ElizaOS, providing vector search capabilities and efficient data persistence in a local environment."}),"\n",(0,a.jsx)(i.h2,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Embedded PostgreSQL engine for local development and testing"}),"\n",(0,a.jsx)(i.li,{children:"Full vector search support via pgvector"}),"\n",(0,a.jsx)(i.li,{children:"Built-in fuzzy string matching"}),"\n",(0,a.jsx)(i.li,{children:"Automatic schema initialization"}),"\n",(0,a.jsx)(i.li,{children:"Memory-efficient caching system"}),"\n",(0,a.jsx)(i.li,{children:"Support for multiple embedding providers (OpenAI, Ollama, GaiaNet)"}),"\n",(0,a.jsx)(i.li,{children:"Transaction support with automatic rollback"}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Node.js 16 or later"}),"\n",(0,a.jsx)(i.li,{children:"ElizaOS installation"}),"\n",(0,a.jsx)(i.li,{children:"Sufficient disk space for local database storage"}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"npm install @elizaos-plugins/adapter-pglite\n"})}),"\n",(0,a.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(i.p,{children:"Add the adapter to your ElizaOS configuration:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json",children:'{\n  "plugins": ["@elizaos-plugins/adapter-pglite"],\n  "settings": {\n    "PGLITE_DATA_DIR": "/path/to/data/directory" // Required setting\n  }\n}\n'})}),"\n",(0,a.jsx)(i.h3,{id:"required-environment-variables",children:"Required Environment Variables"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"PGLITE_DATA_DIR"}),": Path to the directory where PGLite will store its data","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Use ",(0,a.jsx)(i.code,{children:"memory://"})," for in-memory database (useful for testing)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"features-in-detail",children:"Features in Detail"}),"\n",(0,a.jsx)(i.h3,{id:"vector-search",children:"Vector Search"}),"\n",(0,a.jsx)(i.p,{children:"The adapter automatically configures vector search based on your embedding provider:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"OpenAI (1536 dimensions)"}),"\n",(0,a.jsx)(i.li,{children:"Ollama (1024 dimensions)"}),"\n",(0,a.jsx)(i.li,{children:"GaiaNet (768 dimensions)"}),"\n",(0,a.jsx)(i.li,{children:"Default/Other (384 dimensions)"}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"schema-management",children:"Schema Management"}),"\n",(0,a.jsx)(i.p,{children:"The adapter automatically manages:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Database tables (memories, participants, goals, etc.)"}),"\n",(0,a.jsx)(i.li,{children:"Vector indexes for similarity search"}),"\n",(0,a.jsx)(i.li,{children:"Cache tables with TTL support"}),"\n",(0,a.jsx)(i.li,{children:"Relationship tracking tables"}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"caching-system",children:"Caching System"}),"\n",(0,a.jsx)(i.p,{children:"Built-in caching system features:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Automatic cache invalidation"}),"\n",(0,a.jsx)(i.li,{children:"Support for vector similarity caching"}),"\n",(0,a.jsx)(i.li,{children:"Levenshtein distance-based text matching"}),"\n",(0,a.jsx)(i.li,{children:"Transaction-safe cache updates"}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Uses optimized vector indexes for fast similarity searches"}),"\n",(0,a.jsx)(i.li,{children:"Implements efficient batch processing for large datasets"}),"\n",(0,a.jsx)(i.li,{children:"Automatic cleanup of expired cache entries"}),"\n",(0,a.jsx)(i.li,{children:"Transaction support for data consistency"}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"faq",children:"FAQ"}),"\n",(0,a.jsx)(i.h3,{id:"can-i-use-this-adapter-in-production",children:"Can I use this adapter in production?"}),"\n",(0,a.jsx)(i.p,{children:"PGLite is designed primarily for development and testing environments. For production use, consider using the full PostgreSQL adapter."}),"\n",(0,a.jsx)(i.h3,{id:"how-does-the-vector-search-compare-to-full-postgresql",children:"How does the vector search compare to full PostgreSQL?"}),"\n",(0,a.jsx)(i.p,{children:"PGLite's vector search capabilities are identical to PostgreSQL when using pgvector, but with slightly lower performance due to its embedded nature."}),"\n",(0,a.jsx)(i.h3,{id:"can-i-migrate-from-pglite-to-full-postgresql",children:"Can I migrate from PGLite to full PostgreSQL?"}),"\n",(0,a.jsx)(i.p,{children:"Yes, the schema and query structure are identical between PGLite and PostgreSQL, making migration straightforward."}),"\n",(0,a.jsx)(i.h3,{id:"does-it-support-concurrent-connections",children:"Does it support concurrent connections?"}),"\n",(0,a.jsx)(i.p,{children:"PGLite supports multiple connections but is optimized for single-process use. For heavy concurrent workloads, use the full PostgreSQL adapter."}),"\n",(0,a.jsx)(i.h3,{id:"how-large-can-the-database-grow",children:"How large can the database grow?"}),"\n",(0,a.jsx)(i.p,{children:"PGLite is limited by available disk space and system memory. For datasets larger than a few GB, consider using the full PostgreSQL adapter."}),"\n",(0,a.jsx)(i.h3,{id:"can-i-use-custom-embedding-dimensions",children:"Can I use custom embedding dimensions?"}),"\n",(0,a.jsx)(i.p,{children:"Yes, the adapter automatically detects and configures the correct embedding dimensions based on your provider settings."}),"\n",(0,a.jsx)(i.h3,{id:"is-the-data-persistent",children:"Is the data persistent?"}),"\n",(0,a.jsx)(i.p,{children:"Yes, when using a file system path for PGLITE_DATA_DIR. Use memory:// for non-persistent, in-memory storage."}),"\n",(0,a.jsx)(i.h3,{id:"how-do-i-backup-the-database",children:"How do I backup the database?"}),"\n",(0,a.jsx)(i.p,{children:"Simply copy the PGLITE_DATA_DIR directory. All database files are stored there."})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},71184:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>l});var t=n(14041);const a={},s=t.createContext(a);function r(e){const i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);