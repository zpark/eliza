"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[88767],{46546:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"namespaces/v2/classes/DatabaseAdapter","title":"DatabaseAdapter","description":"@elizaos/core v1.0.12 / v2 / DatabaseAdapter","source":"@site/api/namespaces/v2/classes/DatabaseAdapter.md","sourceDirName":"namespaces/v2/classes","slug":"/namespaces/v2/classes/DatabaseAdapter","permalink":"/api/namespaces/v2/classes/DatabaseAdapter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"AgentRuntime","permalink":"/api/namespaces/v2/classes/AgentRuntime"},"next":{"title":"Service","permalink":"/api/namespaces/v2/classes/Service"}}');var i=s(31085),d=s(71184);const t={},a="Class: abstract DatabaseAdapter<DB>",l={},c=[{value:"Implements",id:"implements",level:2},{value:"Type Parameters",id:"type-parameters",level:2},{value:"Implements",id:"implements-1",level:2},{value:"Constructors",id:"constructors",level:2},{value:"DatabaseAdapter()",id:"databaseadapter",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"db",id:"db",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Methods",id:"methods",level:2},{value:"init()",id:"init",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"close()",id:"close",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getConnection()",id:"getconnection",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Implementation of",id:"implementation-of-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getEntityByIds()",id:"getentitybyids",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-4",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getEntitiesForRoom()",id:"getentitiesforroom",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Implementation of",id:"implementation-of-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"createEntities()",id:"createentities",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Implementation of",id:"implementation-of-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"updateEntity()",id:"updateentity",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Implementation of",id:"implementation-of-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getComponent()",id:"getcomponent",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Implementation of",id:"implementation-of-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getComponents()",id:"getcomponents",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Implementation of",id:"implementation-of-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"createComponent()",id:"createcomponent",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Implementation of",id:"implementation-of-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"updateComponent()",id:"updatecomponent",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Implementation of",id:"implementation-of-11",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"deleteComponent()",id:"deletecomponent",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Implementation of",id:"implementation-of-12",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getMemories()",id:"getmemories",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Implementation of",id:"implementation-of-13",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getMemoriesByIds()",id:"getmemoriesbyids",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Implementation of",id:"implementation-of-14",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getCachedEmbeddings()",id:"getcachedembeddings",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Implementation of",id:"implementation-of-15",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"log()",id:"log",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Implementation of",id:"implementation-of-16",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getLogs()",id:"getlogs",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Implementation of",id:"implementation-of-17",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"deleteLog()",id:"deletelog",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Implementation of",id:"implementation-of-18",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"searchMemories()",id:"searchmemories",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Implementation of",id:"implementation-of-19",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"createMemory()",id:"creatememory",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Implementation of",id:"implementation-of-20",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"updateMemory()",id:"updatememory",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Implementation of",id:"implementation-of-21",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"deleteMemory()",id:"deletememory",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Implementation of",id:"implementation-of-22",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"deleteManyMemories()",id:"deletemanymemories",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Implementation of",id:"implementation-of-23",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"deleteAllMemories()",id:"deleteallmemories",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Implementation of",id:"implementation-of-24",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"countMemories()",id:"countmemories",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Implementation of",id:"implementation-of-25",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getWorld()",id:"getworld",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Implementation of",id:"implementation-of-26",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getAllWorlds()",id:"getallworlds",level:3},{value:"Returns",id:"returns-27",level:4},{value:"Implementation of",id:"implementation-of-27",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"createWorld()",id:"createworld",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Implementation of",id:"implementation-of-28",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"updateWorld()",id:"updateworld",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Implementation of",id:"implementation-of-29",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"removeWorld()",id:"removeworld",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Implementation of",id:"implementation-of-30",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getRoomsByIds()",id:"getroomsbyids",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Implementation of",id:"implementation-of-31",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getRoomsByWorld()",id:"getroomsbyworld",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Implementation of",id:"implementation-of-32",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"createRooms()",id:"createrooms",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Implementation of",id:"implementation-of-33",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"updateRoom()",id:"updateroom",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Implementation of",id:"implementation-of-34",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"deleteRoom()",id:"deleteroom",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Implementation of",id:"implementation-of-35",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"getRoomsForParticipant()",id:"getroomsforparticipant",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Implementation of",id:"implementation-of-36",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"getRoomsForParticipants()",id:"getroomsforparticipants",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Implementation of",id:"implementation-of-37",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"addParticipantsRoom()",id:"addparticipantsroom",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Implementation of",id:"implementation-of-38",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"removeParticipant()",id:"removeparticipant",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Implementation of",id:"implementation-of-39",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"getParticipantsForEntity()",id:"getparticipantsforentity",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Implementation of",id:"implementation-of-40",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"getParticipantsForRoom()",id:"getparticipantsforroom",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Implementation of",id:"implementation-of-41",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"createRelationship()",id:"createrelationship",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Implementation of",id:"implementation-of-42",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"getRelationship()",id:"getrelationship",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Implementation of",id:"implementation-of-43",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"getRelationships()",id:"getrelationships",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Implementation of",id:"implementation-of-44",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"updateRelationship()",id:"updaterelationship",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Implementation of",id:"implementation-of-45",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getAgent()",id:"getagent",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Implementation of",id:"implementation-of-46",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"getAgents()",id:"getagents",level:3},{value:"Returns",id:"returns-47",level:4},{value:"Implementation of",id:"implementation-of-47",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"createAgent()",id:"createagent",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Implementation of",id:"implementation-of-48",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"updateAgent()",id:"updateagent",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Implementation of",id:"implementation-of-49",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"deleteAgent()",id:"deleteagent",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-50",level:4},{value:"Implementation of",id:"implementation-of-50",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"ensureEmbeddingDimension()",id:"ensureembeddingdimension",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-51",level:4},{value:"Implementation of",id:"implementation-of-51",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"getCache()",id:"getcache",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-52",level:4},{value:"Implementation of",id:"implementation-of-52",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"setCache()",id:"setcache",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Implementation of",id:"implementation-of-53",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"deleteCache()",id:"deletecache",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Implementation of",id:"implementation-of-54",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"createTask()",id:"createtask",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-55",level:4},{value:"Implementation of",id:"implementation-of-55",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"getTasks()",id:"gettasks",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-56",level:4},{value:"Implementation of",id:"implementation-of-56",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"getTask()",id:"gettask",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Implementation of",id:"implementation-of-57",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"getTasksByName()",id:"gettasksbyname",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-58",level:4},{value:"Implementation of",id:"implementation-of-58",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"updateTask()",id:"updatetask",level:3},{value:"Parameters",id:"parameters-54",level:4},{value:"Returns",id:"returns-59",level:4},{value:"Implementation of",id:"implementation-of-59",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"deleteTask()",id:"deletetask",level:3},{value:"Parameters",id:"parameters-55",level:4},{value:"Returns",id:"returns-60",level:4},{value:"Implementation of",id:"implementation-of-60",level:4},{value:"Defined in",id:"defined-in-61",level:4}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.0.12"})," / ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/",children:"v2"})," / DatabaseAdapter"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"class-abstract-databaseadapterdb",children:["Class: ",(0,i.jsx)(n.code,{children:"abstract"})," DatabaseAdapter<DB>"]})}),"\n",(0,i.jsx)(n.p,{children:"Database adapter class to be extended by individual database adapters."}),"\n",(0,i.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,i.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"DB"})," = ",(0,i.jsx)(n.code,{children:"unknown"})]}),"\n",(0,i.jsx)(n.p,{children:"The type of the database instance."}),"\n",(0,i.jsx)(n.h2,{id:"implements-1",children:"Implements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"databaseadapter",children:"DatabaseAdapter()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DatabaseAdapter"}),"<",(0,i.jsx)(n.code,{children:"DB"}),">(",(0,i.jsx)(n.code,{children:"db"}),"): ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/classes/DatabaseAdapter",children:(0,i.jsx)(n.code,{children:"DatabaseAdapter"})}),"<",(0,i.jsx)(n.code,{children:"DB"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new DatabaseAdapter instance."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"db"}),": ",(0,i.jsx)(n.code,{children:"DB"})]}),"\n",(0,i.jsx)(n.p,{children:"The database instance to use."}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/classes/DatabaseAdapter",children:(0,i.jsx)(n.code,{children:"DatabaseAdapter"})}),"<",(0,i.jsx)(n.code,{children:"DB"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L34",children:"packages/core/src/specs/v2/database.ts:34"})}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"db",children:"db"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"db"}),": ",(0,i.jsx)(n.code,{children:"DB"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The database instance."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#db",children:(0,i.jsx)(n.code,{children:"db"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L28",children:"packages/core/src/specs/v2/database.ts:28"})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"init",children:"init()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"init"}),"(): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Initialize the database adapter."}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when initialization is complete."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#init",children:(0,i.jsx)(n.code,{children:"init"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L42",children:"packages/core/src/specs/v2/database.ts:42"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"close",children:"close()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"close"}),"(): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Optional close method for the database adapter."}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when closing is complete."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-2",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#close",children:(0,i.jsx)(n.code,{children:"close"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L48",children:"packages/core/src/specs/v2/database.ts:48"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getconnection",children:"getConnection()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getConnection"}),"(): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a connection to the database."}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"any"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the database connection."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-3",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getConnection"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L54",children:"packages/core/src/specs/v2/database.ts:54"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getentitybyids",children:"getEntityByIds()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getEntityByIds"}),"(",(0,i.jsx)(n.code,{children:"entityIds"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves an account by its ID."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.p,{children:"The UUIDs of the user account to retrieve."}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the Entity object or null if not found."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-4",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getEntityByIds",children:(0,i.jsx)(n.code,{children:"getEntityByIds"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L61",children:"packages/core/src/specs/v2/database.ts:61"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getentitiesforroom",children:"getEntitiesForRoom()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getEntitiesForRoom"}),"(",(0,i.jsx)(n.code,{children:"roomId"}),", ",(0,i.jsx)(n.code,{children:"includeComponents"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Get entities for room"}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"includeComponents?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})}),"[]>"]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-5",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getEntitiesForRoom",children:(0,i.jsx)(n.code,{children:"getEntitiesForRoom"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L63",children:"packages/core/src/specs/v2/database.ts:63"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createentities",children:"createEntities()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createEntities"}),"(",(0,i.jsx)(n.code,{children:"entities"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new entities in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entities"}),": ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})}),"[]"]}),"\n",(0,i.jsx)(n.p,{children:"The entity objects to create."}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the account creation is complete."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-6",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#createEntities",children:(0,i.jsx)(n.code,{children:"createEntities"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L70",children:"packages/core/src/specs/v2/database.ts:70"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updateentity",children:"updateEntity()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateEntity"}),"(",(0,i.jsx)(n.code,{children:"entity"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing entity in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entity"}),": ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Entity",children:(0,i.jsx)(n.code,{children:"Entity"})})]}),"\n",(0,i.jsx)(n.p,{children:"The entity object with updated properties."}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the account update is complete."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-7",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#updateEntity",children:(0,i.jsx)(n.code,{children:"updateEntity"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L77",children:"packages/core/src/specs/v2/database.ts:77"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcomponent",children:"getComponent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getComponent"}),"(",(0,i.jsx)(n.code,{children:"entityId"}),", ",(0,i.jsx)(n.code,{children:"type"}),", ",(0,i.jsx)(n.code,{children:"worldId"}),"?, ",(0,i.jsx)(n.code,{children:"sourceEntityId"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Component"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a single component by entity ID and type."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the entity the component belongs to"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"type"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The type identifier for the component"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"worldId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"Optional UUID of the world the component belongs to"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"sourceEntityId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"Optional UUID of the source entity"}),"\n",(0,i.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Component"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to the Component if found, null otherwise"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-8",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getComponent",children:(0,i.jsx)(n.code,{children:"getComponent"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L87",children:"packages/core/src/specs/v2/database.ts:87"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcomponents",children:"getComponents()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getComponents"}),"(",(0,i.jsx)(n.code,{children:"entityId"}),", ",(0,i.jsx)(n.code,{children:"worldId"}),"?, ",(0,i.jsx)(n.code,{children:"sourceEntityId"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Component"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all components for an entity."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the entity to get components for"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"worldId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"Optional UUID of the world to filter components by"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"sourceEntityId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"Optional UUID of the source entity to filter by"}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Component"}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to array of Component objects"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-9",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getComponents",children:(0,i.jsx)(n.code,{children:"getComponents"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L101",children:"packages/core/src/specs/v2/database.ts:101"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createcomponent",children:"createComponent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createComponent"}),"(",(0,i.jsx)(n.code,{children:"component"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new component in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"component"}),": ",(0,i.jsx)(n.code,{children:"Component"})]}),"\n",(0,i.jsx)(n.p,{children:"The component object to create"}),"\n",(0,i.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to true if creation was successful"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-10",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#createComponent",children:(0,i.jsx)(n.code,{children:"createComponent"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L112",children:"packages/core/src/specs/v2/database.ts:112"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updatecomponent",children:"updateComponent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateComponent"}),"(",(0,i.jsx)(n.code,{children:"component"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing component in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"component"}),": ",(0,i.jsx)(n.code,{children:"Component"})]}),"\n",(0,i.jsx)(n.p,{children:"The component object with updated properties"}),"\n",(0,i.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise that resolves when the update is complete"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-11",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#updateComponent",children:(0,i.jsx)(n.code,{children:"updateComponent"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L119",children:"packages/core/src/specs/v2/database.ts:119"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletecomponent",children:"deleteComponent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteComponent"}),"(",(0,i.jsx)(n.code,{children:"componentId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deletes a component from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"componentId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the component to delete"}),"\n",(0,i.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise that resolves when the deletion is complete"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-12",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#deleteComponent",children:(0,i.jsx)(n.code,{children:"deleteComponent"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L126",children:"packages/core/src/specs/v2/database.ts:126"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getmemories",children:"getMemories()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getMemories"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves memories based on the specified parameters."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing parameters for the memory retrieval."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.entityId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.agentId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.roomId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.count?"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.unique?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tableName"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.start?"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.end?"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Memory objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-13",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getMemories",children:(0,i.jsx)(n.code,{children:"getMemories"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L133",children:"packages/core/src/specs/v2/database.ts:133"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getmemoriesbyids",children:"getMemoriesByIds()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getMemoriesByIds"}),"(",(0,i.jsx)(n.code,{children:"memoryIds"}),", ",(0,i.jsx)(n.code,{children:"tableName"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves multiple memories by their IDs"}),"\n",(0,i.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"memoryIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.p,{children:"Array of UUIDs of the memories to retrieve"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"tableName?"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"Optional table name to filter memories by type"}),"\n",(0,i.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to array of Memory objects"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-14",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getMemoriesByIds"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L158",children:"packages/core/src/specs/v2/database.ts:158"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcachedembeddings",children:"getCachedEmbeddings()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getCachedEmbeddings"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"object"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves cached embeddings based on the specified query parameters."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing parameters for the embedding retrieval."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_table_name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_threshold"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_input"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_field_name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_field_sub_name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.query_match_count"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"object"}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of objects containing embeddings and levenshtein scores."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-15",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getCachedEmbeddings"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L165",children:"packages/core/src/specs/v2/database.ts:165"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"log",children:"log()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"log"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Logs an event or action with the specified details."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing parameters for the log entry."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.body"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.type"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the log entry has been saved."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-16",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.log"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L191",children:"packages/core/src/specs/v2/database.ts:191"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getlogs",children:"getLogs()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getLogs"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Log",children:(0,i.jsx)(n.code,{children:"Log"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves logs based on the specified parameters."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing parameters for the log retrieval."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.roomId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.type?"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.count?"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.offset?"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Log",children:(0,i.jsx)(n.code,{children:"Log"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Log objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-17",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getLogs"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L203",children:"packages/core/src/specs/v2/database.ts:203"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletelog",children:"deleteLog()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteLog"}),"(",(0,i.jsx)(n.code,{children:"logId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deletes a log from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"logId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the log to delete."}),"\n",(0,i.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the log has been deleted."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-18",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteLog"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L216",children:"packages/core/src/specs/v2/database.ts:216"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"searchmemories",children:"searchMemories()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"searchMemories"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Searches for memories based on embeddings and other specified parameters."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing parameters for the memory search."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tableName"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.embedding"}),": ",(0,i.jsx)(n.code,{children:"number"}),"[]"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.match_threshold"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.count"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.unique"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Memory objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-19",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.searchMemories"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L223",children:"packages/core/src/specs/v2/database.ts:223"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"creatememory",children:"createMemory()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createMemory"}),"(",(0,i.jsx)(n.code,{children:"memory"}),", ",(0,i.jsx)(n.code,{children:"tableName"}),", ",(0,i.jsx)(n.code,{children:"unique"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new memory in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"memory"}),": ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})})]}),"\n",(0,i.jsx)(n.p,{children:"The memory object to create."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"tableName"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The table where the memory should be stored."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"unique?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n",(0,i.jsx)(n.p,{children:"Indicates if the memory should be unique."}),"\n",(0,i.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the memory has been created."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-20",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.createMemory"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L239",children:"packages/core/src/specs/v2/database.ts:239"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updatememory",children:"updateMemory()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateMemory"}),"(",(0,i.jsx)(n.code,{children:"memory"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing memory in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"memory"}),": ",(0,i.jsx)(n.code,{children:"Partial"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Memory",children:(0,i.jsx)(n.code,{children:"Memory"})}),"> & ",(0,i.jsx)(n.code,{children:"object"})]}),"\n",(0,i.jsx)(n.p,{children:"The memory object with updated content and optional embedding"}),"\n",(0,i.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to boolean indicating success"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-21",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.updateMemory"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L246",children:"packages/core/src/specs/v2/database.ts:246"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletememory",children:"deleteMemory()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteMemory"}),"(",(0,i.jsx)(n.code,{children:"memoryId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes a specific memory from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"memoryId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the memory to remove."}),"\n",(0,i.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the memory has been removed."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-22",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteMemory"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L255",children:"packages/core/src/specs/v2/database.ts:255"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletemanymemories",children:"deleteManyMemories()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteManyMemories"}),"(",(0,i.jsx)(n.code,{children:"memoryIds"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes multiple memories from the database in a single batch operation."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"memoryIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.p,{children:"An array of UUIDs of the memories to remove."}),"\n",(0,i.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when all memories have been removed."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-23",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteManyMemories"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L262",children:"packages/core/src/specs/v2/database.ts:262"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deleteallmemories",children:"deleteAllMemories()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteAllMemories"}),"(",(0,i.jsx)(n.code,{children:"roomId"}),", ",(0,i.jsx)(n.code,{children:"tableName"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes all memories associated with a specific room."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room whose memories should be removed."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"tableName"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The table from which the memories should be removed."}),"\n",(0,i.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when all memories have been removed."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-24",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteAllMemories"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L270",children:"packages/core/src/specs/v2/database.ts:270"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"countmemories",children:"countMemories()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"countMemories"}),"(",(0,i.jsx)(n.code,{children:"roomId"}),", ",(0,i.jsx)(n.code,{children:"unique"}),"?, ",(0,i.jsx)(n.code,{children:"tableName"}),"?): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Counts the number of memories in a specific room."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room for which to count memories."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"unique?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n",(0,i.jsx)(n.p,{children:"Specifies whether to count only unique memories."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"tableName?"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"Optional table name to count memories from."}),"\n",(0,i.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"number"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the number of memories."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-25",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.countMemories"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L279",children:"packages/core/src/specs/v2/database.ts:279"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getworld",children:"getWorld()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getWorld"}),"(",(0,i.jsx)(n.code,{children:"id"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"World"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a world by its ID."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"id"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the world to retrieve."}),"\n",(0,i.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"World"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the World object or null if not found."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-26",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getWorld"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L286",children:"packages/core/src/specs/v2/database.ts:286"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getallworlds",children:"getAllWorlds()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getAllWorlds"}),"(): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"World"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all worlds for an agent."}),"\n",(0,i.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"World"}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of World objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-27",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getAllWorlds"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L292",children:"packages/core/src/specs/v2/database.ts:292"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createworld",children:"createWorld()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createWorld"}),"(",(0,i.jsx)(n.code,{children:"world"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new world in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"world"}),": ",(0,i.jsx)(n.code,{children:"World"})]}),"\n",(0,i.jsx)(n.p,{children:"The world object to create."}),"\n",(0,i.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the UUID of the created world."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-28",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.createWorld"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L299",children:"packages/core/src/specs/v2/database.ts:299"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updateworld",children:"updateWorld()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateWorld"}),"(",(0,i.jsx)(n.code,{children:"world"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing world in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"world"}),": ",(0,i.jsx)(n.code,{children:"World"})]}),"\n",(0,i.jsx)(n.p,{children:"The world object with updated properties."}),"\n",(0,i.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the world has been updated."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-29",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.updateWorld"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L306",children:"packages/core/src/specs/v2/database.ts:306"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"removeworld",children:"removeWorld()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"removeWorld"}),"(",(0,i.jsx)(n.code,{children:"id"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes a specific world from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"id"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the world to remove."}),"\n",(0,i.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the world has been removed."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-30",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.removeWorld"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L313",children:"packages/core/src/specs/v2/database.ts:313"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getroomsbyids",children:"getRoomsByIds()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRoomsByIds"}),"(",(0,i.jsx)(n.code,{children:"roomIds"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Room"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the room ID for a given room, if it exists."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Room"}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the room ID or null if not found."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-31",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getRoomsByIds"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L320",children:"packages/core/src/specs/v2/database.ts:320"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getroomsbyworld",children:"getRoomsByWorld()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRoomsByWorld"}),"(",(0,i.jsx)(n.code,{children:"worldId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Room"}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all rooms for a given world."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"worldId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the world to retrieve rooms for."}),"\n",(0,i.jsx)(n.h4,{id:"returns-32",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"Room"}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Room objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-32",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getRoomsByWorld"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L327",children:"packages/core/src/specs/v2/database.ts:327"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createrooms",children:"createRooms()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createRooms"}),"(",(0,i.jsx)(n.code,{children:"rooms"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new rooms with an optional specified ID."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-29",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"rooms"}),": ",(0,i.jsx)(n.code,{children:"Room"}),"[]"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the UUID of the created rooms."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-33",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.createRooms"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L334",children:"packages/core/src/specs/v2/database.ts:334"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updateroom",children:"updateRoom()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateRoom"}),"(",(0,i.jsx)(n.code,{children:"room"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates a specific room in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-30",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"room"}),": ",(0,i.jsx)(n.code,{children:"Room"})]}),"\n",(0,i.jsx)(n.p,{children:"The room object with updated properties."}),"\n",(0,i.jsx)(n.h4,{id:"returns-34",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the room has been updated."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-34",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.updateRoom"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L341",children:"packages/core/src/specs/v2/database.ts:341"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deleteroom",children:"deleteRoom()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteRoom"}),"(",(0,i.jsx)(n.code,{children:"roomId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes a specific room from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-31",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room to remove."}),"\n",(0,i.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the room has been removed."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-35",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteRoom"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L348",children:"packages/core/src/specs/v2/database.ts:348"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getroomsforparticipant",children:"getRoomsForParticipant()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRoomsForParticipant"}),"(",(0,i.jsx)(n.code,{children:"entityId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves room IDs for which a specific user is a participant."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-32",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the user."}),"\n",(0,i.jsx)(n.h4,{id:"returns-36",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of room IDs."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-36",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getRoomsForParticipant"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L355",children:"packages/core/src/specs/v2/database.ts:355"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getroomsforparticipants",children:"getRoomsForParticipants()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRoomsForParticipants"}),"(",(0,i.jsx)(n.code,{children:"userIds"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves room IDs for which specific users are participants."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-33",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"userIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.p,{children:"An array of UUIDs of the users."}),"\n",(0,i.jsx)(n.h4,{id:"returns-37",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of room IDs."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-37",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getRoomsForParticipants"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L362",children:"packages/core/src/specs/v2/database.ts:362"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"addparticipantsroom",children:"addParticipantsRoom()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"addParticipantsRoom"}),"(",(0,i.jsx)(n.code,{children:"entityIds"}),", ",(0,i.jsx)(n.code,{children:"roomId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Adds users as a participant to a specific room."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-34",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityIds"}),": `${string}-${string}-${string}-${string}-${string}`[]"]}),"\n",(0,i.jsx)(n.p,{children:"The UUIDs of the users to add as a participant."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room to which the user will be added."}),"\n",(0,i.jsx)(n.h4,{id:"returns-38",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-38",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.addParticipantsRoom"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L370",children:"packages/core/src/specs/v2/database.ts:370"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"removeparticipant",children:"removeParticipant()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"removeParticipant"}),"(",(0,i.jsx)(n.code,{children:"entityId"}),", ",(0,i.jsx)(n.code,{children:"roomId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Removes a user as a participant from a specific room."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-35",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the user to remove as a participant."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room from which the user will be removed."}),"\n",(0,i.jsx)(n.h4,{id:"returns-39",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-39",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.removeParticipant"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L378",children:"packages/core/src/specs/v2/database.ts:378"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getparticipantsforentity",children:"getParticipantsForEntity()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getParticipantsForEntity"}),"(",(0,i.jsx)(n.code,{children:"entityId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Participant",children:(0,i.jsx)(n.code,{children:"Participant"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves participants associated with a specific account."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-36",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the account."}),"\n",(0,i.jsx)(n.h4,{id:"returns-40",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Participant",children:(0,i.jsx)(n.code,{children:"Participant"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Participant objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-40",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getParticipantsForEntity"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L385",children:"packages/core/src/specs/v2/database.ts:385"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getparticipantsforroom",children:"getParticipantsForRoom()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getParticipantsForRoom"}),"(",(0,i.jsx)(n.code,{children:"roomId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves participants for a specific room."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-37",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"roomId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the room for which to retrieve participants."}),"\n",(0,i.jsx)(n.h4,{id:"returns-41",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of UUIDs representing the participants."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-41",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getParticipantsForRoom"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L392",children:"packages/core/src/specs/v2/database.ts:392"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createrelationship",children:"createRelationship()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createRelationship"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new relationship between two users."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-38",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"Object containing the relationship details including entity IDs, agent ID, optional tags and metadata"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.sourceEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.targetEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tags?"}),": ",(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.metadata?"}),": ",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"unknown"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-42",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure of the creation."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-42",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#createRelationship",children:(0,i.jsx)(n.code,{children:"createRelationship"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L410",children:"packages/core/src/specs/v2/database.ts:410"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrelationship",children:"getRelationship()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRelationship"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Relationship",children:(0,i.jsx)(n.code,{children:"Relationship"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a relationship between two users if it exists."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-39",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"Object containing the entity IDs and agent ID"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.sourceEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.targetEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-43",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Relationship",children:(0,i.jsx)(n.code,{children:"Relationship"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the Relationship object or null if not found."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-43",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getRelationship",children:(0,i.jsx)(n.code,{children:"getRelationship"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L422",children:"packages/core/src/specs/v2/database.ts:422"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrelationships",children:"getRelationships()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getRelationships"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Relationship",children:(0,i.jsx)(n.code,{children:"Relationship"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all relationships for a specific user."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-40",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"Object containing the user ID, agent ID and optional tags to filter by"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.entityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tags?"}),": ",(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-44",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Relationship",children:(0,i.jsx)(n.code,{children:"Relationship"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Relationship objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-44",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getRelationships",children:(0,i.jsx)(n.code,{children:"getRelationships"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L432",children:"packages/core/src/specs/v2/database.ts:432"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updaterelationship",children:"updateRelationship()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateRelationship"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing relationship between two users."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-41",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"Object containing the relationship details to update including entity IDs, agent ID, optional tags and metadata"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.sourceEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.targetEntityId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tags?"}),": ",(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.metadata?"}),": ",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"unknown"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-45",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure of the update."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-45",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#updateRelationship",children:(0,i.jsx)(n.code,{children:"updateRelationship"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L439",children:"packages/core/src/specs/v2/database.ts:439"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getagent",children:"getAgent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getAgent"}),"(",(0,i.jsx)(n.code,{children:"agentId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves an agent by its ID."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-42",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"agentId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the agent to retrieve."}),"\n",(0,i.jsx)(n.h4,{id:"returns-46",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to the Agent object or null if not found."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-46",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getAgent"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L451",children:"packages/core/src/specs/v2/database.ts:451"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getagents",children:"getAgents()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getAgents"}),"(): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all agents from the database."}),"\n",(0,i.jsx)(n.h4,{id:"returns-47",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to an array of Agent objects."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-47",children:"Implementation of"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter",children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter"})}),".",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/IDatabaseAdapter#getAgents",children:(0,i.jsx)(n.code,{children:"getAgents"})})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L457",children:"packages/core/src/specs/v2/database.ts:457"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createagent",children:"createAgent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createAgent"}),"(",(0,i.jsx)(n.code,{children:"agent"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new agent in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-43",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"agent"}),": ",(0,i.jsx)(n.code,{children:"Partial"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"The agent object to create."}),"\n",(0,i.jsx)(n.h4,{id:"returns-48",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure of the creation."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-48",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.createAgent"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L464",children:"packages/core/src/specs/v2/database.ts:464"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updateagent",children:"updateAgent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateAgent"}),"(",(0,i.jsx)(n.code,{children:"agentId"}),", ",(0,i.jsx)(n.code,{children:"agent"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing agent in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-44",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"agentId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the agent to update."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"agent"}),": ",(0,i.jsx)(n.code,{children:"Partial"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Agent",children:(0,i.jsx)(n.code,{children:"Agent"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"The agent object with updated properties."}),"\n",(0,i.jsx)(n.h4,{id:"returns-49",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure of the update."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-49",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.updateAgent"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L472",children:"packages/core/src/specs/v2/database.ts:472"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deleteagent",children:"deleteAgent()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteAgent"}),"(",(0,i.jsx)(n.code,{children:"agentId"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deletes an agent from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-45",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"agentId"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the agent to delete."}),"\n",(0,i.jsx)(n.h4,{id:"returns-50",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves to a boolean indicating success or failure of the deletion."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-50",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteAgent"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L479",children:"packages/core/src/specs/v2/database.ts:479"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"ensureembeddingdimension",children:"ensureEmbeddingDimension()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"ensureEmbeddingDimension"}),"(",(0,i.jsx)(n.code,{children:"dimension"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ensures an embedding dimension exists in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-46",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"dimension"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"The dimension to ensure exists."}),"\n",(0,i.jsx)(n.h4,{id:"returns-51",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"A Promise that resolves when the embedding dimension has been ensured to exist."}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-51",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.ensureEmbeddingDimension"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L486",children:"packages/core/src/specs/v2/database.ts:486"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcache",children:"getCache()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getCache"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"key"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a cached value by key from the database."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"T"})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-47",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The key to look up in the cache"}),"\n",(0,i.jsx)(n.h4,{id:"returns-52",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to the cached string value"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-52",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getCache"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L493",children:"packages/core/src/specs/v2/database.ts:493"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"setcache",children:"setCache()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"setCache"}),"<",(0,i.jsx)(n.code,{children:"T"}),">(",(0,i.jsx)(n.code,{children:"key"}),", ",(0,i.jsx)(n.code,{children:"value"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sets a value in the cache with the given key."}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"T"})]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-48",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The key to store the value under"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"value"}),": ",(0,i.jsx)(n.code,{children:"T"})]}),"\n",(0,i.jsx)(n.p,{children:"The string value to cache"}),"\n",(0,i.jsx)(n.h4,{id:"returns-53",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to true if the cache was set successfully"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-53",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.setCache"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-54",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L502",children:"packages/core/src/specs/v2/database.ts:502"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletecache",children:"deleteCache()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteCache"}),"(",(0,i.jsx)(n.code,{children:"key"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deletes a value from the cache by key."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-49",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The key to delete from the cache"}),"\n",(0,i.jsx)(n.h4,{id:"returns-54",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to true if the value was successfully deleted"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-54",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteCache"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-55",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L509",children:"packages/core/src/specs/v2/database.ts:509"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"createtask",children:"createTask()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"createTask"}),"(",(0,i.jsx)(n.code,{children:"task"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new task instance in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-50",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"task"}),": ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})})]}),"\n",(0,i.jsx)(n.p,{children:"The task object to create"}),"\n",(0,i.jsx)(n.h4,{id:"returns-55",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<`${string}-${string}-${string}-${string}-${string}`>"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to the UUID of the created task"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-55",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.createTask"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-56",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L516",children:"packages/core/src/specs/v2/database.ts:516"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"gettasks",children:"getTasks()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getTasks"}),"(",(0,i.jsx)(n.code,{children:"params"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves tasks based on specified parameters."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-51",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params"})]}),"\n",(0,i.jsx)(n.p,{children:"Object containing optional roomId and tags to filter tasks"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.roomId?"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"params.tags?"}),": ",(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,i.jsx)(n.h4,{id:"returns-56",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to an array of Task objects"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-56",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getTasks"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-57",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L523",children:"packages/core/src/specs/v2/database.ts:523"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"gettask",children:"getTask()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getTask"}),"(",(0,i.jsx)(n.code,{children:"id"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a specific task by its ID."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-52",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"id"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the task to retrieve"}),"\n",(0,i.jsx)(n.h4,{id:"returns-57",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to the Task object if found, null otherwise"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-57",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getTask"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-58",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L530",children:"packages/core/src/specs/v2/database.ts:530"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"gettasksbyname",children:"getTasksByName()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"getTasksByName"}),"(",(0,i.jsx)(n.code,{children:"name"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves a specific task by its name."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-53",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The name of the task to retrieve"}),"\n",(0,i.jsx)(n.h4,{id:"returns-58",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),"[]>"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to the Task object if found, null otherwise"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-58",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.getTasksByName"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-59",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L537",children:"packages/core/src/specs/v2/database.ts:537"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"updatetask",children:"updateTask()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"updateTask"}),"(",(0,i.jsx)(n.code,{children:"id"}),", ",(0,i.jsx)(n.code,{children:"task"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Updates an existing task in the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-54",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"id"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the task to update"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"task"}),": ",(0,i.jsx)(n.code,{children:"Partial"}),"<",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Task",children:(0,i.jsx)(n.code,{children:"Task"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Partial Task object containing the fields to update"}),"\n",(0,i.jsx)(n.h4,{id:"returns-59",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving when the update is complete"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-59",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.updateTask"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-60",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L545",children:"packages/core/src/specs/v2/database.ts:545"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"deletetask",children:"deleteTask()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abstract"})," ",(0,i.jsx)(n.strong,{children:"deleteTask"}),"(",(0,i.jsx)(n.code,{children:"id"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deletes a task from the database."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-55",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"id"}),": `${string}-${string}-${string}-${string}-${string}`"]}),"\n",(0,i.jsx)(n.p,{children:"The UUID of the task to delete"}),"\n",(0,i.jsx)(n.h4,{id:"returns-60",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving when the deletion is complete"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-of-60",children:"Implementation of"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"IDatabaseAdapter.deleteTask"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-61",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/database.ts#L552",children:"packages/core/src/specs/v2/database.ts:552"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(14041);const i={},d=r.createContext(i);function t(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);