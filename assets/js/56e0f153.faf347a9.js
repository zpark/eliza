"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[89250],{67133:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"namespaces/v2/type-aliases/MemoryScope","title":"MemoryScope","description":"@elizaos/core v1.0.12 / v2 / MemoryScope","source":"@site/api/namespaces/v2/type-aliases/MemoryScope.md","sourceDirName":"namespaces/v2/type-aliases","slug":"/namespaces/v2/type-aliases/MemoryScope","permalink":"/api/namespaces/v2/type-aliases/MemoryScope","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Media","permalink":"/api/namespaces/v2/type-aliases/Media"},"next":{"title":"MemoryTypeAlias","permalink":"/api/namespaces/v2/type-aliases/MemoryTypeAlias"}}');var o=n(31085),r=n(71184);const c={},a="Type Alias: MemoryScope",t={},l=[{value:"Defined in",id:"defined-in",level:2}];function p(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"/api/",children:"@elizaos/core v1.0.12"})," / ",(0,o.jsx)(s.a,{href:"/api/namespaces/v2/",children:"v2"})," / MemoryScope"]}),"\n",(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"type-alias-memoryscope",children:"Type Alias: MemoryScope"})}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"MemoryScope"}),": ",(0,o.jsx)(s.code,{children:'"shared"'})," | ",(0,o.jsx)(s.code,{children:'"private"'})," | ",(0,o.jsx)(s.code,{children:'"room"'})]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Defines the scope of a memory, indicating its visibility and accessibility."}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"shared"}),": The memory is accessible to multiple entities or across different contexts (e.g., a public fact)."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"private"}),": The memory is specific to a single entity or a private context (e.g., a user's personal preference)."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"room"}),": The memory is scoped to a specific room or channel.\nThis is used in ",(0,o.jsx)(s.code,{children:"MemoryMetadata"})," to control how memories are stored and retrieved based on context."]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/types.ts#L238",children:"packages/core/src/specs/v2/types.ts:238"})})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},71184:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>a});var i=n(14041);const o={},r=i.createContext(o);function c(e){const s=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);