"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[72269],{50437:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"functions/parseJSONObjectFromText","title":"parseJSONObjectFromText","description":"@elizaos/core v1.0.12 / parseJSONObjectFromText","source":"@site/api/functions/parseJSONObjectFromText.md","sourceDirName":"functions","slug":"/functions/parseJSONObjectFromText","permalink":"/api/functions/parseJSONObjectFromText","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"parseBooleanFromText","permalink":"/api/functions/parseBooleanFromText"},"next":{"title":"parseKeyValueXml","permalink":"/api/functions/parseKeyValueXml"}}');var s=n(31085),o=n(71184);const i={},c="Function: parseJSONObjectFromText()",a={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/api/",children:"@elizaos/core v1.0.12"})," / parseJSONObjectFromText"]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"function-parsejsonobjectfromtext",children:"Function: parseJSONObjectFromText()"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"parseJSONObjectFromText"}),"(",(0,s.jsx)(t.code,{children:"text"}),"): ",(0,s.jsx)(t.code,{children:"Record"}),"<",(0,s.jsx)(t.code,{children:"string"}),", ",(0,s.jsx)(t.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Parses a JSON object from a given text. The function looks for a JSON block wrapped in triple backticks\nwith ",(0,s.jsx)(t.code,{children:"json"})," language identifier, and if not found, it searches for an object pattern within the text.\nIt then attempts to parse the JSON string into a JavaScript object. If parsing is successful and the result\nis an object (but not an array), it returns the object; otherwise, it tries to parse an array if the result\nis an array, or returns null if parsing is unsuccessful or the result is neither an object nor an array."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"text"}),": ",(0,s.jsx)(t.code,{children:"string"})]}),"\n",(0,s.jsx)(t.p,{children:"The input text from which to extract and parse the JSON object."}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Record"}),"<",(0,s.jsx)(t.code,{children:"string"}),", ",(0,s.jsx)(t.code,{children:"any"}),">"]}),"\n",(0,s.jsx)(t.p,{children:"An object parsed from the JSON string if successful; otherwise, null or the result of parsing an array."}),"\n",(0,s.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/utils.ts#L426",children:"packages/core/src/utils.ts:426"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},71184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(14041);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);