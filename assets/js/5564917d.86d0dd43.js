"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[70644],{71184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var l=i(14041);const t={},a=l.createContext(t);function r(e){const n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(a.Provider,{value:n},e.children)}},92279:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>s});const l=JSON.parse('{"id":"plugins/nft-generation","title":"@elizaos/plugin-nft-generation","description":"NFT collection generation plugin for Eliza OS that enables NFT creation, collection management, and verification on the Solana blockchain.","source":"@site/packages/plugins/nft-generation.md","sourceDirName":"plugins","slug":"/plugins/nft-generation","permalink":"/packages/plugins/nft-generation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"NFT Collections Plugin","permalink":"/packages/plugins/nft-collections"},"next":{"title":"nkn","permalink":"/packages/plugins/nkn"}}');var t=i(31085),a=i(71184);const r={},o="@elizaos/plugin-nft-generation",c={},s=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Collection Management",id:"collection-management",level:3},{value:"<code>createCollection</code>",id:"createcollection",level:4},{value:"<code>createNFT</code>",id:"createnft",level:4},{value:"<code>verifyNFT</code>",id:"verifynft",level:4},{value:"REST API Endpoints",id:"rest-api-endpoints",level:2},{value:"POST <code>/api/nft-generation/create-collection</code>",id:"post-apinft-generationcreate-collection",level:3},{value:"POST <code>/api/nft-generation/create-nft</code>",id:"post-apinft-generationcreate-nft",level:3},{value:"POST <code>/api/nft-generation/create-nft-metadata</code>",id:"post-apinft-generationcreate-nft-metadata",level:3},{value:"POST <code>/api/nft-generation/verify-nft</code>",id:"post-apinft-generationverify-nft",level:3},{value:"Example Workflow",id:"example-workflow",level:2},{value:"Example Prompts",id:"example-prompts",level:2},{value:"Local Testing with TEE Simulator",id:"local-testing-with-tee-simulator",level:2},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Credits",id:"credits",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"elizaosplugin-nft-generation",children:"@elizaos/plugin-nft-generation"})}),"\n",(0,t.jsx)(n.p,{children:"NFT collection generation plugin for Eliza OS that enables NFT creation, collection management, and verification on the Solana blockchain."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"This plugin provides comprehensive NFT functionality, including collection creation, NFT minting, and verification, with automatic image generation and metadata management."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automated NFT collection creation"}),"\n",(0,t.jsx)(n.li,{children:"AI-powered image generation for NFTs"}),"\n",(0,t.jsx)(n.li,{children:"Collection logo generation"}),"\n",(0,t.jsx)(n.li,{children:"Metadata creation and management"}),"\n",(0,t.jsx)(n.li,{children:"AWS S3 integration for asset storage"}),"\n",(0,t.jsx)(n.li,{children:"Solana blockchain integration"}),"\n",(0,t.jsx)(n.li,{children:"NFT verification system"}),"\n",(0,t.jsx)(n.li,{children:"Automatic nonce management"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive error handling"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-nft-generation\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The plugin requires environment variables or runtime settings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Solana Configuration\nSOLANA_PUBLIC_KEY=your-wallet-public-key\nSOLANA_PRIVATE_KEY=your-wallet-private-key\nSOLANA_ADMIN_PUBLIC_KEY=admin-public-key\nSOLANA_ADMIN_PRIVATE_KEY=admin-private-key\nSOLANA_VERIFY_TOKEN=verification-token\nSOLANA_CLUSTER=devnet  # or mainnet-beta\n\n# AWS Configuration\nAWS_ACCESS_KEY_ID=your-aws-access-key\nAWS_SECRET_ACCESS_KEY=your-aws-secret-key\nAWS_REGION=aws-region\nAWS_S3_BUCKET=bucket-name\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"collection-management",children:"Collection Management"}),"\n",(0,t.jsx)(n.h4,{id:"createcollection",children:(0,t.jsx)(n.code,{children:"createCollection"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a new NFT collection with an AI-generated logo."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const result = await createCollection({\n  runtime: runtimeInstance,\n  collectionName: 'MyCollection',\n  fee: 0.01, // Optional: royalty fee percentage\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"createnft",children:(0,t.jsx)(n.code,{children:"createNFT"})}),"\n",(0,t.jsx)(n.p,{children:"Mints a new NFT in an existing collection."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const nft = await createNFT({\n  runtime: runtimeInstance,\n  collectionName: 'MyCollection',\n  collectionAddress: 'collection123',\n  collectionAdminPublicKey: 'admin123',\n  collectionFee: 0.01,\n  tokenId: 1,\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"verifynft",children:(0,t.jsx)(n.code,{children:"verifyNFT"})}),"\n",(0,t.jsx)(n.p,{children:"Verifies an NFT as part of a collection."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const verification = await verifyNFT({\n  runtime: runtimeInstance,\n  collectionAddress: 'collection123',\n  NFTAddress: 'nft123',\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"rest-api-endpoints",children:"REST API Endpoints"}),"\n",(0,t.jsxs)(n.h3,{id:"post-apinft-generationcreate-collection",children:["POST ",(0,t.jsx)(n.code,{children:"/api/nft-generation/create-collection"})]}),"\n",(0,t.jsx)(n.p,{children:"Creates a new collection with generated logo."}),"\n",(0,t.jsxs)(n.h3,{id:"post-apinft-generationcreate-nft",children:["POST ",(0,t.jsx)(n.code,{children:"/api/nft-generation/create-nft"})]}),"\n",(0,t.jsx)(n.p,{children:"Mints a new NFT with generated artwork."}),"\n",(0,t.jsxs)(n.h3,{id:"post-apinft-generationcreate-nft-metadata",children:["POST ",(0,t.jsx)(n.code,{children:"/api/nft-generation/create-nft-metadata"})]}),"\n",(0,t.jsx)(n.p,{children:"Generates metadata for an NFT."}),"\n",(0,t.jsxs)(n.h3,{id:"post-apinft-generationverify-nft",children:["POST ",(0,t.jsx)(n.code,{children:"/api/nft-generation/verify-nft"})]}),"\n",(0,t.jsx)(n.p,{children:"Verifies an NFT's collection membership."}),"\n",(0,t.jsx)(n.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,t.jsx)(n.p,{children:"The plugin provides a streamlined process for generating and verifying NFT collections:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { createCollection, createNFT, verifyNFT } from './handlers';\n\nconst runtime = initializeRuntime(); // Replace with actual IAgentRuntime initialization\n\n(async () => {\n  // Step 1: Create Collection\n  const collectionResult = await createCollection({\n    runtime,\n    collectionName: 'MyUniqueCollection',\n  });\n\n  console.log('Collection created:', collectionResult);\n\n  // Step 2: Create an NFT in the Collection\n  const nftResult = await createNFT({\n    runtime,\n    collectionName: 'MyUniqueCollection',\n    collectionAddress: collectionResult.address,\n    collectionAdminPublicKey: collectionResult.collectionInfo.adminPublicKey,\n    collectionFee: 0.01,\n    tokenId: 1,\n  });\n\n  console.log('NFT created:', nftResult);\n\n  // Step 3: Verify the NFT\n  const verificationResult = await verifyNFT({\n    runtime,\n    collectionAddress: collectionResult.address,\n    NFTAddress: nftResult.address,\n  });\n  console.log('NFT verified:', verificationResult);\n})();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-prompts",children:"Example Prompts"}),"\n",(0,t.jsx)(n.p,{children:"Here are some examples of user prompts to trigger NFT collection generation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"Generate a collection named MyCollection."'}),"\n",(0,t.jsx)(n.li,{children:'"Create a new NFT collection."'}),"\n",(0,t.jsx)(n.li,{children:'"Compile an NFT collection for me."'}),"\n",(0,t.jsx)(n.li,{children:'"Build a sci-fi themed collection."'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"local-testing-with-tee-simulator",children:"Local Testing with TEE Simulator"}),"\n",(0,t.jsx)(n.p,{children:"To test locally using a Trusted Execution Environment (TEE) simulator:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Pull the simulator Docker image:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker pull phalanetwork/tappd-simulator:latest\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Run the simulator:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run --rm -p 8090:8090 phalanetwork/tappd-simulator:latest\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Update your environment variable for the simulator:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:'DSTACK_SIMULATOR_ENDPOINT="http://localhost:8090"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Management"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Store private keys securely"}),"\n",(0,t.jsx)(n.li,{children:"Use environment variables"}),"\n",(0,t.jsx)(n.li,{children:"Implement key rotation"}),"\n",(0,t.jsx)(n.li,{children:"Monitor wallet activity"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Asset Security"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Secure S3 bucket configuration"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper CORS policies"}),"\n",(0,t.jsx)(n.li,{children:"Use secure URLs for metadata"}),"\n",(0,t.jsx)(n.li,{children:"Regular backup of assets"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Transaction Safety"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validate all inputs"}),"\n",(0,t.jsx)(n.li,{children:"Implement fee limits"}),"\n",(0,t.jsx)(n.li,{children:"Double-check collection ownership"}),"\n",(0,t.jsx)(n.li,{children:"Monitor transaction status"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Log all operations"}),"\n",(0,t.jsx)(n.li,{children:"Handle timeouts gracefully"}),"\n",(0,t.jsx)(n.li,{children:"Validate metadata"}),"\n",(0,t.jsx)(n.li,{children:"Provide clear error messages"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"@elizaos/core: workspace:*"}),"\n",(0,t.jsx)(n.li,{children:"@elizaos/plugin-image-generation: workspace:*"}),"\n",(0,t.jsx)(n.li,{children:"@elizaos/plugin-node: workspace:*"}),"\n",(0,t.jsx)(n.li,{children:"@metaplex-foundation/mpl-token-metadata: ^3.3.0"}),"\n",(0,t.jsx)(n.li,{children:"@solana/web3.js: 1.95.5"}),"\n",(0,t.jsx)(n.li,{children:"express: 4.21.1"}),"\n",(0,t.jsx)(n.li,{children:"node-cache: 5.1.2"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsx)(n.p,{children:"Contributions are welcome! Please see the CONTRIBUTING.md file for more information."}),"\n",(0,t.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,t.jsx)(n.p,{children:"This plugin integrates with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://solana.com",children:"Solana Blockchain"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.metaplex.com",children:"Metaplex Protocol"})}),"\n",(0,t.jsx)(n.li,{children:"AWS S3 for asset storage"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Special thanks to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The Solana ecosystem and all the open-source contributors who make these integrations possible."}),"\n",(0,t.jsx)(n.li,{children:"The Eliza community for their contributions and feedback."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For more information about Solana blockchain capabilities:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.solana.com/",children:"Solana Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://solana.com/developers",children:"Solana Developer Portal"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://solscan.io/",children:"Solana Network Dashboard"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/solana-labs/solana",children:"Solana GitHub Repository"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"This plugin is part of the Eliza project. See the main project repository for license information."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);