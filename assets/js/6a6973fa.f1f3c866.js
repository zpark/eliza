"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[60886],{43949:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"clients/discord","title":"@elizaos/client-discord","description":"A Discord client implementation for ElizaOS, enabling rich integration with Discord servers for managing interactions, voice, and message handling.","source":"@site/packages/clients/discord.md","sourceDirName":"clients","slug":"/clients/discord","permalink":"/packages/clients/discord","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"direct","permalink":"/packages/clients/direct"},"next":{"title":"ElizaOS Home Plugin","permalink":"/packages/clients/eliza-home"}}');var a=i(31085),l=i(71184);const r={},t="@elizaos/client-discord",c={},o=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Initialization",id:"basic-initialization",level:3},{value:"Slash Command Registration",id:"slash-command-registration",level:3},{value:"Handling Messages",id:"handling-messages",level:3},{value:"Managing Voice Events",id:"managing-voice-events",level:3},{value:"Key Components",id:"key-components",level:2},{value:"Notes",id:"notes",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"elizaosclient-discord",children:"@elizaos/client-discord"})}),"\n",(0,a.jsx)(e.p,{children:"A Discord client implementation for ElizaOS, enabling rich integration with Discord servers for managing interactions, voice, and message handling."}),"\n",(0,a.jsx)(e.h2,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Handle server join events and manage initial configurations."}),"\n",(0,a.jsx)(e.li,{children:"Voice event management via the voice manager."}),"\n",(0,a.jsx)(e.li,{children:"Manage and process new messages with the message manager."}),"\n",(0,a.jsx)(e.li,{children:"Slash command registration and interaction handling."}),"\n",(0,a.jsx)(e.li,{children:"Disconnect websocket and unbind all listeners when required."}),"\n",(0,a.jsx)(e.li,{children:"Robust permissions management for bot functionality."}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(e.p,{children:"As this is a workspace package, it's installed as part of the ElizaOS monorepo:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"bun install\n"})}),"\n",(0,a.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(e.p,{children:"The client requires the following environment variables:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# Discord API Credentials\nDISCORD_APPLICATION_ID=your_application_id\nDISCORD_API_TOKEN=your_api_token\n\n# Optional Settings (add any additional details here if necessary)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(e.h3,{id:"basic-initialization",children:"Basic Initialization"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { DiscordClientInterface } from '@elizaos/client-discord';\n\n// Initialize the client\nconst discordManager = await DiscordClientInterface.start(runtime);\n"})}),"\n",(0,a.jsx)(e.h3,{id:"slash-command-registration",children:"Slash Command Registration"}),"\n",(0,a.jsx)(e.p,{children:"To register slash commands:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"await discordManager.command.registerCommands([\n  {\n    name: 'example',\n    description: 'An example slash command',\n    options: [],\n  },\n]);\n"})}),"\n",(0,a.jsx)(e.h3,{id:"handling-messages",children:"Handling Messages"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"// Listen for new messages\nawait discordManager.message.handleNewMessage({\n  channelId: 'channel-id',\n  content: 'Hello Discord!',\n});\n"})}),"\n",(0,a.jsx)(e.h3,{id:"managing-voice-events",children:"Managing Voice Events"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"// Join a voice channel\nawait discordManager.voice.joinChannel('channel-id');\n\n// Handle voice interactions\nawait discordManager.voice.handleInteraction({\n  userId: 'user-id',\n  action: 'speak',\n});\n"})}),"\n",(0,a.jsx)(e.h2,{id:"key-components",children:"Key Components"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"ClientBase"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Handles authentication and session management."}),"\n",(0,a.jsx)(e.li,{children:"Manages websocket connections."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"MessageManager"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Processes incoming messages and responses."}),"\n",(0,a.jsx)(e.li,{children:"Supports message formatting and templating."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"VoiceManager"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Manages voice interactions and events."}),"\n",(0,a.jsx)(e.li,{children:"Handles joining and leaving voice channels."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"CommandManager"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Registers and processes slash commands."}),"\n",(0,a.jsx)(e.li,{children:"Ensures permissions are validated."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"notes",children:"Notes"}),"\n",(0,a.jsxs)(e.p,{children:["Ensure that your ",(0,a.jsx)(e.code,{children:".env"})," file includes the required environment variables for proper functionality. Additional features or modules can be extended as part of the ElizaOS framework."]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},71184:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>t});var s=i(14041);const a={},l=s.createContext(a);function r(n){const e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);