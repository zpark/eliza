"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[66722],{24467:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"namespaces/v2/functions/addHeader","title":"addHeader","description":"@elizaos/core v1.3.1 / v2 / addHeader","source":"@site/api/namespaces/v2/functions/addHeader.md","sourceDirName":"namespaces/v2/functions","slug":"/namespaces/v2/functions/addHeader","permalink":"/api/namespaces/v2/functions/addHeader","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"TeeType","permalink":"/api/namespaces/v2/enumerations/TeeType"},"next":{"title":"asUUID","permalink":"/api/namespaces/v2/functions/asUUID"}}');var r=d(31085),a=d(71184);const t={},i="Function: addHeader()",c={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Defined in",id:"defined-in",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.3.1"})," / ",(0,r.jsx)(n.a,{href:"/api/namespaces/v2/",children:"v2"})," / addHeader"]}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"function-addheader",children:"Function: addHeader()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"addHeader"}),"(",(0,r.jsx)(n.code,{children:"header"}),", ",(0,r.jsx)(n.code,{children:"body"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Adds a header to a body of text."}),"\n",(0,r.jsx)(n.p,{children:"This function takes a header string and a body string and returns a new string with the header prepended to the body.\nIf the body string is empty, the header is returned as is."}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.p,{children:["\u2022 ",(0,r.jsx)(n.strong,{children:"header"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsx)(n.p,{children:"The header to add to the body."}),"\n",(0,r.jsxs)(n.p,{children:["\u2022 ",(0,r.jsx)(n.strong,{children:"body"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsx)(n.p,{children:"The body to which to add the header."}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})}),"\n",(0,r.jsx)(n.p,{children:"The body with the header prepended."}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'// Given a header and a body\nconst header = "Header";\nconst body = "Body";\n\n// Adding the header to the body will result in:\n// "Header\\nBody"\nconst text = addHeader(header, body);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/utils.ts#L103",children:"packages/core/src/specs/v2/utils.ts:103"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},71184:(e,n,d)=>{d.d(n,{R:()=>t,x:()=>i});var s=d(14041);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);