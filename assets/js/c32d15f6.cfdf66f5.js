"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[97321],{22058:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"adapters/qdrant","title":"Qdrant Adapter for ElizaOS","description":"A vector database adapter for ElizaOS that provides efficient similarity search capabilities through Qdrant, optimized for knowledge management and semantic search operations.","source":"@site/packages/adapters/qdrant.md","sourceDirName":"adapters","slug":"/adapters/qdrant","permalink":"/packages/adapters/qdrant","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ElizaOS PostgreSQL Adapter","permalink":"/packages/adapters/postgres"},"next":{"title":"SQLite Adapter","permalink":"/packages/adapters/sqlite"}}');var s=i(31085),a=i(71184);const t={},l="Qdrant Adapter for ElizaOS",d={},c=[{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Required Environment Variables",id:"required-environment-variables",level:3},{value:"Features in Detail",id:"features-in-detail",level:2},{value:"Vector Search",id:"vector-search",level:3},{value:"Knowledge Management",id:"knowledge-management",level:3},{value:"Text Preprocessing",id:"text-preprocessing",level:3},{value:"Caching System",id:"caching-system",level:3},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Specialized Functions",id:"specialized-functions",level:3},{value:"Collection Management",id:"collection-management",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"FAQ",id:"faq",level:2},{value:"Can I use different vector sizes?",id:"can-i-use-different-vector-sizes",level:3},{value:"Is caching required?",id:"is-caching-required",level:3},{value:"Can I share knowledge between agents?",id:"can-i-share-knowledge-between-agents",level:3},{value:"How do I handle different embedding models?",id:"how-do-i-handle-different-embedding-models",level:3},{value:"Does it support multi-tenancy?",id:"does-it-support-multi-tenancy",level:3},{value:"What about full-text search?",id:"what-about-full-text-search",level:3},{value:"Is sharding supported?",id:"is-sharding-supported",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"qdrant-adapter-for-elizaos",children:"Qdrant Adapter for ElizaOS"})}),"\n",(0,s.jsx)(n.p,{children:"A vector database adapter for ElizaOS that provides efficient similarity search capabilities through Qdrant, optimized for knowledge management and semantic search operations."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Vector similarity search with cosine distance"}),"\n",(0,s.jsx)(n.li,{children:"Efficient knowledge base management"}),"\n",(0,s.jsx)(n.li,{children:"Built-in text preprocessing for better search quality"}),"\n",(0,s.jsx)(n.li,{children:"UUID v5 compatibility for Qdrant IDs"}),"\n",(0,s.jsx)(n.li,{children:"In-memory caching system"}),"\n",(0,s.jsx)(n.li,{children:"Content metadata support"}),"\n",(0,s.jsx)(n.li,{children:"Shared knowledge management"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Qdrant server (self-hosted or cloud)"}),"\n",(0,s.jsx)(n.li,{children:"Node.js 23 or later"}),"\n",(0,s.jsx)(n.li,{children:"ElizaOS installation"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos-plugins/adapter-qdrant\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Add the adapter to your ElizaOS configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "plugins": ["@elizaos-plugins/adapter-qdrant"],\n  "settings": {\n    "QDRANT_URL": "your-qdrant-server-url",\n    "QDRANT_KEY": "your-qdrant-api-key",\n    "QDRANT_PORT": "6333",\n    "QDRANT_VECTOR_SIZE": "1536" // Adjust based on your embedding size\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"required-environment-variables",children:"Required Environment Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"QDRANT_URL"}),": URL of your Qdrant server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"QDRANT_KEY"}),": API key for authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"QDRANT_PORT"}),": Port number for Qdrant server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"QDRANT_VECTOR_SIZE"}),": Dimension of your vectors"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"features-in-detail",children:"Features in Detail"}),"\n",(0,s.jsx)(n.h3,{id:"vector-search",children:"Vector Search"}),"\n",(0,s.jsx)(n.p,{children:"The adapter provides specialized vector search capabilities:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cosine similarity search"}),"\n",(0,s.jsx)(n.li,{children:"Configurable vector dimensions"}),"\n",(0,s.jsx)(n.li,{children:"Support for multiple embedding types"}),"\n",(0,s.jsx)(n.li,{children:"Cache support for frequent searches"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"knowledge-management",children:"Knowledge Management"}),"\n",(0,s.jsx)(n.p,{children:"Knowledge items are stored with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Vector embeddings for similarity search"}),"\n",(0,s.jsx)(n.li,{children:"Metadata support for additional information"}),"\n",(0,s.jsx)(n.li,{children:"Shared/private knowledge separation"}),"\n",(0,s.jsx)(n.li,{children:"Content versioning through chunk management"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"text-preprocessing",children:"Text Preprocessing"}),"\n",(0,s.jsx)(n.p,{children:"Built-in text preprocessing for better search quality:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Code block removal"}),"\n",(0,s.jsx)(n.li,{children:"URL normalization"}),"\n",(0,s.jsx)(n.li,{children:"Markdown cleanup"}),"\n",(0,s.jsx)(n.li,{children:"Special character handling"}),"\n",(0,s.jsx)(n.li,{children:"Whitespace normalization"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"caching-system",children:"Caching System"}),"\n",(0,s.jsx)(n.p,{children:"Efficient in-memory caching:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Per-agent cache isolation"}),"\n",(0,s.jsx)(n.li,{children:"UUID-based cache keys"}),"\n",(0,s.jsx)(n.li,{children:"Automatic cache management"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,s.jsx)(n.h3,{id:"specialized-functions",children:"Specialized Functions"}),"\n",(0,s.jsx)(n.p,{children:"This adapter primarily implements:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Knowledge management"}),"\n",(0,s.jsx)(n.li,{children:"Vector similarity search"}),"\n",(0,s.jsx)(n.li,{children:"Caching operations"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Other database functions (like memory management, participant tracking, etc.) are stubbed but not implemented. Use a different adapter if you need these features."}),"\n",(0,s.jsx)(n.h3,{id:"collection-management",children:"Collection Management"}),"\n",(0,s.jsx)(n.p,{children:"The adapter automatically manages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Collection creation"}),"\n",(0,s.jsx)(n.li,{children:"Vector indexes"}),"\n",(0,s.jsx)(n.li,{children:"Point upserts with payload"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Set correct vector dimensions based on your embedding model"}),"\n",(0,s.jsx)(n.li,{children:"Use consistent embedding generation"}),"\n",(0,s.jsx)(n.li,{children:"Consider caching for frequent searches"}),"\n",(0,s.jsx)(n.li,{children:"Monitor memory usage with large cache sizes"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(n.h3,{id:"can-i-use-different-vector-sizes",children:"Can I use different vector sizes?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, configure QDRANT_VECTOR_SIZE based on your embedding model's output size."}),"\n",(0,s.jsx)(n.h3,{id:"is-caching-required",children:"Is caching required?"}),"\n",(0,s.jsx)(n.p,{children:"No, caching is optional but recommended for performance when doing repeated searches."}),"\n",(0,s.jsx)(n.h3,{id:"can-i-share-knowledge-between-agents",children:"Can I share knowledge between agents?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, use the isShared flag in knowledge metadata for shared content."}),"\n",(0,s.jsx)(n.h3,{id:"how-do-i-handle-different-embedding-models",children:"How do I handle different embedding models?"}),"\n",(0,s.jsx)(n.p,{children:"Configure the vector size to match your model's output dimensions and ensure consistent preprocessing."}),"\n",(0,s.jsx)(n.h3,{id:"does-it-support-multi-tenancy",children:"Does it support multi-tenancy?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, through per-agent isolation of knowledge and cache."}),"\n",(0,s.jsx)(n.h3,{id:"what-about-full-text-search",children:"What about full-text search?"}),"\n",(0,s.jsx)(n.p,{children:"The adapter focuses on vector similarity search; use MongoDB or PostgreSQL adapters for full-text search."}),"\n",(0,s.jsx)(n.h3,{id:"is-sharding-supported",children:"Is sharding supported?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, through Qdrant's native sharding capabilities."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(14041);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);