"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[46007],{80567:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"rest/eliza-os-api","title":"Eliza OS API","description":"API documentation for Eliza OS v1.0.10 - A flexible and scalable AI agent framework.","source":"@site/docs/rest/eliza-os-api.info.mdx","sourceDirName":"rest","slug":"/rest/eliza-os-api","permalink":"/docs/rest/eliza-os-api","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1750735899000,"sidebarPosition":0,"frontMatter":{"id":"eliza-os-api","title":"Eliza OS API","description":"API documentation for Eliza OS v1.0.10 - A flexible and scalable AI agent framework.","sidebar_label":"Introduction","sidebar_position":0,"hide_title":true,"custom_edit_url":null},"sidebar":"tutorialSidebar","previous":{"title":"Update","permalink":"/docs/cli/update"},"next":{"title":"Add agent to channel","permalink":"/docs/rest/add-agent-to-channel"}}');var a=i(31085),t=i(71184),l=(i(37083),i(54441));i(7103),i(53759),i(12458);const r={id:"eliza-os-api",title:"Eliza OS API",description:"API documentation for Eliza OS v1.0.10 - A flexible and scalable AI agent framework.",sidebar_label:"Introduction",sidebar_position:0,hide_title:!0,custom_edit_url:null},o=void 0,d={},c=[];function h(e){const n={a:"a",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("span",{className:"theme-doc-version-badge badge badge--secondary",children:"Version: 1.0.10"}),"\n",(0,a.jsx)(l.default,{as:"h1",className:"openapi__heading",children:"Eliza OS API"}),"\n",(0,a.jsx)(n.p,{children:"API documentation for Eliza OS v1.0.10 - A flexible and scalable AI agent framework."}),"\n",(0,a.jsx)(n.p,{children:"This API is designed to be used with a locally running Eliza instance. Endpoints allow for creating,\nmanaging, and interacting with AI agents through a REST interface."}),"\n",(0,a.jsx)(n.p,{children:"The API is organized into the following domains:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"System"}),": System-wide operations and environment management"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agents"}),": Agent lifecycle and management operations"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Memory"}),": Agent memory and room management"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Messaging"}),": Message handling, channels, and servers"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Audio"}),": Audio processing and speech synthesis"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Media"}),": File upload and media management"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"TEE"}),": Trusted Execution Environment operations"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"WebSocket"}),": Real-time communication via Socket.IO"]}),"\n"]}),"\n",(0,a.jsxs)("div",{style:{display:"flex",flexDirection:"column",marginBottom:"var(--ifm-paragraph-margin-bottom)"},children:[(0,a.jsx)("h3",{style:{marginBottom:"0.25rem"},children:"Contact"}),(0,a.jsx)("span",{children:"Eliza OS Community:"}),(0,a.jsxs)("span",{children:["URL: ",(0,a.jsx)(n.a,{href:"https://github.com/elizaos/eliza",children:"https://github.com/elizaos/eliza"})]})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);