"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[58668],{10726:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"plugins/migration/claude-code/prompt-and-generation-guide","title":"ElizaOS Prompt Composition & Generation Guide - v1.x","description":"Important: This guide provides comprehensive documentation for migrating from composeContext to the new prompt composition methods, and from the old generation functions to useModel.","source":"@site/docs/plugins/migration/claude-code/prompt-and-generation-guide.md","sourceDirName":"plugins/migration/claude-code","slug":"/plugins/migration/claude-code/prompt-and-generation-guide","permalink":"/docs/plugins/migration/claude-code/prompt-and-generation-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/plugins/migration/claude-code/prompt-and-generation-guide.md","tags":[],"version":"current","lastUpdatedBy":"0xbbjoker","lastUpdatedAt":1751365902000,"frontMatter":{}}');var o=t(31085),a=t(71184);const i={},r="ElizaOS Prompt Composition & Generation Guide - v1.x",l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview of Changes",id:"overview-of-changes",level:2},{value:"Prompt Composition Migration",id:"prompt-composition-migration",level:2},{value:"composeContext \u2192 composePrompt/composePromptFromState",id:"composecontext--composepromptcomposepromptfromstate",level:3},{value:"v0: Single composeContext Function",id:"v0-single-composecontext-function",level:4},{value:"v1: Two Specialized Functions",id:"v1-two-specialized-functions",level:4},{value:"Key Differences",id:"key-differences",level:3},{value:"Migration Examples",id:"migration-examples",level:3},{value:"Simple State Objects",id:"simple-state-objects",level:4},{value:"Complex Runtime State",id:"complex-runtime-state",level:4},{value:"Dynamic Templates",id:"dynamic-templates",level:4},{value:"Text Generation Migration",id:"text-generation-migration",level:2},{value:"generateText \u2192 useModel",id:"generatetext--usemodel",level:3},{value:"v0: Standalone Function",id:"v0-standalone-function",level:4},{value:"v1: Runtime Method",id:"v1-runtime-method",level:4},{value:"generateObject \u2192 useModel",id:"generateobject--usemodel",level:3},{value:"v0: Object Generation",id:"v0-object-generation",level:4},{value:"v1: Using useModel with XML",id:"v1-using-usemodel-with-xml",level:4},{value:"generateMessageResponse \u2192 useModel",id:"generatemessageresponse--usemodel",level:3},{value:"v0: Message Response Generation",id:"v0-message-response-generation",level:4},{value:"v1: Using useModel with XML Template",id:"v1-using-usemodel-with-xml-template",level:4},{value:"Template Format Migration",id:"template-format-migration",level:2},{value:"JSON \u2192 XML Templates",id:"json--xml-templates",level:3},{value:"v0: JSON Template",id:"v0-json-template",level:4},{value:"v1: XML Template",id:"v1-xml-template",level:4},{value:"Parsing Changes",id:"parsing-changes",level:3},{value:"v0: JSON Parsing",id:"v0-json-parsing",level:4},{value:"v1: XML Parsing",id:"v1-xml-parsing",level:4},{value:"Template Examples",id:"template-examples",level:3},{value:"Complex Object Extraction",id:"complex-object-extraction",level:4},{value:"Complete Migration Examples",id:"complete-migration-examples",level:2},{value:"Example 1: Simple Action Handler",id:"example-1-simple-action-handler",level:3},{value:"Example 2: Complex State Handling",id:"example-2-complex-state-handling",level:3},{value:"Example 3: Custom Model Parameters",id:"example-3-custom-model-parameters",level:3},{value:"Benefits of the New Approach",id:"benefits-of-the-new-approach",level:2},{value:"1. Unified Interface",id:"1-unified-interface",level:3},{value:"2. Better State Management",id:"2-better-state-management",level:3},{value:"3. XML Over JSON",id:"3-xml-over-json",level:3},{value:"4. Type Safety",id:"4-type-safety",level:3},{value:"5. Extensibility",id:"5-extensibility",level:3},{value:"6. Performance",id:"6-performance",level:3},{value:"Real-World Migration Example: Gitcoin Passport Score Action",id:"real-world-migration-example-gitcoin-passport-score-action",level:2},{value:"Original v0 Action",id:"original-v0-action",level:3},{value:"Migrated v1 Action",id:"migrated-v1-action",level:3},{value:"Memory Creation Migration",id:"memory-creation-migration",level:3},{value:"Complete Action Migration Summary",id:"complete-action-migration-summary",level:3},{value:"Migration Checklist",id:"migration-checklist",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"elizaos-prompt-composition--generation-guide---v1x",children:"ElizaOS Prompt Composition & Generation Guide - v1.x"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Important"}),": This guide provides comprehensive documentation for migrating from ",(0,o.jsx)(n.code,{children:"composeContext"})," to the new prompt composition methods, and from the old generation functions to ",(0,o.jsx)(n.code,{children:"useModel"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#overview-of-changes",children:"Overview of Changes"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#prompt-composition-migration",children:"Prompt Composition Migration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#composecontext--composepromptcomposepromptfromstate",children:"composeContext \u2192 composePrompt/composePromptFromState"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#key-differences",children:"Key Differences"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#migration-examples",children:"Migration Examples"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#text-generation-migration",children:"Text Generation Migration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#generatetext--usemodel",children:"generateText \u2192 useModel"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#generateobject--usemodel",children:"generateObject \u2192 useModel"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#generatemessageresponse--usemodel",children:"generateMessageResponse \u2192 useModel"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#template-format-migration",children:"Template Format Migration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#json--xml-templates",children:"JSON \u2192 XML Templates"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#parsing-changes",children:"Parsing Changes"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#complete-migration-examples",children:"Complete Migration Examples"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#benefits-of-the-new-approach",children:"Benefits of the New Approach"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#real-world-migration-example-gitcoin-passport-score-action",children:"Real-World Migration Example: Gitcoin Passport Score Action"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"overview-of-changes",children:"Overview of Changes"}),"\n",(0,o.jsx)(n.p,{children:"The v1 migration introduces several key improvements:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Prompt Composition"}),": ",(0,o.jsx)(n.code,{children:"composeContext"})," split into two specialized functions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Unified Model Interface"}),": All generation functions consolidated into ",(0,o.jsx)(n.code,{children:"runtime.useModel"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Template Format"}),": JSON responses replaced with XML for better parsing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Better Type Safety"}),": Improved TypeScript support throughout"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"prompt-composition-migration",children:"Prompt Composition Migration"}),"\n",(0,o.jsx)(n.h3,{id:"composecontext--composepromptcomposepromptfromstate",children:"composeContext \u2192 composePrompt/composePromptFromState"}),"\n",(0,o.jsx)(n.h4,{id:"v0-single-composecontext-function",children:"v0: Single composeContext Function"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: packages/core-0x/src/context.ts\nexport const composeContext = ({\n  state,\n  template,\n  templatingEngine,\n}: {\n  state: State;\n  template: TemplateType;\n  templatingEngine?: 'handlebars';\n}) => {\n  // Supported both simple replacement and handlebars\n  if (templatingEngine === 'handlebars') {\n    const templateFunction = handlebars.compile(templateStr);\n    return templateFunction(state);\n  }\n  // Simple {{key}} replacement\n  return templateStr.replace(/{{\\w+}}/g, (match) => {\n    const key = match.replace(/{{|}}/g, '');\n    return state[key] ?? '';\n  });\n};\n"})}),"\n",(0,o.jsx)(n.h4,{id:"v1-two-specialized-functions",children:"v1: Two Specialized Functions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: packages/core/src/utils.ts\n\n// For simple key-value state objects\nexport const composePrompt = ({\n  state,\n  template,\n}: {\n  state: { [key: string]: string };\n  template: TemplateType;\n}) => {\n  const templateStr = typeof template === 'function' ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const output = composeRandomUser(templateFunction(state), 10);\n  return output;\n};\n\n// For complex State objects from runtime\nexport const composePromptFromState = ({\n  state,\n  template,\n}: {\n  state: State;\n  template: TemplateType;\n}) => {\n  const templateStr = typeof template === 'function' ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n\n  // Intelligent state flattening\n  const stateKeys = Object.keys(state);\n  const filteredKeys = stateKeys.filter((key) => !['text', 'values', 'data'].includes(key));\n\n  const filteredState = filteredKeys.reduce((acc, key) => {\n    acc[key] = state[key];\n    return acc;\n  }, {});\n\n  // Merges filtered state with state.values\n  const output = composeRandomUser(templateFunction({ ...filteredState, ...state.values }), 10);\n  return output;\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"key-differences",children:"Key Differences"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Handlebars by Default"}),": v1 always uses Handlebars (no simple replacement mode)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Auto HTML Escaping"}),": v1 automatically converts ",(0,o.jsx)(n.code,{children:"{{var}}"})," to ",(0,o.jsx)(n.code,{children:"{{{var}}}"})," to prevent HTML escaping"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"State Handling"}),": ",(0,o.jsx)(n.code,{children:"composePromptFromState"})," intelligently flattens complex State objects"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Random User Names"}),": Both functions automatically replace ",(0,o.jsx)(n.code,{children:"{{name1}}"}),", ",(0,o.jsx)(n.code,{children:"{{name2}}"}),", etc. with random names"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"migration-examples",children:"Migration Examples"}),"\n",(0,o.jsx)(n.h4,{id:"simple-state-objects",children:"Simple State Objects"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0\nconst prompt = composeContext({\n  state: { userName: 'Alice', topic: 'weather' },\n  template: \"Hello {{userName}}, let's talk about {{topic}}\",\n});\n\n// v1\nconst prompt = composePrompt({\n  state: { userName: 'Alice', topic: 'weather' },\n  template: \"Hello {{userName}}, let's talk about {{topic}}\",\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"complex-runtime-state",children:"Complex Runtime State"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0\nconst prompt = composeContext({\n  state: currentState,\n  template: messageTemplate,\n  templatingEngine: 'handlebars',\n});\n\n// v1 - Use composePromptFromState for State objects\nconst prompt = composePromptFromState({\n  state: currentState,\n  template: messageTemplate,\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"dynamic-templates",children:"Dynamic Templates"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0\nconst template = ({ state }) => {\n  return state.isUrgent ? 'URGENT: {{message}}' : 'Info: {{message}}';\n};\n\nconst prompt = composeContext({ state, template });\n\n// v1 - Same pattern works\nconst prompt = composePrompt({ state, template });\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"text-generation-migration",children:"Text Generation Migration"}),"\n",(0,o.jsx)(n.h3,{id:"generatetext--usemodel",children:"generateText \u2192 useModel"}),"\n",(0,o.jsx)(n.h4,{id:"v0-standalone-function",children:"v0: Standalone Function"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Using generateText\nimport { generateText, ModelClass } from '@elizaos/core';\n\nconst response = await generateText({\n  runtime,\n  context: prompt,\n  modelClass: ModelClass.SMALL,\n  stop: ['\\n'],\n  temperature: 0.7,\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"v1-runtime-method",children:"v1: Runtime Method"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: Using runtime.useModel\nimport { ModelType } from '@elizaos/core';\n\nconst response = await runtime.useModel(ModelType.TEXT_SMALL, {\n  prompt,\n  stopSequences: ['\\n'],\n  temperature: 0.7,\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"generateobject--usemodel",children:"generateObject \u2192 useModel"}),"\n",(0,o.jsx)(n.h4,{id:"v0-object-generation",children:"v0: Object Generation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Using generateObject\nconst content = await generateObject({\n  runtime,\n  context: prompt,\n  modelClass: ModelClass.SMALL,\n});\n\n// Returned raw object\nconsole.log(content.name, content.value);\n"})}),"\n",(0,o.jsx)(n.h4,{id:"v1-using-usemodel-with-xml",children:"v1: Using useModel with XML"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: Generate text with XML format\nconst xmlResponse = await runtime.useModel(ModelType.TEXT_SMALL, {\n  prompt,\n});\n\n// Parse XML to object\nconst content = parseKeyValueXml(xmlResponse);\nconsole.log(content.name, content.value);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"generatemessageresponse--usemodel",children:"generateMessageResponse \u2192 useModel"}),"\n",(0,o.jsx)(n.h4,{id:"v0-message-response-generation",children:"v0: Message Response Generation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: From getScore.ts example\nconst addressRequest = await generateMessageResponse({\n  runtime,\n  context,\n  modelClass: ModelClass.SMALL,\n});\n\nconst address = addressRequest.address as string;\n"})}),"\n",(0,o.jsx)(n.h4,{id:"v1-using-usemodel-with-xml-template",children:"v1: Using useModel with XML Template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: Generate and parse XML response\nconst xmlResponse = await runtime.useModel(ModelType.TEXT_SMALL, {\n  prompt: context,\n});\n\nconst addressRequest = parseKeyValueXml(xmlResponse);\nconst address = addressRequest.address as string;\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"template-format-migration",children:"Template Format Migration"}),"\n",(0,o.jsx)(n.h3,{id:"json--xml-templates",children:"JSON \u2192 XML Templates"}),"\n",(0,o.jsx)(n.p,{children:"The most significant change is moving from JSON to XML format for structured responses."}),"\n",(0,o.jsx)(n.h4,{id:"v0-json-template",children:"v0: JSON Template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'const addressTemplate = `From previous sentence extract only the Ethereum address being asked about.\nRespond with a JSON markdown block containing only the extracted value:\n\n\\`\\`\\`json\n{\n"address": string | null\n}\n\\`\\`\\`\n`;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"v1-xml-template",children:"v1: XML Template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const addressTemplate = `From previous sentence extract only the Ethereum address being asked about.\nRespond with an XML block containing only the extracted value:\n\n<response>\n<address>extracted_address_here_or_null</address>\n</response>\n`;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"parsing-changes",children:"Parsing Changes"}),"\n",(0,o.jsx)(n.h4,{id:"v0-json-parsing",children:"v0: JSON Parsing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Parse JSON from text\nimport { parseJSONObjectFromText } from '@elizaos/core';\n\nconst parsedContent = parseJSONObjectFromText(response);\nif (parsedContent && parsedContent.address) {\n  // Use the address\n}\n"})}),"\n",(0,o.jsx)(n.h4,{id:"v1-xml-parsing",children:"v1: XML Parsing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: Parse XML key-value pairs\nimport { parseKeyValueXml } from '@elizaos/core';\n\nconst parsedContent = parseKeyValueXml(response);\nif (parsedContent && parsedContent.address) {\n  // Use the address\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"template-examples",children:"Template Examples"}),"\n",(0,o.jsx)(n.h4,{id:"complex-object-extraction",children:"Complex Object Extraction"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// v0: JSON Template\nconst template = `Extract token information from the message.\nReturn a JSON object:\n\n\\`\\`\\`json\n{\n  "name": "token name",\n  "symbol": "token symbol",\n  "supply": "total supply",\n  "features": ["feature1", "feature2"]\n}\n\\`\\`\\``;\n\n// v1: XML Template\nconst template = `Extract token information from the message.\nReturn an XML response:\n\n<response>\n  <name>token name</name>\n  <symbol>token symbol</symbol>\n  <supply>total supply</supply>\n  <features>feature1,feature2</features>\n</response>`;\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"complete-migration-examples",children:"Complete Migration Examples"}),"\n",(0,o.jsx)(n.h3,{id:"example-1-simple-action-handler",children:"Example 1: Simple Action Handler"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Old Action Handler\nimport { composeContext, generateMessageResponse, ModelClass } from '@elizaos/core';\n\nhandler: async (runtime, message, state) => {\n  // Compose context\n  const context = composeContext({\n    state,\n    template: addressTemplate,\n  });\n\n  // Generate response\n  const response = await generateMessageResponse({\n    runtime,\n    context,\n    modelClass: ModelClass.SMALL,\n  });\n\n  const address = response.address;\n  // Process address...\n};\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v1: New Action Handler\nimport { composePromptFromState, parseKeyValueXml, ModelType } from '@elizaos/core';\n\nhandler: async (runtime, message, state) => {\n  // Compose prompt\n  const prompt = composePromptFromState({\n    state,\n    template: addressTemplate, // Now using XML format\n  });\n\n  // Generate response\n  const xmlResponse = await runtime.useModel(ModelType.TEXT_SMALL, {\n    prompt,\n  });\n\n  // Parse XML\n  const response = parseKeyValueXml(xmlResponse);\n  const address = response.address;\n  // Process address...\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example-2-complex-state-handling",children:"Example 2: Complex State Handling"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Complex Context Building\nconst context = composeContext({\n  state: {\n    ...baseState,\n    recentMessages: formatMessages(messages),\n    userName: user.name,\n    customData: JSON.stringify(data),\n  },\n  template: complexTemplate,\n  templatingEngine: 'handlebars',\n});\n\nconst result = await generateObject({\n  runtime,\n  context,\n  modelClass: ModelClass.LARGE,\n});\n\n// v1: Simplified with composePromptFromState\nconst state = await runtime.composeState(message);\nconst prompt = composePromptFromState({\n  state, // Already contains recentMessages, userName, etc.\n  template: complexTemplate,\n});\n\nconst xmlResult = await runtime.useModel(ModelType.TEXT_LARGE, {\n  prompt,\n});\n\nconst result = parseKeyValueXml(xmlResult);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example-3-custom-model-parameters",children:"Example 3: Custom Model Parameters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Limited control\nconst response = await generateText({\n  runtime,\n  context,\n  modelClass: ModelClass.SMALL,\n  temperature: 0.7,\n  stop: ['\\n', 'END'],\n  maxTokens: 100,\n});\n\n// v1: Full control with useModel\nconst response = await runtime.useModel(ModelType.TEXT_SMALL, {\n  prompt,\n  temperature: 0.7,\n  stopSequences: ['\\n', 'END'],\n  maxTokens: 100,\n  frequencyPenalty: 0.5,\n  presencePenalty: 0.5,\n  // Any additional model-specific parameters\n});\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"benefits-of-the-new-approach",children:"Benefits of the New Approach"}),"\n",(0,o.jsx)(n.h3,{id:"1-unified-interface",children:"1. Unified Interface"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Multiple generation functions (",(0,o.jsx)(n.code,{children:"generateText"}),", ",(0,o.jsx)(n.code,{children:"generateObject"}),", ",(0,o.jsx)(n.code,{children:"generateMessageResponse"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"Inconsistent parameter names"}),"\n",(0,o.jsx)(n.li,{children:"Different return types"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Single ",(0,o.jsx)(n.code,{children:"useModel"})," method for all model interactions"]}),"\n",(0,o.jsx)(n.li,{children:"Consistent parameter interface"}),"\n",(0,o.jsx)(n.li,{children:"Predictable return types"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-better-state-management",children:"2. Better State Management"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Manual state flattening required"}),"\n",(0,o.jsx)(n.li,{children:"Confusion between State object and simple key-value objects"}),"\n",(0,o.jsx)(n.li,{children:"No intelligent handling of nested data"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"composePromptFromState"})," intelligently handles State objects"]}),"\n",(0,o.jsx)(n.li,{children:"Automatic flattening of relevant fields"}),"\n",(0,o.jsx)(n.li,{children:"Preserves state.values for template access"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"3-xml-over-json",children:"3. XML Over JSON"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"JSON parsing often failed with markdown code blocks"}),"\n",(0,o.jsx)(n.li,{children:"Complex escaping issues"}),"\n",(0,o.jsx)(n.li,{children:"Inconsistent formatting from LLMs"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"XML is more forgiving and easier to parse"}),"\n",(0,o.jsx)(n.li,{children:"Better handling of special characters"}),"\n",(0,o.jsx)(n.li,{children:"More consistent LLM outputs"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"4-type-safety",children:"4. Type Safety"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Loose typing on generation functions"}),"\n",(0,o.jsx)(n.li,{children:"Runtime errors from type mismatches"}),"\n",(0,o.jsx)(n.li,{children:"Poor IDE support"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Strong TypeScript types throughout"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ModelType"})," enum for model selection"]}),"\n",(0,o.jsx)(n.li,{children:"Better IDE autocomplete and error detection"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"5-extensibility",children:"5. Extensibility"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Hard-coded model providers"}),"\n",(0,o.jsx)(n.li,{children:"Limited customization options"}),"\n",(0,o.jsx)(n.li,{children:"Difficult to add new models"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Pluggable model system via ",(0,o.jsx)(n.code,{children:"runtime.registerModel"})]}),"\n",(0,o.jsx)(n.li,{children:"Easy to add custom model providers"}),"\n",(0,o.jsx)(n.li,{children:"Standardized model interface"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"6-performance",children:"6. Performance"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v0 Problems:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Multiple parsing attempts for JSON"}),"\n",(0,o.jsx)(n.li,{children:"Redundant context building"}),"\n",(0,o.jsx)(n.li,{children:"No caching mechanism"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"v1 Solution:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Single-pass XML parsing"}),"\n",(0,o.jsx)(n.li,{children:"Efficient state composition"}),"\n",(0,o.jsxs)(n.li,{children:["Built-in caching support in ",(0,o.jsx)(n.code,{children:"composeState"})]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"real-world-migration-example-gitcoin-passport-score-action",children:"Real-World Migration Example: Gitcoin Passport Score Action"}),"\n",(0,o.jsx)(n.p,{children:"Here's a complete migration of a real action from the Gitcoin Passport plugin:"}),"\n",(0,o.jsx)(n.h3,{id:"original-v0-action",children:"Original v0 Action"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  type Action,\n  elizaLogger,\n  type IAgentRuntime,\n  type Memory,\n  type HandlerCallback,\n  type State,\n  getEmbeddingZeroVector,\n  composeContext,\n  generateMessageResponse,\n  ModelClass,\n} from '@elizaos/core';\n\nexport const addressTemplate = `From previous sentence extract only the Ethereum address being asked about.\nRespond with a JSON markdown block containing only the extracted value:\n\n\\`\\`\\`json\n{\n\"address\": string | null\n}\n\\`\\`\\`\n`;\n\nhandler: async (runtime, _message, state, _options, callback) => {\n  // Initialize or update state\n  let currentState = state;\n  if (!currentState) {\n    currentState = (await runtime.composeState(_message)) as State;\n  } else {\n    currentState = await runtime.updateRecentMessageState(currentState);\n  }\n\n  const context = composeContext({\n    state: currentState,\n    template: `${_message.content.text}\\n${addressTemplate}`,\n  });\n\n  const addressRequest = await generateMessageResponse({\n    runtime,\n    context,\n    modelClass: ModelClass.SMALL,\n  });\n\n  const address = addressRequest.address as string;\n  // ... rest of handler\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"migrated-v1-action",children:"Migrated v1 Action"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  type Action,\n  elizaLogger,\n  type IAgentRuntime,\n  type Memory,\n  type HandlerCallback,\n  type State,\n  composePromptFromState,\n  parseKeyValueXml,\n  ModelType,\n} from '@elizaos/core';\n\nexport const addressTemplate = `From previous sentence extract only the Ethereum address being asked about.\nRespond with an XML block containing only the extracted value:\n\n<response>\n<address>extracted_ethereum_address_or_null</address>\n</response>\n`;\n\nhandler: async (runtime, _message, state, _options, callback) => {\n  // Initialize or update state\n  let currentState = state;\n  if (!currentState) {\n    currentState = await runtime.composeState(_message);\n  } else {\n    currentState = await runtime.composeState(_message, ['RECENT_MESSAGES']);\n  }\n\n  const prompt = composePromptFromState({\n    state: currentState,\n    template: `${_message.content.text}\\n${addressTemplate}`,\n  });\n\n  const xmlResponse = await runtime.useModel(ModelType.TEXT_SMALL, {\n    prompt,\n  });\n\n  const addressRequest = parseKeyValueXml(xmlResponse);\n  const address = addressRequest?.address as string;\n  // ... rest of handler\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"memory-creation-migration",children:"Memory Creation Migration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// v0: Using deprecated fields\nconst memory: Memory = {\n  userId: _message.userId,\n  agentId: _message.agentId,\n  roomId: _message.roomId,\n  content: { text: formattedOutput },\n  createdAt: Date.now(),\n  embedding: getEmbeddingZeroVector(),\n};\nawait runtime.messageManager.createMemory(memory);\n\n// v1: Using new structure\nconst memory: Memory = {\n  entityId: _message.entityId,\n  agentId: runtime.agentId,\n  roomId: _message.roomId,\n  content: { text: formattedOutput },\n  createdAt: Date.now(),\n  // embedding will be added by runtime if needed\n};\nawait runtime.createMemory(memory);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"complete-action-migration-summary",children:"Complete Action Migration Summary"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Imports"}),": Replace old functions with new equivalents"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Template"}),": Convert JSON format to XML"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"State Management"}),": Use ",(0,o.jsx)(n.code,{children:"composeState"})," with filtering"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Generation"}),": Replace ",(0,o.jsx)(n.code,{children:"generateMessageResponse"})," with ",(0,o.jsx)(n.code,{children:"useModel"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Parsing"}),": Use ",(0,o.jsx)(n.code,{children:"parseKeyValueXml"})," instead of direct object access"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Memory"}),": Update to use ",(0,o.jsx)(n.code,{children:"entityId"})," and new creation method"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"migration-checklist",children:"Migration Checklist"}),"\n",(0,o.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"composeContext"})," with ",(0,o.jsx)(n.code,{children:"composePrompt"})," or ",(0,o.jsx)(n.code,{children:"composePromptFromState"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update all templates from JSON to XML format"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"generateText"})," with ",(0,o.jsx)(n.code,{children:"runtime.useModel(ModelType.TEXT_*)"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"generateObject"})," with ",(0,o.jsx)(n.code,{children:"runtime.useModel"})," + ",(0,o.jsx)(n.code,{children:"parseKeyValueXml"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"generateMessageResponse"})," with ",(0,o.jsx)(n.code,{children:"runtime.useModel"})," + ",(0,o.jsx)(n.code,{children:"parseKeyValueXml"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update ",(0,o.jsx)(n.code,{children:"ModelClass"})," to ",(0,o.jsx)(n.code,{children:"ModelType"})," enum values"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"parseJSONObjectFromText"})," with ",(0,o.jsx)(n.code,{children:"parseKeyValueXml"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update import statements to use new functions"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test XML parsing with your specific use cases"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Consider using state filtering for performance optimization"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update Memory objects to use ",(0,o.jsx)(n.code,{children:"entityId"})," instead of ",(0,o.jsx)(n.code,{children:"userId"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace ",(0,o.jsx)(n.code,{children:"runtime.updateRecentMessageState"})," with filtered ",(0,o.jsx)(n.code,{children:"composeState"})]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove ",(0,o.jsx)(n.code,{children:"getEmbeddingZeroVector"})," - embeddings are handled automatically"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(14041);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);