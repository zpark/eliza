"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[42216],{19468:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"namespaces/v2/type-aliases/KnowledgeItem","title":"KnowledgeItem","description":"@elizaos/core v1.0.12 / v2 / KnowledgeItem","source":"@site/api/namespaces/v2/type-aliases/KnowledgeItem.md","sourceDirName":"namespaces/v2/type-aliases","slug":"/namespaces/v2/type-aliases/KnowledgeItem","permalink":"/api/namespaces/v2/type-aliases/KnowledgeItem","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"JSONSchema","permalink":"/api/namespaces/v2/type-aliases/JSONSchema"},"next":{"title":"Media","permalink":"/api/namespaces/v2/type-aliases/Media"}}');var a=t(31085),i=t(71184);const d={},c="Type Alias: KnowledgeItem",o={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"id",id:"id",level:3},{value:"content",id:"content",level:3},{value:"metadata?",id:"metadata",level:3},{value:"Defined in",id:"defined-in",level:2}];function r(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.0.12"})," / ",(0,a.jsx)(n.a,{href:"/api/namespaces/v2/",children:"v2"})," / KnowledgeItem"]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-knowledgeitem",children:"Type Alias: KnowledgeItem"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"KnowledgeItem"}),": ",(0,a.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Represents a single item of knowledge that can be processed and stored by the agent.\nKnowledge items consist of content (text and optional structured data) and metadata.\nThese items are typically added to the agent's knowledge base via ",(0,a.jsx)(n.code,{children:"AgentRuntime.addKnowledge"}),"\nand retrieved using ",(0,a.jsx)(n.code,{children:"AgentRuntime.getKnowledge"}),".\nThe ",(0,a.jsx)(n.code,{children:"id"})," is a unique identifier for the knowledge item, often derived from its source or content."]}),"\n",(0,a.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"id"}),": ",(0,a.jsx)(n.a,{href:"/api/namespaces/v2/type-aliases/UUID",children:(0,a.jsx)(n.code,{children:"UUID"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A Universally Unique Identifier for this specific knowledge item."}),"\n",(0,a.jsx)(n.h3,{id:"content",children:"content"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"content"}),": ",(0,a.jsx)(n.a,{href:"/api/namespaces/v2/interfaces/Content",children:(0,a.jsx)(n.code,{children:"Content"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The actual content of the knowledge item, which must include text and can have other fields."}),"\n",(0,a.jsx)(n.h3,{id:"metadata",children:"metadata?"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"optional"})," ",(0,a.jsx)(n.strong,{children:"metadata"}),": ",(0,a.jsx)(n.code,{children:"MemoryMetadata"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Optional metadata associated with this knowledge item, conforming to ",(0,a.jsx)(n.code,{children:"MemoryMetadata"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/types.ts#L1317",children:"packages/core/src/specs/v2/types.ts:1317"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var s=t(14041);const a={},i=s.createContext(a);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);