"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[4130],{71184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(14041);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}},92245:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"plugins/multiversx","title":"@elizaos/plugin-multiversx","description":"MultiversX blockchain integration plugin for Eliza OS that enables token management and transfers.","source":"@site/packages/plugins/multiversx.md","sourceDirName":"plugins","slug":"/plugins/multiversx","permalink":"/packages/plugins/multiversx","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-multichain","permalink":"/packages/plugins/multichain"},"next":{"title":"@elizaos/plugin-near","permalink":"/packages/plugins/near"}}');var l=i(31085),t=i(71184);const r={},o="@elizaos/plugin-multiversx",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Adding a new action",id:"adding-a-new-action",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2},{value:"Token Transfer",id:"token-transfer",level:3},{value:"Token Creation",id:"token-creation",level:3},{value:"Token Swap",id:"token-swap",level:3},{value:"Pool Creation",id:"pool-creation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Testing",id:"testing",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Credits",id:"credits",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"elizaosplugin-multiversx",children:"@elizaos/plugin-multiversx"})}),"\n",(0,l.jsx)(n.p,{children:"MultiversX blockchain integration plugin for Eliza OS that enables token management and transfers."}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"This plugin aims to be the basis of all interactions with the MultiversX ecosystem."}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"EGLD and ESDT token transfers"}),"\n",(0,l.jsx)(n.li,{children:"Token creation and management"}),"\n",(0,l.jsx)(n.li,{children:"Multiple network support (mainnet, devnet, testnet)"}),"\n",(0,l.jsx)(n.li,{children:"Secure transaction signing"}),"\n",(0,l.jsx)(n.li,{children:"Automatic nonce management"}),"\n",(0,l.jsx)(n.li,{children:"Transaction status tracking"}),"\n",(0,l.jsx)(n.li,{children:"Built-in denomination handling"}),"\n",(0,l.jsx)(n.li,{children:"Comprehensive error handling"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"adding-a-new-action",children:"Adding a new action"}),"\n",(0,l.jsx)(n.p,{children:"Reuse providers and utilities from the existing actions where possible. Add more utilities if you think they will be useful for other actions."}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Add the action to the ",(0,l.jsx)(n.code,{children:"actions"})," directory. Try to follow the naming convention of the other actions."]}),"\n",(0,l.jsxs)(n.li,{children:["Export the action in the ",(0,l.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-multiversx\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsx)(n.p,{children:"The plugin requires environment variables or runtime settings:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"MVX_PRIVATE_KEY=your-wallet-private-key\nMVX_NETWORK=devnet  # mainnet, devnet, or testnet\nACCESS_TOKEN_MANAGEMENT_TO=everyone  # you can put an userid to limit token managament to one user only (use same id as in the database)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h3,{id:"token-transfer",children:"Token Transfer"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { multiversxPlugin } from '@elizaos/plugin-multiversx';\n\n// Send EGLD\nconst result = await eliza.execute({\n  action: 'SEND_TOKEN',\n  content: {\n    tokenAddress: 'erd1...',\n    amount: '1',\n    tokenIdentifier: 'EGLD',\n  },\n});\n\n// Send ESDT\nconst result = await eliza.execute({\n  action: 'SEND_TOKEN',\n  content: {\n    tokenAddress: 'erd1...',\n    amount: '100',\n    tokenIdentifier: 'TEST-a1b2c3',\n  },\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"token-creation",children:"Token Creation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute({\n  action: 'CREATE_TOKEN',\n  content: {\n    tokenName: 'TestToken',\n    tokenTicker: 'TEST',\n    decimals: '18',\n    amount: '1000000',\n  },\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"token-swap",children:"Token Swap"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute({\n  action: 'SWAP',\n  content: {\n    tokenIn: 'EGLD',\n    amountIn: '1',\n    tokenOut: 'MEX',\n  },\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"pool-creation",children:"Pool Creation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute({\n  action: 'CREATE_POOL',\n  content: {\n    baseTokenID: 'KWAK',\n    quoteTokenID: 'EGLD',\n    baseAmount: '1000000',\n    quoteAmount: '20',\n  },\n});\n"})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Transaction Failures"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Verify wallet has sufficient balance"}),"\n",(0,l.jsx)(n.li,{children:"Check network configuration matches intended network"}),"\n",(0,l.jsx)(n.li,{children:"Ensure correct token identifiers"}),"\n",(0,l.jsx)(n.li,{children:"Verify recipient address format"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Configuration Problems"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Validate private key format"}),"\n",(0,l.jsx)(n.li,{children:"Check network selection is valid"}),"\n",(0,l.jsx)(n.li,{children:"Ensure environment variables are properly set"}),"\n",(0,l.jsx)(n.li,{children:"Verify wallet permissions for token operations"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Token Creation Issues"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Check token name and ticker format"}),"\n",(0,l.jsx)(n.li,{children:"Verify EGLD balance for issuance fee"}),"\n",(0,l.jsx)(n.li,{children:"Ensure unique token identifiers"}),"\n",(0,l.jsx)(n.li,{children:"Monitor transaction status"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Network Connectivity"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Verify network endpoint availability"}),"\n",(0,l.jsx)(n.li,{children:"Check API rate limits"}),"\n",(0,l.jsx)(n.li,{children:"Monitor network status"}),"\n",(0,l.jsx)(n.li,{children:"Ensure proper network selection"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Key Management"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Never expose private keys in code"}),"\n",(0,l.jsx)(n.li,{children:"Use environment variables for sensitive data"}),"\n",(0,l.jsx)(n.li,{children:"Implement key rotation policies"}),"\n",(0,l.jsx)(n.li,{children:"Monitor wallet activity"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Transaction Safety"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Validate all transaction parameters"}),"\n",(0,l.jsx)(n.li,{children:"Implement transaction limits"}),"\n",(0,l.jsx)(n.li,{children:"Use proper denomination handling"}),"\n",(0,l.jsx)(n.li,{children:"Double-check recipient addresses"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Network Security"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use secure network connections"}),"\n",(0,l.jsx)(n.li,{children:"Implement retry mechanisms"}),"\n",(0,l.jsx)(n.li,{children:"Monitor for suspicious activity"}),"\n",(0,l.jsx)(n.li,{children:"Keep dependencies updated"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Implement comprehensive error logging"}),"\n",(0,l.jsx)(n.li,{children:"Handle network timeouts gracefully"}),"\n",(0,l.jsx)(n.li,{children:"Validate all user inputs"}),"\n",(0,l.jsx)(n.li,{children:"Provide clear error messages"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,l.jsx)(n.p,{children:"Run the test suite:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bun test\n"})}),"\n",(0,l.jsx)(n.p,{children:"Watch mode for development:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bun test:watch\n"})}),"\n",(0,l.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"@multiversx/sdk-core: ^13.15.0"}),"\n",(0,l.jsx)(n.li,{children:"bignumber.js: ^9.1.2"}),"\n",(0,l.jsx)(n.li,{children:"tsup: ^8.3.5"}),"\n",(0,l.jsx)(n.li,{children:"vitest: ^2.1.5"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,l.jsxs)(n.p,{children:["Contributions are welcome! Please see the ",(0,l.jsx)(n.a,{href:"https://github.com/elizaOS/eliza/blob/main/CONTRIBUTING.md",children:"CONTRIBUTING.md"})," file for more information."]}),"\n",(0,l.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,l.jsxs)(n.p,{children:["This plugin integrates with the ",(0,l.jsx)(n.a,{href:"https://multiversx.com/",children:"MultiversX blockchain"})," using their official SDK."]}),"\n",(0,l.jsx)(n.p,{children:"Special thanks to:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The MultiversX team for developing the MultiversX blockchain"}),"\n",(0,l.jsx)(n.li,{children:"The Eliza community for their contributions and feedback."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"For more information about MultiversX blockchain capabilities:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://docs.multiversx.com/",children:"MultiversX Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://docs.multiversx.com/developers/getting-started/introduction",children:"MultiversX Developer Portal"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/multiversx/mx-sdk-js",children:"MultiversX GitHub Repository"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,l.jsx)(n.p,{children:"This plugin is part of the Eliza project. See the main project repository for license information."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);