"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[25662],{36635:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"namespaces/v2/interfaces/DetokenizeTextParams","title":"DetokenizeTextParams","description":"@elizaos/core v1.3.0 / v2 / DetokenizeTextParams","source":"@site/api/namespaces/v2/interfaces/DetokenizeTextParams.md","sourceDirName":"namespaces/v2/interfaces","slug":"/namespaces/v2/interfaces/DetokenizeTextParams","permalink":"/api/namespaces/v2/interfaces/DetokenizeTextParams","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"DeriveKeyAttestationData","permalink":"/api/namespaces/v2/interfaces/DeriveKeyAttestationData"},"next":{"title":"DirectoryItem","permalink":"/api/namespaces/v2/interfaces/DirectoryItem"}}');var i=t(31085),r=t(71184);const a={},o="Interface: DetokenizeTextParams",c={},d=[{value:"Properties",id:"properties",level:2},{value:"tokens",id:"tokens",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"modelType",id:"modeltype",level:3},{value:"Defined in",id:"defined-in-1",level:4}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.3.0"})," / ",(0,i.jsx)(n.a,{href:"/api/namespaces/v2/",children:"v2"})," / DetokenizeTextParams"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"interface-detokenizetextparams",children:"Interface: DetokenizeTextParams"})}),"\n",(0,i.jsxs)(n.p,{children:["Parameters for detokenizing text, i.e., converting a sequence of numerical tokens back into a string.\nThis is the reverse operation of tokenization.\nThis structure is used with ",(0,i.jsx)(n.code,{children:"AgentRuntime.useModel"})," when the ",(0,i.jsx)(n.code,{children:"modelType"})," is ",(0,i.jsx)(n.code,{children:"ModelType.TEXT_TOKENIZER_DECODE"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"tokens",children:"tokens"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"tokens"}),": ",(0,i.jsx)(n.code,{children:"number"}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"An array of numerical tokens to be converted back into text."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/types.ts#L1418",children:"packages/core/src/specs/v2/types.ts:1418"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"modeltype",children:"modelType"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"modelType"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The model type used for detokenization, ensuring consistency with the original tokenization."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/zpark/eliza/blob/main/packages/core/src/specs/v2/types.ts#L1420",children:"packages/core/src/specs/v2/types.ts:1420"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(14041);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);