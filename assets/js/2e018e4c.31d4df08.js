"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[10067],{6265:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cli/monorepo","title":"Monorepo Command","description":"Clone the ElizaOS monorepo for development or contribution","source":"@site/docs/cli/monorepo.md","sourceDirName":"cli","slug":"/cli/monorepo","permalink":"/docs/cli/monorepo","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/monorepo.md","tags":[],"version":"current","lastUpdatedBy":"yung algorithm","lastUpdatedAt":1749259658000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Monorepo Command","description":"Clone the ElizaOS monorepo for development or contribution","keywords":["monorepo","setup","clone","git","development","contribution"],"image":"/img/cli.jpg"}}');var s=o(31085),l=o(71184);const r={sidebar_position:10,title:"Monorepo Command",description:"Clone the ElizaOS monorepo for development or contribution",keywords:["monorepo","setup","clone","git","development","contribution"],image:"/img/cli.jpg"},t="Monorepo Command",d={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Custom Branch",id:"custom-branch",level:3},{value:"Custom Directory",id:"custom-directory",level:3},{value:"Development Workflows",id:"development-workflows",level:3},{value:"After Setup",id:"after-setup",level:2},{value:"Development Commands",id:"development-commands",level:3},{value:"Monorepo Structure",id:"monorepo-structure",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Contributors",id:"contributors",level:3},{value:"Advanced Users",id:"advanced-users",level:3},{value:"Plugin Developers",id:"plugin-developers",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Clone Failures",id:"clone-failures",level:3},{value:"Directory Issues",id:"directory-issues",level:3},{value:"Build Failures",id:"build-failures",level:3},{value:"Branch Not Found",id:"branch-not-found",level:3},{value:"Notes",id:"notes",level:2},{value:"Related Commands",id:"related-commands",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"monorepo-command",children:"Monorepo Command"})}),"\n",(0,s.jsx)(n.p,{children:"Clone ElizaOS monorepo from a specific branch, defaults to develop."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"elizaos monorepo [options]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-b, --branch <branch>"})}),(0,s.jsx)(n.td,{children:"Branch to clone"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"develop"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-d, --dir <directory>"})}),(0,s.jsx)(n.td,{children:"Destination directory"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"./eliza"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Checks Destination"}),": Verifies the target directory is empty or doesn't exist"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clones Repository"}),": Downloads the ",(0,s.jsx)(n.code,{children:"elizaOS/eliza"})," repository from GitHub"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Shows Next Steps"}),": Displays instructions for getting started"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone default branch (develop) to default directory (./eliza)\nelizaos monorepo\n\n# Clone with verbose output\nelizaos monorepo --dir ./eliza --branch develop\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-branch",children:"Custom Branch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone main branch\nelizaos monorepo --branch main\n\n# Clone feature branch for testing\nelizaos monorepo --branch feature/new-api\n\n# Clone release branch\nelizaos monorepo --branch v2.1.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-directory",children:"Custom Directory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone to custom directory\nelizaos monorepo --dir my-eliza-dev\n\n# Clone to current directory (must be empty)\nelizaos monorepo --dir .\n\n# Clone to nested path\nelizaos monorepo --dir ./projects/eliza-fork\n"})}),"\n",(0,s.jsx)(n.h3,{id:"development-workflows",children:"Development Workflows"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# For contribution development\nelizaos monorepo --branch main --dir ./eliza-contrib\n\n# For stable development\nelizaos monorepo --branch main --dir ./eliza-stable\n\n# For testing specific features\nelizaos monorepo --branch feature/new-plugin-system\n"})}),"\n",(0,s.jsx)(n.h2,{id:"after-setup",children:"After Setup"}),"\n",(0,s.jsx)(n.p,{children:"Once cloned, follow these steps:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd eliza                           # Navigate to the cloned directory\nbun i && bun run build            # Install dependencies and build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"development-commands",children:"Development Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start development server\nbun run dev\n\n# Run tests\nbun test\n\n# Build all packages\nbun run build\n\n# Start a specific package\ncd packages/client-web\nbun dev\n"})}),"\n",(0,s.jsx)(n.h2,{id:"monorepo-structure",children:"Monorepo Structure"}),"\n",(0,s.jsx)(n.p,{children:"The cloned repository includes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"eliza/\n\u251c\u2500\u2500 packages/\n\u2502   \u251c\u2500\u2500 core/              # Core ElizaOS functionality\n\u2502   \u251c\u2500\u2500 client-web/        # Web interface\n\u2502   \u251c\u2500\u2500 client-discord/    # Discord client\n\u2502   \u251c\u2500\u2500 plugin-*/          # Various plugins\n\u2502   \u2514\u2500\u2500 cli/              # CLI tool source\n\u251c\u2500\u2500 docs/                 # Documentation\n\u251c\u2500\u2500 examples/             # Example projects\n\u2514\u2500\u2500 scripts/              # Build and utility scripts\n"})}),"\n",(0,s.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(n.h3,{id:"contributors",children:"Contributors"}),"\n",(0,s.jsx)(n.p,{children:"Perfect for developers wanting to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Submit pull requests"}),"\n",(0,s.jsx)(n.li,{children:"Develop new plugins"}),"\n",(0,s.jsx)(n.li,{children:"Fix bugs or add features"}),"\n",(0,s.jsx)(n.li,{children:"Understand the codebase"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"advanced-users",children:"Advanced Users"}),"\n",(0,s.jsx)(n.p,{children:"Useful for users who need:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Custom builds"}),"\n",(0,s.jsx)(n.li,{children:"Experimental features"}),"\n",(0,s.jsx)(n.li,{children:"Local plugin development"}),"\n",(0,s.jsx)(n.li,{children:"Integration testing"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"plugin-developers",children:"Plugin Developers"}),"\n",(0,s.jsx)(n.p,{children:"Essential for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Plugin development and testing"}),"\n",(0,s.jsx)(n.li,{children:"Understanding plugin APIs"}),"\n",(0,s.jsx)(n.li,{children:"Contributing to core functionality"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"clone-failures",children:"Clone Failures"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# If git clone fails, check network connection\ngit --version\nping github.com\n\n# For authentication issues\ngit config --global credential.helper store\n"})}),"\n",(0,s.jsx)(n.h3,{id:"directory-issues",children:"Directory Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# If directory is not empty\nls -la ./eliza              # Check contents\nrm -rf ./eliza              # Remove if safe\nelizaos monorepo            # Retry\n\n# For permission issues\nsudo chown -R $USER:$USER ./eliza\n"})}),"\n",(0,s.jsx)(n.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# If dependencies fail to install\ncd eliza\nrm -rf node_modules\nbun install\n\n# If build fails\nbun run clean\nbun install\nbun run build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"branch-not-found",children:"Branch Not Found"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# List available branches\ngit ls-remote --heads https://github.com/elizaOS/eliza\n\n# Use correct branch name\nelizaos monorepo --branch main\n"})}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The destination directory must be empty or non-existent"}),"\n",(0,s.jsxs)(n.li,{children:["Uses the official ",(0,s.jsx)(n.code,{children:"elizaOS/eliza"})," repository from GitHub"]}),"\n",(0,s.jsx)(n.li,{children:"Requires Git to be installed on your system"}),"\n",(0,s.jsx)(n.li,{children:"Internet connection required for cloning"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/cli/create",children:(0,s.jsx)(n.code,{children:"create"})}),": Create a new project or plugin from templates"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/cli/plugins",children:(0,s.jsx)(n.code,{children:"plugins"})}),": Manage plugins in your project"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/cli/dev",children:(0,s.jsx)(n.code,{children:"dev"})}),": Run development server for your projects"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},71184:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>t});var i=o(14041);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);