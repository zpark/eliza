"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[47603],{59538:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"clients/farcaster","title":"ElizaOS Farcaster Client","description":"A plugin for ElizaOS that enables agent integration with the Farcaster social network.","source":"@site/packages/clients/farcaster.md","sourceDirName":"clients","slug":"/clients/farcaster","permalink":"/packages/clients/farcaster","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ElizaOS Home Plugin","permalink":"/packages/clients/eliza-home"},"next":{"title":"Client-GitHub for Eliza Framework","permalink":"/packages/clients/github"}}');var s=i(31085),r=i(71184);const l={},a="ElizaOS Farcaster Client",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Required Settings",id:"required-settings",level:3},{value:"Optional Settings",id:"optional-settings",level:3},{value:"Usage",id:"usage",level:2},{value:"Basic Integration with ElizaOS",id:"basic-integration-with-elizaos",level:3},{value:"Customizing Cast Templates",id:"customizing-cast-templates",level:3},{value:"Development",id:"development",level:2},{value:"Build",id:"build",level:3},{value:"Testing",id:"testing",level:3},{value:"Development Mode",id:"development-mode",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Testing",id:"testing-1",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"elizaos-farcaster-client",children:"ElizaOS Farcaster Client"})}),"\n",(0,s.jsx)(n.p,{children:"A plugin for ElizaOS that enables agent integration with the Farcaster social network."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The ElizaOS Farcaster Client allows AI agents to interact with the Farcaster social network by:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Publishing original casts (posts)"}),"\n",(0,s.jsx)(n.li,{children:"Responding to mentions and replies"}),"\n",(0,s.jsx)(n.li,{children:"Interacting with other users' content"}),"\n",(0,s.jsx)(n.li,{children:"Processing user engagement automatically"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This client leverages the ",(0,s.jsx)(n.a,{href:"https://neynar.com",children:"Neynar API"})," to interact with Farcaster, providing a robust integration between ElizaOS agents and the Farcaster social graph."]}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automated Posting"}),": Schedule and publish regular casts with configurable intervals"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Engagement Monitoring"}),": Track mentions, replies, and interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conversation Threading"}),": Build and maintain conversation context for natural interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dry Run Mode"}),": Test functionality without actually posting to Farcaster"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configurable Settings"}),": Customize behavior via environment variables"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching"}),": Efficient caching of profiles and casts for improved performance"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos-plugins/client-farcaster\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The client requires the following configurations, which can be set via environment variables or ElizaOS runtime settings:"}),"\n",(0,s.jsx)(n.h3,{id:"required-settings",children:"Required Settings"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FARCASTER_NEYNAR_API_KEY"})}),(0,s.jsx)(n.td,{children:"Neynar API key for accessing Farcaster"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FARCASTER_NEYNAR_SIGNER_UUID"})}),(0,s.jsx)(n.td,{children:"Signer UUID for your Farcaster account"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FARCASTER_FID"})}),(0,s.jsx)(n.td,{children:"Your Farcaster FID (identifier)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"optional-settings",children:"Optional Settings"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FARCASTER_DRY_RUN"})}),(0,s.jsx)(n.td,{children:"Run in simulation mode without posting (true/false)"}),(0,s.jsx)(n.td,{children:"false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MAX_CAST_LENGTH"})}),(0,s.jsx)(n.td,{children:"Maximum length of casts"}),(0,s.jsx)(n.td,{children:"320"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FARCASTER_POLL_INTERVAL"})}),(0,s.jsx)(n.td,{children:"Interval for checking mentions (minutes)"}),(0,s.jsx)(n.td,{children:"2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENABLE_POST"})}),(0,s.jsx)(n.td,{children:"Enable automatic posting (true/false)"}),(0,s.jsx)(n.td,{children:"true"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"POST_INTERVAL_MIN"})}),(0,s.jsx)(n.td,{children:"Minimum time between posts (minutes)"}),(0,s.jsx)(n.td,{children:"90"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"POST_INTERVAL_MAX"})}),(0,s.jsx)(n.td,{children:"Maximum time between posts (minutes)"}),(0,s.jsx)(n.td,{children:"180"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENABLE_ACTION_PROCESSING"})}),(0,s.jsx)(n.td,{children:"Enable processing interactions (true/false)"}),(0,s.jsx)(n.td,{children:"false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ACTION_INTERVAL"})}),(0,s.jsx)(n.td,{children:"Interval for processing actions (minutes)"}),(0,s.jsx)(n.td,{children:"5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"POST_IMMEDIATELY"})}),(0,s.jsx)(n.td,{children:"Post immediately on startup (true/false)"}),(0,s.jsx)(n.td,{children:"false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MAX_ACTIONS_PROCESSING"})}),(0,s.jsx)(n.td,{children:"Maximum actions to process in one cycle"}),(0,s.jsx)(n.td,{children:"1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ACTION_TIMELINE_TYPE"})}),(0,s.jsx)(n.td,{children:"Type of timeline to use for actions"}),(0,s.jsx)(n.td,{children:"ForYou"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"basic-integration-with-elizaos",children:"Basic Integration with ElizaOS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { ElizaOS } from '@elizaos/core';\nimport farcasterPlugin from '@elizaos-plugins/client-farcaster';\n\n// Initialize ElizaOS\nconst elizaOs = new ElizaOS({\n  // ElizaOS configuration\n});\n\n// Register the Farcaster plugin\nelizaOs.registerPlugin(farcasterPlugin);\n\n// Start ElizaOS\nelizaOs.start();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"customizing-cast-templates",children:"Customizing Cast Templates"}),"\n",(0,s.jsx)(n.p,{children:"You can customize the templates used for generating casts by providing custom templates in your agent character configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const myCharacter = {\n  name: 'My Agent',\n  bio: 'A helpful AI assistant on Farcaster',\n  templates: {\n    farcasterPostTemplate: `\n      # Custom post template\n      Write a thoughtful post about {{topic}} in the voice of {{agentName}}.\n    `,\n    farcasterMessageHandlerTemplate: `\n      # Custom reply template\n      Respond to {{currentPost}} as {{agentName}} would.\n    `,\n    farcasterShouldRespondTemplate: `\n      # Custom response decision template\n      Determine if {{agentName}} should respond to {{currentPost}}.\n    `,\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.h3,{id:"build",children:"Build"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm test\n"})}),"\n",(0,s.jsx)(n.h3,{id:"development-mode",children:"Development Mode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The client is organized into several core components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FarcasterClient"}),": Base client for interacting with the Farcaster network via Neynar"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FarcasterPostManager"}),": Manages autonomous posting schedule and generation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FarcasterInteractionManager"}),": Handles mentions, replies, and other interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memory Management"}),": Stores conversation context and history"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@neynar/nodejs-sdk",children:"@neynar/nodejs-sdk"}),": Official SDK for Neynar API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@elizaos/core",children:"@elizaos/core"}),": ElizaOS core framework"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-1",children:"Testing"}),"\n",(0,s.jsx)(n.p,{children:"The client includes comprehensive tests for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cast creation and management"}),"\n",(0,s.jsx)(n.li,{children:"Interaction handling"}),"\n",(0,s.jsx)(n.li,{children:"Timeline processing"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Run the tests with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm test\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(14041);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);