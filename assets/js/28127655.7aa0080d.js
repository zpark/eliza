"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[91433],{71184:(e,n,t)=>{t.d(n,{R:()=>A,x:()=>i});var E=t(14041);const a={},_=E.createContext(a);function A(e){const n=E.useContext(_);return E.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:A(e.components),E.createElement(_.Provider,{value:n},e.children)}},92162:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>l,frontMatter:()=>A,metadata:()=>E,toc:()=>o});const E=JSON.parse('{"id":"guides/configuration","title":"\u2699\ufe0f Configuration Guide","description":"This guide covers how to configure Eliza for different use cases and environments. We\'ll walk through all available configuration options and best practices.","source":"@site/versioned_docs/version-0.25.9/guides/configuration.md","sourceDirName":"guides","slug":"/guides/configuration","permalink":"/docs/0.25.9/guides/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/versioned_docs/version-0.25.9/guides/configuration.md","tags":[],"version":"0.25.9","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749856508000,"sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Database Adapters","permalink":"/docs/0.25.9/core/database"},"next":{"title":"Deployment","permalink":"/docs/0.25.9/guides/remote-deployment"}}');var a=t(31085),_=t(71184);const A={sidebar_position:9},i="\u2699\ufe0f Configuration Guide",r={},o=[{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Character Configuration",id:"character-configuration",level:2},{value:"Secrets for Multiple Characters",id:"secrets-for-multiple-characters",level:3},{value:"Custom Actions",id:"custom-actions",level:2},{value:"Adding Custom Actions",id:"adding-custom-actions",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Cloudflare AI Gateway Integration",id:"cloudflare-ai-gateway-integration",level:3},{value:"Logging",id:"logging",level:3},{value:"Performance Settings",id:"performance-settings",level:3},{value:"Environment Variables Reference",id:"environment-variables-reference",level:2},{value:"FAQ",id:"faq",level:2},{value:"How do I configure different model providers?",id:"how-do-i-configure-different-model-providers",level:3},{value:"How do I adjust the temperature setting in my character file?",id:"how-do-i-adjust-the-temperature-setting-in-my-character-file",level:3},{value:"I&#39;m getting an authentication error (&quot;No auth credentials found&quot;). What should I do?",id:"im-getting-an-authentication-error-no-auth-credentials-found-what-should-i-do",level:3},{value:"How do I debug when my agent isn&#39;t responding?",id:"how-do-i-debug-when-my-agent-isnt-responding",level:3},{value:"How do I control my agent&#39;s behavior across platforms?",id:"how-do-i-control-my-agents-behavior-across-platforms",level:3}];function s(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,_.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\ufe0f-configuration-guide",children:"\u2699\ufe0f Configuration Guide"})}),"\n",(0,a.jsx)(n.p,{children:"This guide covers how to configure Eliza for different use cases and environments. We'll walk through all available configuration options and best practices."}),"\n",(0,a.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,a.jsx)(n.p,{children:"The first step is creating your environment configuration file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then edit the ",(0,a.jsx)(n.code,{children:".env"})," file to add your specific configuration values."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"character-configuration",children:"Character Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Character files define your agent's personality and behavior. Create them in the ",(0,a.jsx)(n.code,{children:"characters/"})," directory:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "AgentName",\n  "clients": ["discord", "twitter"],\n  "modelProvider": "openrouter",\n  "settings": {\n    "model": "openai/gpt-4o",\n    "temperature": 0.7,\n    "maxTokens": 2000,\n    "secrets": {\n      "OPENAI_API_KEY": "character-specific-key",\n      "DISCORD_TOKEN": "bot-specific-token"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"secrets-for-multiple-characters",children:"Secrets for Multiple Characters"}),"\n",(0,a.jsxs)(n.p,{children:["If you don't want to have secrets in your character files because you would\nlike to utilize source control for collaborative development on multiple\ncharacters, then you can put all character secrets in ",(0,a.jsx)(n.code,{children:".env"})," by prepending\n",(0,a.jsx)(n.code,{children:"CHARACTER.NAME."})," before the key name and value. For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# C3PO\nCHARACTER.C3PO.DISCORD_APPLICATION_ID=abc\nCHARACTER.C3PO.DISCORD_API_TOKEN=xyz\n\n# DOBBY\nCHARACTER.DOBBY.DISCORD_APPLICATION_ID=123\nCHARACTER.DOBBY.DISCORD_API_TOKEN=369\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"custom-actions",children:"Custom Actions"}),"\n",(0,a.jsx)(n.h3,{id:"adding-custom-actions",children:"Adding Custom Actions"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Create a ",(0,a.jsx)(n.code,{children:"custom_actions"})," directory"]}),"\n",(0,a.jsx)(n.li,{children:"Add your action files there"}),"\n",(0,a.jsxs)(n.li,{children:["Configure in ",(0,a.jsx)(n.code,{children:"elizaConfig.yaml"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"actions:\n  - name: myCustomAction\n    path: ./custom_actions/myAction.ts\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"/docs/core/actions",children:"actions"})," page for more info."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"cloudflare-ai-gateway-integration",children:"Cloudflare AI Gateway Integration"}),"\n",(0,a.jsxs)(n.p,{children:["Eliza supports routing API calls through ",(0,a.jsx)(n.a,{href:"https://developers.cloudflare.com/ai-gateway/",children:"Cloudflare AI Gateway"}),", which provides several benefits:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Detailed analytics and monitoring of message traffic and response times"}),"\n",(0,a.jsx)(n.li,{children:"Cost optimization through request caching and usage tracking across providers"}),"\n",(0,a.jsx)(n.li,{children:"Improved latency through Cloudflare's global network"}),"\n",(0,a.jsx)(n.li,{children:"Comprehensive visibility into message content and token usage"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"When enabled, Eliza will automatically route requests through your Cloudflare AI Gateway endpoint. If the gateway configuration is incomplete or disabled, Eliza will fall back to direct API calls."}),"\n",(0,a.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"DEFAULT_LOG_LEVEL=info  # Options: debug, info, warn, error\nLOG_JSON_FORMAT=false   # Set to true for JSON formatted logs\n"})}),"\n",(0,a.jsx)(n.h3,{id:"performance-settings",children:"Performance Settings"}),"\n",(0,a.jsx)(n.p,{children:"Fine-tune runtime behavior:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const settings = {\n  // Performance\n  MAX_CONCURRENT_REQUESTS: 5,\n  REQUEST_TIMEOUT: 30000,\n\n  // Memory\n  MEMORY_TTL: 3600,\n  MAX_MEMORY_ITEMS: 1000,\n};\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"environment-variables-reference",children:"Environment Variables Reference"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click to expand .env.example file"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Eliza Environment Variables - Compact Reference\n\n## SERVER & DATABASE\nCACHE_STORE=database # Options: database|redis|filesystem\nCACHE_DIR=./data/cache # For filesystem cache\nREDIS_URL= # Redis connection string\nSQLITE_DATA_DIR= # ../pgLite/ or memory://\nSERVER_URL=http://localhost # Base URL\nSERVER_PORT=3000 # Port number\nSUPABASE_URL= # Supabase URL\nSUPABASE_ANON_KEY= # Supabase key\nMONGODB_CONNECTION_STRING= # MongoDB connection\nMONGODB_DATABASE= # Default: elizaAgent\nREMOTE_CHARACTER_URLS= # Comma-separated URLs\nUSE_CHARACTER_STORAGE=false # Store characters in data/character\nDEFAULT_LOG_LEVEL=info # Log level\nLOG_JSON_FORMAT=false # JSON format for logs\n\n## CLIENT INTEGRATIONS\n# BitMind\nBITMIND=true # Enable BitMind\nBITMIND_API_TOKEN= # API token\n\n# Discord\nDISCORD_APPLICATION_ID= # App ID\nDISCORD_API_TOKEN= # Bot token\nDISCORD_VOICE_CHANNEL_ID= # Voice channel\n\n# Devin\nDEVIN_API_TOKEN= # API token\n\n# Gelato\nGELATO_RELAY_API_KEY= # API key\n\n# Farcaster\nFARCASTER_FID= # FID for account\nFARCASTER_NEYNAR_API_KEY= # API key\nFARCASTER_NEYNAR_SIGNER_UUID= # Signer UUID\nFARCASTER_DRY_RUN=false # Run without publishing\nFARCASTER_POLL_INTERVAL=120 # Check interval (sec)\n\n# Telegram\nTELEGRAM_BOT_TOKEN= # Bot token\nTELEGRAM_ACCOUNT_PHONE= # Phone number\nTELEGRAM_ACCOUNT_APP_ID= # App API ID\nTELEGRAM_ACCOUNT_APP_HASH= # App API hash\nTELEGRAM_ACCOUNT_DEVICE_MODEL= # Device model\nTELEGRAM_ACCOUNT_SYSTEM_VERSION= # System version\n\n# Twitter/X\nTWITTER_DRY_RUN=false # Simulate without posting\nTWITTER_API_KEY= # Twitter API v2 key\nTWITTER_API_SECRET_KEY= # Twitter API v2 secret key\nTWITTER_ACCESS_TOKEN= # OAuth access token\nTWITTER_ACCESS_TOKEN_SECRET= # OAuth access token secret\nTWITTER_TARGET_USERS= # Comma-separated list of target users\nTWITTER_DRY_RUN=false # Set to true to simulate actions without posting\nTWITTER_POLL_INTERVAL=120 # Check interval (sec)\nTWITTER_SEARCH_ENABLE=FALSE # Enable timeline search\nTWITTER_TARGET_USERS= # Usernames to interact with\nTWITTER_RETRY_LIMIT= # Max retry attempts\nTWITTER_SPACES_ENABLE=false # Enable Spaces\nENABLE_TWITTER_POST_GENERATION=true # Auto tweet generation\nTWITTER_POST_POST_INTERVAL_MIN= # Min post interval (min), default: 90\nTWITTER_POST_POST_INTERVAL_MAX= # Max post interval (min), default: 180\nPOST_IMMEDIATELY= # Post immediately, default: false\nACTION_INTERVAL= # Action processing interval (min), default: 5\nENABLE_ACTION_PROCESSING=false # Enable action processing\nMAX_ACTIONS_PROCESSING=1 # Max actions per cycle\nACTION_TIMELINE_TYPE=foryou # Timeline type: foryou|following\nTWITTER_APPROVAL_DISCORD_CHANNEL_ID= # Discord channel ID\nTWITTER_APPROVAL_DISCORD_BOT_TOKEN= # Discord bot token\nTWITTER_APPROVAL_ENABLED= # Enable approval, default: false\nTWITTER_APPROVAL_CHECK_INTERVAL=60000 # Check interval (ms)\n\n# WhatsApp\nWHATSAPP_ACCESS_TOKEN= # Access token\nWHATSAPP_PHONE_NUMBER_ID= # Phone number ID\nWHATSAPP_BUSINESS_ACCOUNT_ID= # Business Account ID\nWHATSAPP_WEBHOOK_VERIFY_TOKEN= # Webhook token\nWHATSAPP_API_VERSION=v17.0 # API version\n\n# Alexa\nALEXA_SKILL_ID= # Skill ID\nALEXA_CLIENT_ID= # OAuth2 Client ID\nALEXA_CLIENT_SECRET= # OAuth2 Client Secret\n\n# SimsAI\nSIMSAI_API_KEY= # API key\nSIMSAI_AGENT_ID= # Agent ID\nSIMSAI_USERNAME= # Username\nSIMSAI_DRY_RUN= # Test without API calls\n\n# Direct Client\nEXPRESS_MAX_PAYLOAD= # Max payload, default: 100kb\n\n# Instagram\nINSTAGRAM_DRY_RUN=false # Simulate without posting\nINSTAGRAM_USERNAME= # Username\nINSTAGRAM_PASSWORD= # Password\nINSTAGRAM_APP_ID= # App ID (required)\nINSTAGRAM_APP_SECRET= # App Secret (required)\nINSTAGRAM_BUSINESS_ACCOUNT_ID= # Business Account ID\nINSTAGRAM_POST_INTERVAL_MIN=60 # Min interval (min)\nINSTAGRAM_POST_INTERVAL_MAX=120 # Max interval (min)\nINSTAGRAM_ENABLE_ACTION_PROCESSING=false # Enable actions\nINSTAGRAM_ACTION_INTERVAL=5 # Action interval (min)\nINSTAGRAM_MAX_ACTIONS=1 # Max actions per cycle\n\n## MODEL PROVIDERS\n# OpenAI\nOPENAI_API_KEY= # API key (sk-*)\nOPENAI_API_URL= # API endpoint, default: https://api.openai.com/v1\nSMALL_OPENAI_MODEL= # Default: gpt-4o-mini\nMEDIUM_OPENAI_MODEL= # Default: gpt-4o\nLARGE_OPENAI_MODEL= # Default: gpt-4o\nEMBEDDING_OPENAI_MODEL= # Default: text-embedding-3-small\nIMAGE_OPENAI_MODEL= # Default: dall-e-3\nUSE_OPENAI_EMBEDDING= # TRUE for OpenAI embeddings\nENABLE_OPEN_AI_COMMUNITY_PLUGIN=false # Enable community plugin\nOPENAI_DEFAULT_MODEL= # Default model\nOPENAI_MAX_TOKENS= # Max tokens\nOPENAI_TEMPERATURE= # Temperature\n\n# Atoma SDK\nATOMASDK_BEARER_AUTH= # Bearer token\nATOMA_API_URL= # Default: https://api.atoma.network/v1\nSMALL_ATOMA_MODEL= # Default: meta-llama/Llama-3.3-70B-Instruct\nMEDIUM_ATOMA_MODEL= # Default: meta-llama/Llama-3.3-70B-Instruct\nLARGE_ATOMA_MODEL= # Default: meta-llama/Llama-3.3-70B-Instruct\n\n# Eternal AI\nETERNALAI_URL= # Service URL\nETERNALAI_MODEL= # Default: NousResearch/Hermes-3-Llama-3.1-70B-FP8\nETERNALAI_CHAIN_ID=8453 # Default: 8453\nETERNALAI_RPC_URL= # RPC URL\nETERNALAI_AGENT_CONTRACT_ADDRESS= # Contract address\nETERNALAI_AGENT_ID= # Agent ID\nETERNALAI_API_KEY= # API key\nETERNALAI_LOG=false # Enable logging\n\n# Hyperbolic\nHYPERBOLIC_API_KEY= # API key\nHYPERBOLIC_MODEL= # Model name\nIMAGE_HYPERBOLIC_MODEL= # Default: FLUX.1-dev\nSMALL_HYPERBOLIC_MODEL= # Default: meta-llama/Llama-3.2-3B-Instruct\nMEDIUM_HYPERBOLIC_MODEL= # Default: meta-llama/Meta-Llama-3.1-70B-Instruct\nLARGE_HYPERBOLIC_MODEL= # Default: meta-llama/Meta-Llama-3.1-405-Instruct\nHYPERBOLIC_ENV=production # Environment\nHYPERBOLIC_GRANULAR_LOG=true # Granular logging\nHYPERBOLIC_SPASH=true # Show splash\nHYPERBOLIC_LOG_LEVEL=debug # Log level\n\n# Infera\nINFERA_API_KEY= # API key\nINFERA_MODEL= # Default: llama3.2:latest\nINFERA_SERVER_URL= # Default: https://api.infera.org/\nSMALL_INFERA_MODEL= # Recommended: llama3.2:latest\nMEDIUM_INFERA_MODEL= # Recommended: mistral-nemo:latest\nLARGE_INFERA_MODEL= # Recommended: mistral-small:latest\n\n# Venice\nVENICE_API_KEY= # API key\nSMALL_VENICE_MODEL= # Default: llama-3.3-70b\nMEDIUM_VENICE_MODEL= # Default: llama-3.3-70b\nLARGE_VENICE_MODEL= # Default: llama-3.1-405b\nIMAGE_VENICE_MODEL= # Default: fluently-xl\n\n# Nineteen.ai\nNINETEEN_AI_API_KEY= # API key\nSMALL_NINETEEN_AI_MODEL= # Default: unsloth/Llama-3.2-3B-Instruct\nMEDIUM_NINETEEN_AI_MODEL= # Default: unsloth/Meta-Llama-3.1-8B-Instruct\nLARGE_NINETEEN_AI_MODEL= # Default: hugging-quants/Meta-Llama-3.1-70B-Instruct-AWQ-INT4\nIMAGE_NINETEEN_AI_MODE= # Default: dataautogpt3/ProteusV0.4-Lightning\n\n# Akash Chat API\nAKASH_CHAT_API_KEY= # API key\nSMALL_AKASH_CHAT_API_MODEL= # Default: Meta-Llama-3-2-3B-Instruct\nMEDIUM_AKASH_CHAT_API_MODEL= # Default: Meta-Llama-3-3-70B-Instruct\nLARGE_AKASH_CHAT_API_MODEL= # Default: Meta-Llama-3-1-405B-Instruct-FP8\n\n# Livepeer\nLIVEPEER_GATEWAY_URL=https://dream-gateway.livepeer.cloud # Gateway URL\nIMAGE_LIVEPEER_MODEL= # Default: ByteDance/SDXL-Lightning\nSMALL_LIVEPEER_MODEL= # Default: meta-llama/Meta-Llama-3.1-8B-Instruct\nMEDIUM_LIVEPEER_MODEL= # Default: meta-llama/Meta-Llama-3.1-8B-Instruct\nLARGE_LIVEPEER_MODEL= # Default: meta-llama/Meta-Llama-3.1-8B-Instruct\n\n# Speech & Transcription\nELEVENLABS_XI_API_KEY= # ElevenLabs API key\nELEVENLABS_MODEL_ID=eleven_multilingual_v2 # Model ID\nELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM # Voice ID\nELEVENLABS_VOICE_STABILITY=0.5 # Stability\nELEVENLABS_VOICE_SIMILARITY_BOOST=0.9 # Similarity boost\nELEVENLABS_VOICE_STYLE=0.66 # Style value\nELEVENLABS_VOICE_USE_SPEAKER_BOOST=false # Speaker boost\nELEVENLABS_OPTIMIZE_STREAMING_LATENCY=4 # Latency level\nELEVENLABS_OUTPUT_FORMAT=pcm_16000 # Output format\nTRANSCRIPTION_PROVIDER= # Default: local, options: openai|deepgram|local\nDEEPGRAM_API_KEY= # Deepgram API key\n\n# OpenRouter\nOPENROUTER_API_KEY= # API key\nOPENROUTER_MODEL= # Default: uses hermes 70b/405b\nSMALL_OPENROUTER_MODEL= # Small model\nMEDIUM_OPENROUTER_MODEL= # Medium model\nLARGE_OPENROUTER_MODEL= # Large model\n\n# REDPILL\nREDPILL_API_KEY= # API key\nREDPILL_MODEL= # Model name\nSMALL_REDPILL_MODEL= # Default: gpt-4o-mini\nMEDIUM_REDPILL_MODEL= # Default: gpt-4o\nLARGE_REDPILL_MODEL= # Default: gpt-4o\n\n# Grok\nGROK_API_KEY= # API key\nSMALL_GROK_MODEL= # Default: grok-2-1212\nMEDIUM_GROK_MODEL= # Default: grok-2-1212\nLARGE_GROK_MODEL= # Default: grok-2-1212\nEMBEDDING_GROK_MODEL= # Default: grok-2-1212\n\n# Ollama\nOLLAMA_SERVER_URL= # Default: localhost:11434\nOLLAMA_MODEL= # Model name\nUSE_OLLAMA_EMBEDDING= # TRUE for Ollama embeddings\nOLLAMA_EMBEDDING_MODEL= # Default: mxbai-embed-large\nSMALL_OLLAMA_MODEL= # Default: llama3.2\nMEDIUM_OLLAMA_MODEL= # Default: hermes3\nLARGE_OLLAMA_MODEL= # Default: hermes3:70b\n\n# Google\nGOOGLE_MODEL= # Model name\nSMALL_GOOGLE_MODEL= # Default: gemini-1.5-flash-latest\nMEDIUM_GOOGLE_MODEL= # Default: gemini-1.5-flash-latest\nLARGE_GOOGLE_MODEL= # Default: gemini-1.5-pro-latest\nEMBEDDING_GOOGLE_MODEL= # Default: text-embedding-004\nGOOGLE_GENERATIVE_AI_API_KEY= # Gemini API key\n\n# Mistral\nMISTRAL_MODEL= # Model name\nSMALL_MISTRAL_MODEL= # Default: mistral-small-latest\nMEDIUM_MISTRAL_MODEL= # Default: mistral-large-latest\nLARGE_MISTRAL_MODEL= # Default: mistral-large-latest\n\n# Groq\nGROQ_API_KEY= # API key (gsk_*)\nSMALL_GROQ_MODEL= # Default: llama-3.1-8b-instant\nMEDIUM_GROQ_MODEL= # Default: llama-3.3-70b-versatile\nLARGE_GROQ_MODEL= # Default: llama-3.2-90b-vision-preview\nEMBEDDING_GROQ_MODEL= # Default: llama-3.1-8b-instant\n\n# LlamaLocal\nLLAMALOCAL_PATH= # Default: current directory\n\n# NanoGPT\nSMALL_NANOGPT_MODEL= # Default: gpt-4o-mini\nMEDIUM_NANOGPT_MODEL= # Default: gpt-4o\nLARGE_NANOGPT_MODEL= # Default: gpt-4o\nNANOGPT_API_KEY= # API key\n\n# Anthropic\nANTHROPIC_API_KEY= # API key\nANTHROPIC_API_URL= # API URL\nSMALL_ANTHROPIC_MODEL= # Default: claude-3-haiku-20240307\nMEDIUM_ANTHROPIC_MODEL= # Default: claude-3-5-sonnet-20241022\nLARGE_ANTHROPIC_MODEL= # Default: claude-3-5-sonnet-20241022\n\n# Heurist\nHEURIST_API_KEY= # API key\nSMALL_HEURIST_MODEL= # Default: meta-llama/llama-3-70b-instruct\nMEDIUM_HEURIST_MODEL= # Default: meta-llama/llama-3-70b-instruct\nLARGE_HEURIST_MODEL= # Default: meta-llama/llama-3.3-70b-instruct\nHEURIST_IMAGE_MODEL= # Default: FLUX.1-dev\nHEURIST_EMBEDDING_MODEL= # Default: BAAI/bge-large-en-v1.5\nUSE_HEURIST_EMBEDDING= # TRUE for Heurist embeddings\n\n# Gaianet\nGAIANET_MODEL= # Model name\nGAIANET_SERVER_URL= # Server URL\nSMALL_GAIANET_MODEL= # Default: llama3b\nSMALL_GAIANET_SERVER_URL= # Default: https://llama3b.gaia.domains/v1\nMEDIUM_GAIANET_MODEL= # Default: llama\nMEDIUM_GAIANET_SERVER_URL= # Default: https://llama8b.gaia.domains/v1\nLARGE_GAIANET_MODEL= # Default: qwen72b\nLARGE_GAIANET_SERVER_URL= # Default: https://qwen72b.gaia.domains/v1\nGAIANET_EMBEDDING_MODEL= # Embedding model\nUSE_GAIANET_EMBEDDING= # TRUE for Gaianet embeddings\n\n# Volcengine\nVOLENGINE_API_URL= # Default: https://open.volcengineapi.com/api/v3/\nVOLENGINE_MODEL= # Model name\nSMALL_VOLENGINE_MODEL= # Default: doubao-lite-128k\nMEDIUM_VOLENGINE_MODEL= # Default: doubao-pro-128k\nLARGE_VOLENGINE_MODEL= # Default: doubao-pro-256k\nVOLENGINE_EMBEDDING_MODEL= # Default: doubao-embedding\n\n# DeepSeek\nDEEPSEEK_API_KEY= # API key\nDEEPSEEK_API_URL= # Default: https://api.deepseek.com\nSMALL_DEEPSEEK_MODEL= # Default: deepseek-chat\nMEDIUM_DEEPSEEK_MODEL= # Default: deepseek-chat\nLARGE_DEEPSEEK_MODEL= # Default: deepseek-chat\n\n# fal.ai\nFAL_API_KEY= # API key\nFAL_AI_LORA_PATH= # LoRA models path\n\n# LetzAI\nLETZAI_API_KEY= # API key\nLETZAI_MODELS= # Models list (e.g., @modelname1, @modelname2)\n\n# Galadriel\nGALADRIEL_API_KEY= # API key (gal-*)\nSMALL_GALADRIEL_MODEL= # Default: gpt-4o-mini\nMEDIUM_GALADRIEL_MODEL= # Default: gpt-4o\nLARGE_GALADRIEL_MODEL= # Default: gpt-4o\nGALADRIEL_FINE_TUNE_API_KEY= # OpenAI key for fine-tuned models\n\n# LM Studio\nLMSTUDIO_SERVER_URL= # Default: http://localhost:1234/v1\nLMSTUDIO_MODEL= # Model name\nSMALL_LMSTUDIO_MODEL= # Default: hermes-3-llama-3.1-8b\nMEDIUM_LMSTUDIO_MODEL= # Default: hermes-3-llama-3.1-8b\nLARGE_LMSTUDIO_MODEL= # Default: hermes-3-llama-3.1-8b\n\n# Secret AI\nSECRET_AI_API_KEY= # API key\nSECRET_AI_URL= # Default: https://ai1.scrtlabs.com:21434\nSMALL_SECRET_AI_MODEL= # Default: deepseek-r1:70b\nMEDIUM_SECRET_AI_MODEL= # Default: deepseek-r1:70b\nLARGE_SECRET_AI_MODEL= # Default: deepseek-r1:70b\n\n# NEAR AI\nNEARAI_API_URL= # Default: https://api.near.ai/v1\nNEARAI_API_KEY= # API key\nNEARAI_MODEL= # Model name\nSMALL_NEARAI_MODEL= # Default: fireworks::accounts/fireworks/models/llama-v3p2-3b-instruct\nMEDIUM_NEARAI_MODEL= # Default: fireworks::accounts/fireworks/models/llama-v3p1-70b-instruct\nLARGE_NEARAI_MODEL= # Default: fireworks::accounts/fireworks/models/llama-v3p1-405b-instruct\nIMAGE_NEARAI_MODEL= # Default: fireworks::accounts/fireworks/models/playground-v2-5-1024px-aesthetic\n\n# Other API Keys\nALI_BAILIAN_API_KEY= # Ali Bailian API key\nTOGETHER_API_KEY= # Together API key\n\n## CRYPTO PLUGINS\n# Market Data APIs\nCOINMARKETCAP_API_KEY= # CoinMarketCap API key\nZERION_API_KEY= # Zerion API key\nCOINGECKO_API_KEY= # CoinGecko API key (free)\nCOINGECKO_PRO_API_KEY= # CoinGecko Pro API key\nMORALIS_API_KEY= # Moralis API key\nCHAINBASE_API_KEY= # Chainbase API key (demo for free tier)\nBIRDEYE_API_KEY= # Birdeye API key\n\n# EVM Chains\nEVM_PRIVATE_KEY= # Private key (with 0x prefix)\nEVM_PROVIDER_URL= # RPC provider URL\nALCHEMY_HTTP_TRANSPORT_URL= # Alchemy HTTP URL\nZERO_EX_API_KEY= # 0x API key\n\n# Zilliqa\nZILLIQA_PRIVATE_KEY= # Private key\nZILLIQA_PROVIDER_URL= # Provider URL\n\n# Avalanche\nAVALANCHE_PRIVATE_KEY= # Private key\nAVALANCHE_PUBLIC_KEY= # Public key\n\n# Arthera\nARTHERA_PRIVATE_KEY= # Private key\n\n# Solana\nSOLANA_PRIVATE_KEY= # Private key\nSOLANA_PUBLIC_KEY= # Public key\nSOLANA_CLUSTER= # Options: devnet|testnet|mainnet-beta, default: devnet\nSOLANA_ADMIN_PRIVATE_KEY= # Admin private key for NFT verification\nSOLANA_ADMIN_PUBLIC_KEY= # Admin public key for NFT verification\nSOLANA_VERIFY_TOKEN= # Verification API token\nSOL_ADDRESS=So11111111111111111111111111111111111111112 # SOL token address\nSLIPPAGE=1 # Slippage percentage\nBASE_MINT=So11111111111111111111111111111111111111112 # Base token address\nSOLANA_RPC_URL=https://api.mainnet-beta.solana.com # RPC URL\nHELIUS_API_KEY= # Helius API key\n\n# Injective\nINJECTIVE_PRIVATE_KEY= # Private key\nINJECTIVE_PUBLIC_KEY= # Public key\nINJECTIVE_NETWORK= # Network setting\n\n# Legacy Wallet (deprecated)\nWALLET_PRIVATE_KEY= # Private key\nWALLET_PUBLIC_KEY= # Public key\n\n# Abstract\nABSTRACT_ADDRESS= # Address\nABSTRACT_PRIVATE_KEY= # Private key\nABSTRACT_RPC_URL=https://api.testnet.abs.xyz # RPC URL\n\n# Starknet\nSTARKNET_ADDRESS= # Address\nSTARKNET_PRIVATE_KEY= # Private key\nSTARKNET_RPC_URL=https://rpc.starknet-testnet.lava.build # RPC URL\n\n# Lens Network\nLENS_ADDRESS= # Address\nLENS_PRIVATE_KEY= # Private key\n\n# Viction\nVICTION_ADDRESS= # Address\nVICTION_PRIVATE_KEY= # Private key\nVICTION_RPC_URL= # RPC URL\n\n# Form Chain\nFORM_PRIVATE_KEY= # Character account private key\nFORM_TESTNET=true # true=Testnet, false=Mainnet\n\n# Coinbase\nCOINBASE_COMMERCE_KEY= # Commerce key\nCOINBASE_API_KEY= # API key\nCOINBASE_PRIVATE_KEY= # Private key\nCOINBASE_GENERATED_WALLET_ID= # Generated wallet ID\nCOINBASE_GENERATED_WALLET_HEX_SEED= # Wallet hex seed\nCOINBASE_NOTIFICATION_URI= # Webhook URI\n\n# Coinbase AgentKit\nCDP_API_KEY_NAME= # API key name\nCDP_API_KEY_PRIVATE_KEY= # Private key\nCDP_AGENT_KIT_NETWORK=base-sepolia # Default: base-sepolia\n\n# Charity\nIS_CHARITABLE=false # Enable charity donations\nCHARITY_ADDRESS_BASE= # Base network address\nCHARITY_ADDRESS_SOL= # Solana address\nCHARITY_ADDRESS_ETH= # Ethereum address\nCHARITY_ADDRESS_ARB= # Arbitrum address\nCHARITY_ADDRESS_POL= # Polygon address\n\n# Thirdweb\nTHIRDWEB_SECRET_KEY= # Secret key\n\n# Conflux\nCONFLUX_CORE_PRIVATE_KEY= # Core private key\nCONFLUX_CORE_SPACE_RPC_URL= # Core RPC URL\nCONFLUX_ESPACE_PRIVATE_KEY= # eSpace private key\nCONFLUX_ESPACE_RPC_URL= # eSpace RPC URL\nCONFLUX_MEME_CONTRACT_ADDRESS= # Meme contract address\n\n# Mind Network\nMIND_HOT_WALLET_PRIVATE_KEY= # Hot wallet private key\nMIND_COLD_WALLET_ADDRESS= # Cold wallet address\n\n# ZeroG\nZEROG_INDEXER_RPC= # Indexer RPC\nZEROG_EVM_RPC= # EVM RPC\nZEROG_PRIVATE_KEY= # Private key\nZEROG_FLOW_ADDRESS= # Flow address\n\n# IQ6900\nIQ_WALLET_ADDRESS= # Wallet address\nIQSOlRPC= # Solana RPC\n\n# Squid Router\nSQUID_SDK_URL=https://apiplus.squidrouter.com # Default SDK URL\nSQUID_INTEGRATOR_ID= # Integrator ID\nSQUID_EVM_ADDRESS= # EVM address\nSQUID_EVM_PRIVATE_KEY= # EVM private key\nSQUID_API_THROTTLE_INTERVAL=1000 # Throttle interval (ms)\n\n# TEE Configuration\nTEE_MODE=OFF # Options: LOCAL|DOCKER|PRODUCTION|OFF\nWALLET_SECRET_SALT= # Salt for wallet secrets\nTEE_LOG_DB_PATH= # Default: ./data/tee_log.sqlite\nVLOG= # Enable TEE Verifiable Log if "true"\nENABLE_TEE_LOG=false # Enable TEE logging (TEE mode only)\nTEE_MARLIN= # Set "yes" to enable Marlin plugin\nTEE_MARLIN_ATTESTATION_ENDPOINT= # Default: http://127.0.0.1:1350\n\n# Flow Blockchain\nFLOW_ADDRESS= # Flow address\nFLOW_PRIVATE_KEY= # Private key for SHA3-256 + P256 ECDSA\nFLOW_NETWORK= # Default: mainnet\nFLOW_ENDPOINT_URL= # Default: https://mainnet.onflow.org\n\n# Internet Computer Protocol\nINTERNET_COMPUTER_PRIVATE_KEY= # ICP private key\nINTERNET_COMPUTER_ADDRESS= # ICP address\n\n# Cloudflare AI\nCLOUDFLARE_GW_ENABLED= # Enable Cloudflare AI Gateway\nCLOUDFLARE_AI_ACCOUNT_ID= # Account ID\nCLOUDFLARE_AI_GATEWAY_ID= # Gateway ID\n\n# Aptos\nAPTOS_PRIVATE_KEY= # Private key\nAPTOS_NETWORK= # Options: mainnet|testnet\n\n# MultiversX\nMVX_PRIVATE_KEY= # Private key\nMVX_NETWORK= # Options: mainnet|devnet|testnet\nACCESS_TOKEN_MANAGEMENT_TO=everyone # Limit token management\n\n# NEAR\nNEAR_WALLET_SECRET_KEY= # Secret key\nNEAR_WALLET_PUBLIC_KEY= # Public key\nNEAR_ADDRESS= # Address\nNEAR_SLIPPAGE=1 # Slippage percentage\nNEAR_RPC_URL=https://near-testnet.lava.build # RPC URL\nNEAR_NETWORK=testnet # Options: testnet|mainnet\n\n# ZKsync Era\nZKSYNC_ADDRESS= # Address\nZKSYNC_PRIVATE_KEY= # Private key\n\n# HoldStation\nHOLDSTATION_PRIVATE_KEY= # Private key\n\n# Avail DA\nAVAIL_ADDRESS= # Address\nAVAIL_SEED= # Seed\nAVAIL_APP_ID=0 # App ID\nAVAIL_RPC_URL=wss://avail-turing.public.blastapi.io/ # Default RPC URL\n\n# TON\nTON_PRIVATE_KEY= # Mnemonic joined with empty string\nTON_RPC_URL= # RPC URL\nTON_RPC_API_KEY= # RPC API key\nTON_NFT_IMAGES_FOLDER= # NFT images folder\nTON_NFT_METADATA_FOLDER= # NFT metadata folder\nPINATA_API_KEY= # Pinata API key\nPINATA_API_SECRET= # Pinata API secret\nPINATA_JWT= # Pinata JWT\n\n# Sui\nSUI_PRIVATE_KEY= # Private key/mnemonic\nSUI_NETWORK= # Options: mainnet|testnet|devnet|localnet\n\n# Mina\nMINA_PRIVATE_KEY= # Mnemonic seed phrase\nMINA_NETWORK=devnet # Options: mainnet|testnet|devnet|localnet\n\n# Story\nSTORY_PRIVATE_KEY= # Private key\nSTORY_API_BASE_URL= # API base URL\nSTORY_API_KEY= # API key\n\n# Cosmos\nCOSMOS_RECOVERY_PHRASE= # 12-word recovery phrase\nCOSMOS_AVAILABLE_CHAINS= # Chain list (comma-separated)\n\n# Cronos zkEVM\nCRONOSZKEVM_ADDRESS= # Address\nCRONOSZKEVM_PRIVATE_KEY= # Private key\n\n# Fuel Ecosystem\nFUEL_WALLET_PRIVATE_KEY= # Private key\n\n# Spheron\nSPHERON_PRIVATE_KEY= # Private key\nSPHERON_PROVIDER_PROXY_URL= # Provider proxy URL\nSPHERON_WALLET_ADDRESS= # Wallet address\n\n# Stargaze\nSTARGAZE_ENDPOINT= # GraphQL endpoint\n\n# GenLayer\nGENLAYER_PRIVATE_KEY= # Private key (0x format)\n\n# BNB Chain\nBNB_PRIVATE_KEY= # Private key\nBNB_PUBLIC_KEY= # Public key\nBSC_PROVIDER_URL= # BNB Smart Chain RPC URL\nOPBNB_PROVIDER_URL= # OPBNB RPC URL\n\n# Allora\nALLORA_API_KEY= # API key (UP-* format)\nALLORA_CHAIN_SLUG= # Options: mainnet|testnet, default: testnet\n\n# B2 Network\nB2_PRIVATE_KEY= # Private key\n\n# Opacity zkTLS\nOPACITY_TEAM_ID=f309ac8ae8a9a14a7e62cd1a521b1c5f # Team ID\nOPACITY_CLOUDFLARE_NAME=eigen-test # Cloudflare name\nOPACITY_PROVER_URL=https://opacity-ai-zktls-demo.vercel.app # Prover URL\n\n# SEI Network\nSEI_PRIVATE_KEY= # Private key\nSEI_NETWORK= # Options: mainnet|testnet|devnet\nSEI_RPC_URL= # Custom RPC URL\n\n# Omniflix\nOMNIFLIX_API_URL= # https://rest.omniflix.network\nOMNIFLIX_MNEMONIC= # 12/24-word mnemonic\nOMNIFLIX_RPC_ENDPOINT= # https://rpc.omniflix.network\nOMNIFLIX_PRIVATE_KEY= # Private key\n\n# Hyperliquid\nHYPERLIQUID_PRIVATE_KEY= # Private key\nHYPERLIQUID_TESTNET= # true/false, default: false\n\n# Lit Protocol\nFUNDING_PRIVATE_KEY= # Funding private key\nEVM_RPC_URL= # RPC URL\n\n# EthStorage DA\nETHSTORAGE_PRIVATE_KEY= # Private key\nETHSTORAGE_ADDRESS=0x64003adbdf3014f7E38FC6BE752EB047b95da89A # Address\nETHSTORAGE_RPC_URL=https://rpc.beta.testnet.l2.quarkchain.io:8545 # RPC URL\n\n# DCAP\nDCAP_EVM_PRIVATE_KEY= # Private key\nDCAP_MODE= # Options: OFF|PLUGIN-SGX|PLUGIN-TEE|MOCK\n\n# QuickIntel\nQUICKINTEL_API_KEY= # Token security analysis API key\n\n# News API\nNEWS_API_KEY= # From https://newsapi.org/\n\n# BTCFUN\nBTCFUN_API_URL= # Default: https://api-testnet-new.btc.fun\nBTC_PRIVATE_KEY_WIF= # BTC private key in WIF format\nBTC_ADDRESS= # BTC address\nBTC_MINT_CAP=10000 # Maximum mint amount\nBTC_MINT_DEADLINE=864000 # Deadline in seconds\nBTC_FUNDRAISING_CAP=100 # Maximum fundraising amount\n\n# Trikon\nTRIKON_WALLET_ADDRESS= # Valid 64-char hex with 0x prefix\nTRIKON_INITIAL_BALANCE= # Optional, default: 0\n\n# Arbitrage\nARBITRAGE_ETHEREUM_WS_URL= # Ethereum WebSocket URL\nARBITRAGE_EVM_PROVIDER_URL= # Ethereum RPC URL\nARBITRAGE_EVM_PRIVATE_KEY= # Private key for transactions\nFLASHBOTS_RELAY_SIGNING_KEY= # Flashbots signing key\nBUNDLE_EXECUTOR_ADDRESS= # Bundle executor contract address\n\n# DESK Exchange\nDESK_EXCHANGE_PRIVATE_KEY= # Private key\nDESK_EXCHANGE_NETWORK= # mainnet or testnet\n\n# Compass\nCOMPASS_WALLET_PRIVATE_KEY= # Private key\nCOMPASS_ARBITRUM_RPC_URL= # Arbitrum RPC URL\nCOMPASS_ETHEREUM_RPC_URL= # Ethereum RPC URL\nCOMPASS_BASE_RPC_URL= # Base RPC URL\n\n# d.a.t.a\nDATA_API_KEY= # API key\nDATA_AUTH_TOKEN= # Auth token\n\n# NKN\nNKN_CLIENT_PRIVATE_KEY= # Required client private key\nNKN_CLIENT_ID= # Optional client ID\n\n# Router Nitro EVM\nROUTER_NITRO_EVM_ADDRESS= # Address\nROUTER_NITRO_EVM_PRIVATE_KEY= # Private key\n\n# OriginTrail DKG\nDKG_ENVIRONMENT= # Options: development|testnet|mainnet\nDKG_HOSTNAME= # Hostname\nDKG_PORT=8900 # Port\nDKG_PUBLIC_KEY= # Public key\nDKG_PRIVATE_KEY= # Private key\nDKG_BLOCKCHAIN_NAME= # Chain configs\n\n# Initia\nINITIA_PRIVATE_KEY= # Wallet private key\nINITIA_NODE_URL= # Node URL, default: testnet\nINITIA_CHAIN_ID=initia-test # Chain ID, default: testnet\n\n# NVIDIA\nNVIDIA_NIM_ENV=production # Environment\nNVIDIA_NIM_SPASH=false # Show splash\nNVIDIA_NIM_API_KEY= # NIM API key\nNVIDIA_NGC_API_KEY= # NGC API key\nNVIDIA_NIM_MAX_RETRIES=3 # Max retries\nNVIDIA_NIM_RETRY_DELAY=1000 # Retry delay (ms)\nNVIDIA_NIM_TIMEOUT=5000 # Timeout (ms)\nNVIDIA_GRANULAR_LOG=true # Granular logging\nNVIDIA_LOG_LEVEL=debug # Log level\nNVIDIA_OFFTOPIC_SYSTEM= # Off-topic system\nNVIDIA_OFFTOPIC_USER= # Off-topic user\nNVIDIA_NIM_BASE_VISION_URL=https://ai.api.nvidia.com/v1/vlm # Vision URL\nNVIDIA_COSMOS_MODEL=nvidia/cosmos-nemotron-34b # Model name\nNVIDIA_COSMOS_INVOKE_URL=https://ai.api.nvidia.com/v1/vlm/nvidia/cosmos-nemotron-34b # Invoke URL\nNVIDIA_COSMOS_ASSET_URL=https://api.nvcf.nvidia.com/v2/nvcf/assets # Asset URL\nNVIDIA_COSMOS_MAX_TOKENS=1000 # Max tokens\n\n# Email\nEMAIL_OUTGOING_SERVICE=smtp # Options: smtp|gmail\nEMAIL_OUTGOING_HOST=smtp.example.com # SMTP host\nEMAIL_OUTGOING_PORT=465 # Default: 465 (secure), 587 (TLS)\nEMAIL_OUTGOING_USER= # Username\nEMAIL_OUTGOING_PASS= # Password/app password\nEMAIL_INCOMING_SERVICE=imap # Service type\nEMAIL_INCOMING_HOST=imap.example.com # IMAP host\nEMAIL_INCOMING_PORT=993 # Default port for secure IMAP\nEMAIL_INCOMING_USER= # Username\nEMAIL_INCOMING_PASS= # Password\n\n# Email Automation\nRESEND_API_KEY= # Resend API key\nDEFAULT_TO_EMAIL= # Default recipient\nDEFAULT_FROM_EMAIL= # Default sender\nEMAIL_AUTOMATION_ENABLED=false # Enable AI detection\nEMAIL_EVALUATION_PROMPT= # Custom detection criteria\n\n# ANKR\nANKR_ENV=production # Environment\nANKR_WALLET= # Wallet\nANKR_MAX_RETRIES=3 # Max retries\nANKR_RETRY_DELAY=1000 # Retry delay (ms)\nANKR_TIMEOUT=5000 # Timeout (ms)\nANKR_GRANULAR_LOG=true # Granular logging\nANKR_LOG_LEVEL=debug # Log level\nANKR_RUNTIME_CHECK_MODE=false # Check mode\nANKR_SPASH=true # Show splash\n\n# Quai Network\nQUAI_PRIVATE_KEY= # Private key\nQUAI_RPC_URL=https://rpc.quai.network # RPC URL\n\n# Tokenizer\nTOKENIZER_MODEL= # Tokenizer model\nTOKENIZER_TYPE= # Options: tiktoken|auto, default: tiktoken\n\n# AWS Services\nAWS_ACCESS_KEY_ID= # Access key ID\nAWS_SECRET_ACCESS_KEY= # Secret access key\nAWS_REGION= # AWS region\nAWS_S3_BUCKET= # S3 bucket name\nAWS_S3_UPLOAD_PATH= # S3 upload path\nAWS_S3_ENDPOINT= # S3 endpoint\nAWS_S3_SSL_ENABLED= # Enable SSL\nAWS_S3_FORCE_PATH_STYLE= # Force path style\n\n# Deva\nDEVA_API_KEY= # API key from deva.me/settings/apps\nDEVA_API_BASE_URL=https://api.deva.me # Default URL\n\n# Verifiable Inference\nVERIFIABLE_INFERENCE_ENABLED=false # Enable verification\nVERIFIABLE_INFERENCE_PROVIDER=opacity # Provider option\n\n# Qdrant\nQDRANT_URL= # Qdrant instance URL\nQDRANT_KEY= # API key\nQDRANT_PORT=443 # Port (443 cloud, 6333 local)\nQDRANT_VECTOR_SIZE=1536 # Vector size\n\n# Autonome\nAUTONOME_JWT_TOKEN= # JWT token\nAUTONOME_RPC=https://wizard-bff-rpc.alt.technology/v1/bff/aaa/apps # RPC URL\n\n# Akash Network\nAKASH_ENV=mainnet # Environment\nAKASH_NET=https://raw.githubusercontent.com/ovrclk/net/master/mainnet # Network\nRPC_ENDPOINT=https://rpc.akashnet.net:443 # RPC endpoint\nAKASH_GAS_PRICES=0.025uakt # Gas prices\nAKASH_GAS_ADJUSTMENT=1.5 # Gas adjustment\nAKASH_KEYRING_BACKEND=os # Keyring backend\nAKASH_FROM=default # From account\nAKASH_FEES=20000uakt # Fees\nAKASH_DEPOSIT=500000uakt # Deposit\nAKASH_MNEMONIC= # Mnemonic\nAKASH_WALLET_ADDRESS= # Wallet address\nAKASH_PRICING_API_URL=https://console-api.akash.network/v1/pricing # Pricing API\nAKASH_DEFAULT_CPU=1000 # Default CPU\nAKASH_DEFAULT_MEMORY=1000000000 # Default memory\nAKASH_DEFAULT_STORAGE=1000000000 # Default storage\nAKASH_SDL=example.sdl.yml # SDL file\nAKASH_CLOSE_DEP=closeAll # Close deployment\nAKASH_CLOSE_DSEQ=19729929 # Close DSEQ\nAKASH_PROVIDER_INFO=akash1ccktptfkvdc67msasmesuy5m7gpc76z75kukpz # Provider info\nAKASH_DEP_STATUS=dseq # Deployment status\nAKASH_DEP_DSEQ=19729929 # Deployment DSEQ\nAKASH_GAS_OPERATION=close # Gas operation\nAKASH_GAS_DSEQ=19729929 # Gas DSEQ\nAKASH_MANIFEST_MODE=auto # Manifest mode\nAKASH_MANIFEST_PATH= # Manifest path\nAKASH_MANIFEST_VALIDATION_LEVEL=strict # Validation level\n\n# Pyth\nPYTH_NETWORK_ENV=mainnet # Network environment\nPYTH_MAINNET_HERMES_URL=https://hermes.pyth.network # Mainnet Hermes URL\nPYTH_MAINNET_WSS_URL=wss://hermes.pyth.network/ws # Mainnet WSS URL\nPYTH_MAINNET_PYTHNET_URL=https://pythnet.rpcpool.com # Mainnet Pythnet URL\nPYTH_MAINNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids # Registry\nPYTH_MAINNET_PROGRAM_KEY= # Program key\nPYTH_TESTNET_HERMES_URL=https://hermes.pyth.network # Testnet Hermes URL\nPYTH_TESTNET_WSS_URL=wss://hermes.pyth.network/ws # Testnet WSS URL\nPYTH_TESTNET_PYTHNET_URL=https://pythnet.rpcpool.com # Testnet Pythnet URL\nPYTH_TESTNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids#testnet # Registry\nPYTH_TESTNET_PROGRAM_KEY= # Program key\nPYTH_MAX_RETRIES=3 # Max retries\nPYTH_RETRY_DELAY=1000 # Retry delay (ms)\nPYTH_TIMEOUT=5000 # Timeout (ms)\nPYTH_GRANULAR_LOG=true # Granular logging\nPYTH_LOG_LEVEL=debug # Log level for debugging\nPYTH_LOG_LEVEL=info # Log level for production\nPYTH_ENABLE_PRICE_STREAMING=true # Enable price streaming\nPYTH_MAX_PRICE_STREAMS=2 # Max price streams\nPYTH_TEST_ID01=0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43 # Test ID\nPYTH_TEST_ID02=0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace # Test ID\n\n# Misc Plugins\nINTIFACE_WEBSOCKET_URL=ws://localhost:12345 # Intiface WebSocket URL\nGIPHY_API_KEY= # API key from giphy\nOPEN_WEATHER_API_KEY= # OpenWeather API key\nPASSPORT_API_KEY= # Gitcoin Passport key\nPASSPORT_SCORER= # Scorer number\nTAVILY_API_KEY= # Web search API key\nECHOCHAMBERS_API_URL=http://127.0.0.1:3333 # API URL\nECHOCHAMBERS_API_KEY=testingkey0011 # API key\nECHOCHAMBERS_USERNAME=eliza # Username\nECHOCHAMBERS_ROOMS=general # Comma-separated room list\nECHOCHAMBERS_POLL_INTERVAL=60 # Poll interval (sec)\nECHOCHAMBERS_MAX_MESSAGES=10 # Max messages\nECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL=300 # Check interval (sec)\nECHOCHAMBERS_QUIET_PERIOD=900 # Quiet period (sec)\nSUNO_API_KEY= # Suno AI music generation\nUDIO_AUTH_TOKEN= # Udio AI music generation\nFOOTBALL_API_KEY= # Football-Data.org API key\nIMGFLIP_USERNAME= # Imgflip username\nIMGFLIP_PASSWORD= # Imgflip password\nRUNTIME_CHECK_MODE=false # Runtime check mode\n'})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,a.jsx)(n.h3,{id:"how-do-i-configure-different-model-providers",children:"How do I configure different model providers?"}),"\n",(0,a.jsxs)(n.p,{children:["Set ",(0,a.jsx)(n.code,{children:"modelProvider"})," in your character.json and add corresponding API keys in ",(0,a.jsx)(n.code,{children:".env"})," or character secrets. Supports Anthropic, OpenAI, DeepSeek, and others."]}),"\n",(0,a.jsx)(n.h3,{id:"how-do-i-adjust-the-temperature-setting-in-my-character-file",children:"How do I adjust the temperature setting in my character file?"}),"\n",(0,a.jsx)(n.p,{children:"The temperature setting controls response randomness and can be configured in your character's JSON file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "modelProvider": "openrouter",\n    "temperature": 0.7,\n    "settings": {\n        "model": "openai/gpt-4o-mini"\n        "maxInputTokens": 200000,\n        "maxOutputTokens": 8192\n    }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Increase temperature for more creative responses, decrease for more consistent outputs."}),"\n",(0,a.jsx)(n.h3,{id:"im-getting-an-authentication-error-no-auth-credentials-found-what-should-i-do",children:'I\'m getting an authentication error ("No auth credentials found"). What should I do?'}),"\n",(0,a.jsx)(n.p,{children:"Check these common issues:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Verify API keys in your .env file"}),"\n",(0,a.jsxs)(n.li,{children:["Ensure keys are properly formatted (OpenAI keys start with ",(0,a.jsx)(n.code,{children:"sk-"}),", Groq with ",(0,a.jsx)(n.code,{children:"gsk_"}),", etc.)"]}),"\n",(0,a.jsx)(n.li,{children:"Check logs for specific authentication errors"}),"\n",(0,a.jsx)(n.li,{children:"Try restarting the application after updating credentials"}),"\n",(0,a.jsx)(n.li,{children:"For character-specific providers, ensure they have access to the needed keys"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"how-do-i-debug-when-my-agent-isnt-responding",children:"How do I debug when my agent isn't responding?"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Enable debug logging: ",(0,a.jsx)(n.code,{children:"DEBUG=eliza:*"})," in your .env file"]}),"\n",(0,a.jsx)(n.li,{children:"Check database for saved messages"}),"\n",(0,a.jsx)(n.li,{children:"Verify model provider connectivity"}),"\n",(0,a.jsx)(n.li,{children:"Review logs for error messages"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"how-do-i-control-my-agents-behavior-across-platforms",children:"How do I control my agent's behavior across platforms?"}),"\n",(0,a.jsxs)(n.p,{children:["Configure platform-specific settings in ",(0,a.jsx)(n.code,{children:".env"})," (like ",(0,a.jsx)(n.code,{children:"TWITTER_TARGET_USERS"}),") and adjust response templates in your character file."]})]})}function l(e={}){const{wrapper:n}={...(0,_.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}}}]);